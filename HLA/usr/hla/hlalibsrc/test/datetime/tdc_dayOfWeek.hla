program DayOfWeek_test;
#include( "stdlib.hhf" )
#include( "dtClass.hhf" )

static
	incDate		:date.daterec;
	endDate		:date.daterec;
	
	weekDay		:dword;
	
	dc			:dateClass;
	vdc			:dateClass;
		
	
begin DayOfWeek_test;

	date.setFormat( date.mmddyyyy );
	dc.create();
	vdc.create();
	
	date.pack( 1, 1, date.minYear, incDate );
	mov( 6, weekDay );	// it's a Saturday
	
	date.pack( 12, 31, date.maxYear-1, endDate );
	
	while( mov( endDate, eax ) >= (type dword incDate) ) do
	
		dc.dayOfWeek();
		mov( eax, ebx );
		vdc.dayOfWeek();
		mov( eax, ecx );
		date.dayOfWeek( incDate );		
		if
		( 
				eax <> weekDay
			||	ebx <> eax 
			||	ecx <> eax 
		) then
		
			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"dateClass.dayOfWeek failed!", nl,
				"dayOfWeek= ", (type uns32 eax ), nl
				"weekDay =  ", (type uns32 weekDay ), nl,
				"dc.dow =   ", (type uns32 ebx ), nl,
				"vdc.dow =  ", (type uns32 ecx ), nl,
				"date =    '"
			);
			date.a_toString( incDate );
			stderr.put
			(
				(type string eax), "'" nl
				"***************************************************" nl
				nl 
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
		inc( weekDay );
		date.addDays( 1, incDate );
		dc.addDays( 1 );
		vdc.addDays( 1 );
		if( weekDay = 7 ) then
		
			mov( 0, weekDay );
			
		endif;
		
		
	endwhile;
	stderr.put( "dateClass.dayOfWeek succeeded!" nl );
	os.exitProcess(0);
		
end DayOfWeek_test;

													