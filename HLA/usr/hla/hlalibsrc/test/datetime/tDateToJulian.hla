program Julian_test;
#include( "stdlib.hhf" )

static
	baseDate	:date.daterec;
	endDate		:date.daterec;
	
	julianDay	:dword;	
	
begin Julian_test;

	stderr.put( "Testing toJulian" nl );
	 
	date.setFormat( date.mmddyyyy );

	// This code assumes that date.minYear is 1600!!!
	
	date.pack( 1, 1, date.minYear, baseDate );
	date.pack( 12, 31, date.minYear+2, endDate );
	
	// Note: 2305448 is the Julian Day number for 1/1/1600
	// (determined externally of the stdlib routines).
	
	mov( 2305448, julianDay );
	
	
	while( mov( baseDate, eax ) <= (type dword endDate) ) do
	
		date.toJulian( baseDate );
		if( eax <> julianDay ) then

			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"date.toJulian failed!", nl,
				"Date= '"
			);
			mov( eax, ebx );
			date.a_toString( baseDate );
			stderr.put
			(
				(type string eax), nl
				"JulianDay=", (type uns32 julianDay), nl
				"date.toJulian(date)=", (type uns32 ebx), nl
				"***************************************************" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;
		inc( julianDay );
		movzx( baseDate.day, eax );
		movzx( baseDate.month, ebx );
		if( ebx <> 2 ) then
		
			if( eax >= date.DaysInMonth[ebx*4] ) then
			
				mov( 1, baseDate.day );
				add( 1, ebx );
				if( ebx > 12 ) then
				
					add( 1, baseDate.year );
					mov( 1, baseDate.month );
					
				else
				
					mov( bl, baseDate.month );
					
				endif;
				
			else
			
				add( 1, baseDate.day );
				
			endif;
			
		else
		
			if( eax < 28 ) then
			
				inc( baseDate.day );
				
			elseif( eax = 28 && date.isLeapYear( baseDate.year )) then
			
				inc( baseDate.day );
				
			else
			
				mov( 1, baseDate.day );
				mov( 3, baseDate.month );
				
			endif;
			
		endif;
		
	endwhile;
	stderr.put( "date.toJulian succeeded!" nl );
	os.exitProcess(0);
		
end Julian_test;

													