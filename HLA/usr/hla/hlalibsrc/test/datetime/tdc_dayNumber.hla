program DayNumber_test;
#include( "stdlib.hhf" )
#include( "dtClass.hhf" )

static
	incDate		:date.daterec;
	endDate		:date.daterec;
	
	dayNum		:dword;
	
	curYear		:word;
	
	dc			:dateClass;
	vdc			:virtualDateClass;
	
	
begin DayNumber_test;

	 
	date.setFormat( date.mmddyyyy );
	dc.create();
	vdc.create();
	
	mov( 1, dayNum );
	mov( date.minYear, curYear );
	date.pack( 1, 1, date.minYear, incDate );
	
	date.pack( 12, 31, date.maxYear-1, endDate );
	
	while( mov( endDate, eax ) >= (type dword incDate) ) do
	
		dc.dayNumber();
		mov( eax, ebx );
		vdc.dayNumber();
		mov( eax, ecx );
		date.dayNumber( incDate );		
		if
		( 
				eax <> dayNum 
			||	eax <> ecx 
			||	eax <> ebx
		) then
		
			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"dateClass.dayNumber failed!", nl,
				"incDate= ", (type uns32 eax ), nl
				"dayNum=  ", (type uns32 dayNum ), nl,
				"dc.dayNum=", (type uns32 ebx ), nl,
				"vdc.dayNum=", (type uns32 ecx), nl,
				"date =  '"
			);
			date.a_toString( incDate );
			stderr.put
			(
				(type string eax), "'" nl
				"***************************************************" nl
				nl 
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
		inc( dayNum );
		date.addDays( 1, incDate );
		dc.addDays(1);
		vdc.addDays(1);
		mov( incDate.year, ax );
		if( ax <> curYear ) then
		
			mov( ax, curYear );
			mov( 1, dayNum );
			
		endif;
		
		
	endwhile;
	stderr.put( "dateClass.dayNumber succeeded!" nl );
	os.exitProcess(0);
		
end DayNumber_test;

													