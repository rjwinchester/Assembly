program FromJulian_test;
#include( "stdlib.hhf" )
#include( "dtClass.hhf" )

static
	resultDate	:date.daterec;
	incDate		:date.daterec;
	endDate		:date.daterec;
	
	JulianDay	:dword;
	
	dc			:dateClass;
	vdc			:virtualDateClass;		
	
begin FromJulian_test;

	 
	date.setFormat( date.mmddyyyy );
	dc.create();
	vdc.create();
	
	date.pack( 1, 1, date.minYear, incDate );
	date.toJulian( incDate );
	mov( eax, JulianDay );
		
	date.pack( 1, 1, date.maxYear-1, endDate );
	while( mov( endDate, eax ) >= (type dword incDate) ) do
	
		dc.fromJulian( JulianDay );
		mov( dc.theDate, ecx );
		vdc.fromJulian( JulianDay );
		mov( vdc.theDate, edx );
		date.fromJulian( JulianDay, resultDate );
		mov( resultDate, eax );		
		if
		( 
				eax <> (type dword incDate)
			||	ecx <> eax
			||	edx <> eax 
		) then
		
			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"dateClass.fromJulian failed!", nl,
				"fromJulian =  "
			);
			date.a_toString( resultDate );
			stderr.put
			(
				(type string eax ), nl,
				"Julian     =  "
			);
			date.a_toString( incDate );
			stderr.put
			(
				(type string eax ), nl,
				"dc = ", dc, nl,
				"vdc= ", vdc, nl,
				"***************************************************" nl
				nl 
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		date.addDays( 1, incDate );
		dc.addDays( 1 );
		vdc.addDays( 1 );
		inc( JulianDay );
		
	endwhile;
	stderr.put( "dateClass.fromJulian succeeded!" nl );
	os.exitProcess(0);
		
end FromJulian_test;

													