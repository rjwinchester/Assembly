program isLeapYear_test;
#include( "stdlib.hhf" )
#include( "dtClass.hhf" )

static
	year		:word;
	
	dc			:dateClass;
	vdc			:virtualDateClass;	
		
	
begin isLeapYear_test;

	mov( date.minYear, year );
	dc.create();
	vdc.create();
	while( year <= date.maxYear-1 ) do
	
		xor( ecx, ecx );		// Assume it's not a leap year
		movzx( year, eax );
		test( %11, eax );
		if( @z ) then
		
			inc( ecx );			// Assume it is a leap year.
			
			// Divisible by four, also by 100?
			
			xor( edx, edx );
			div( 100, edx:eax );
			test( edx, edx );
			if( @z ) then
			
				dec( ecx );	// Assume it's not a leap year
				
				// Divisible by 100, also by 400?
				
				test( %11, eax );
				if( @z ) then
				
					inc( ecx ); // It is a leap year
					
				endif;
				
			endif;
			
		endif;
		dc.isLeapYear();
		mov( eax, ebx );
		vdc.isLeapYear();
		mov( eax, edx );
		date.isLeapYear( year );
		
		if
		( 
				eax <> ecx 
			||	eax <> ebx
			||	eax <> edx
		) then
		
			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"dateClass.isLeapYear failed!", nl,
				"year =  ", (type uns16 year ), nl,
				"ecx=", (type boolean cl), nl,
				"eax=", (type boolean al), nl,
				"ebx=", (type boolean bl), nl,
				"edx=", (type boolean dl), nl,
				"***************************************************" nl
			);
			os.exitProcess(1);
			
		endif;
		inc( year );
		inc( dc.theDate.year );
		inc( vdc.theDate.year );	
		
	endwhile;
	stderr.put( "dateClass.isLeapYear succeeded!" nl );
	os.exitProcess(0);
		
end isLeapYear_test;

													