program isValid_test;
#include( "stdlib.hhf" )

static
	baseTime	:timeClass;
	endTime		:time.timerec;	
	
begin isValid_test;

	baseTime.create();
	mov( 0, baseTime.theTime );
	mov( 59, endTime.secs );
	mov( 59, endTime.mins );
	mov( 25, endTime.hours );
	
	while( mov( baseTime.theTime, eax ) <= (type dword endTime) ) do
	
		begin continueTest;
	
			mov( baseTime.theTime.hours, bx );
			if( bx in 0..23 ) then
			
				mov( baseTime.theTime.mins, cl );
				if( cl in 0..59 ) then
				
					mov( baseTime.theTime.secs, cl );
					if( cl in 0..59 ) then
					
						if( !baseTime.isValid()) then
					
							stderr.put
							( 
								nl nl 
								"***************************************************" 
								nl
								"timeClass.isValid failed!", nl,
								"Time= '",
								(type uns8 baseTime.theTime.hours),
								":",
								(type uns8 baseTime.theTime.mins),
								":",
								(type uns16 baseTime.theTime.secs ),
								nl
							);
							stdout.put( "Press Enter to Continue: " );
							stdin.readLn();
							os.exitProcess(1);
							
						endif;
						exit continueTest;
						
					endif;
					

				endif;
				
				
			endif;
		
			if( baseTime.isValid()) then
		
				stderr.put
				( 
					nl nl 
					"***************************************************" nl
					"timeClass.isValid should have failed!", nl,
					"Time= '",
					(type uns8 baseTime.theTime.hours),
					":",
					(type uns8 baseTime.theTime.mins),
					":",
					(type uns16 baseTime.theTime.secs ),
					nl
				);
				stdout.put( "Press Enter to Continue: " );
				stdin.readLn();
				os.exitProcess(1);
				
			endif;

		end continueTest;
		add( 1, baseTime.theTime.secs );
		adc( 0, baseTime.theTime.mins );
		adc( 0, baseTime.theTime.hours );
		
	endwhile;
	stderr.put( "timeClass.isValid succeeded!" nl );
	os.exitProcess(0);
		
end isValid_test;

													