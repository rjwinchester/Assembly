program addHours_test;
#include( "stdlib.hhf" )

static
	baseTime	:time.timerec;
	sumTime		:timeClass;
	baseSeconds	:dword;
	seconds		:dword;
	days		:dword;
	_ebx		:uns32;	
	
begin addHours_test;
	
	mov( 0, baseTime );
	mov( 0, baseSeconds );
	sumTime.create();
	repeat
			
		for( mov( 1, ebx ); ebx <= 30; inc( ebx )) do
		
			mov( ebx, _ebx );
			mov( baseTime, eax );
			mov( eax, sumTime.theTime );
			movzx( baseTime.hours, eax );
			add( ebx, eax );
			
			try
			
				intmul( 3600, ebx, eax );
				add( baseSeconds, eax );
				mov( eax, seconds );
				
				// addHours returns day overflow in EAX:
				
				sumTime.addHours( ebx );
				
				// Compute the number of expected day overflows
				// in ECX (0..2):
				
				movzx( baseTime.hours, ecx );
				add( ebx, ecx );
				if( ecx < 24 ) then
				
					mov( 0, ecx );
					
				elseif( ecx < 48 ) then
				
					mov( 1, ecx );
					
				elseif( ecx < 72 ) then
				
					mov( 2, ecx );
					
				else
				
					lea( ecx, [eax+1] ); // Guarantee mismatch
				
				endif;
				
				// Error if the number of overflow days
				// does not match.
				
				cmp( eax, ecx );
				jne timeAddHoursFailed1;
				
				// Convert to seconds and verify
				// against our incrementing seconds value:
				
				sumTime.toSecs();
				intmul( 60*60*24, ecx );	// Seconds in overflow days.
				add( ecx, eax );			// Seconds plus overflow days.
				cmp( eax, seconds );
				jne timeAddHoursFailed2;
				
			  anyexception
			  
			  	jmp timeAddHoursFailed3;
			  					
			endtry;
				
		
		endfor;
		time.addSecs( 1, baseTime );	// returns 1 on overflow.
		inc( baseSeconds );
		
	until( eax <> 0 );
	stderr.put( "timeClass.addHours succeeded!" nl );
	os.exitProcess(0);
	
timeAddHoursFailed3:
	mov( 3, bl );
	jmp timeAddHoursFailed;
	
timeAddHoursFailed2:
	mov( 2, bl );
	jmp timeAddHoursFailed;
	
timeAddHoursFailed1:
	mov( 1, bl );
timeAddHoursFailed:
	stderr.put
	( 
		nl nl 
		"***************************************************" 
		nl
		"timeClass.addHours failed! (", (type uns8 bl), ")", nl,
		"Time= ",
		(type uns8 baseTime.hours),
		":",
		(type uns8 baseTime.mins),
		":",
		(type uns16 baseTime.secs ),
		"+",
		_ebx,
		" Seconds = ", (type uns32 eax), " should be ", (type uns32 seconds),
		nl
	);
	stdout.put( "Press Enter to Continue: " );
	stdin.readLn();
	os.exitProcess(1);
					

		

		
end addHours_test;

													