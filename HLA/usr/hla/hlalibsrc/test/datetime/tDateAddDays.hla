program DateAddDays_test;
#include( "stdlib.hhf" )

static
	baseDate	:date.daterec;
	incDate		:date.daterec;
	sumDate		:date.daterec;
	
	tmp			:date.daterec;
	
	baseJul		:dword;
	incJul		:dword;
	finalJul	:dword;
	
	days		:dword;
	
	
begin DateAddDays_test;

	 
	date.setFormat( date.mmddyyyy );

	date.toJulian( 1, 1, date.minYear );
	mov( eax, baseJul );
	mov( eax, incJul );
	
	date.toJulian( 12, 31, date.maxYear-1 );
	mov( eax, finalJul );
	
	date.pack( 1, 1, date.minYear, baseDate );
	mov( (type dword baseDate), eax );
	
	// A quick test of date.pack involving EAX:
	
	mov( eax, ebx );
	shr( 16, ebx );
	date.pack( ah, al, bx, incDate );
	
	mov( (type dword baseDate), ebx );
	mov( ebx, eax );
	shr( 16, eax );
	date.pack( bh, bl, ax, sumDate );
	
	mov( 0, days );
	while( mov( incJul, eax ) <= finalJul ) do
	
		inc( days );
		inc( incJul );
		mov( (type dword baseDate), eax );
		mov( eax, sumDate );
		date.addDays( days, sumDate ); 
		date.addDays( 1, incDate );
		
		date.toJulian( incDate );
		mov( eax, ebx );
		date.toJulian( sumDate ); 
		if( eax <> ebx || eax <> incJul ) then
		
			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"date.dateAddDays failed!", nl,
				"incDate= '"
			);
			date.a_toString( incDate );
			stderr.put
			(
				(type string eax), "'" nl
				"incJul=  '"
			);
			str.free( eax );
			date.fromJulian( incJul, tmp );
			date.a_toString( tmp );
			stderr.put
			(
				(type string eax), "'" nl
			
				"***************************************************" nl
				nl 
			);
			str.free( eax );
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
	endwhile;
	stderr.put( "date.dateAddDays succeeded!" nl );
	os.exitProcess(0);
		
end DateAddDays_test;

													