program valid_test;
#include( "stdlib.hhf" )

static
	baseDate	:date.daterec;
	endDate		:date.daterec;
	
begin valid_test;

	 
	date.setFormat( date.mmddyyyy );

	date.pack( 1, 1, date.minYear, baseDate );
	date.pack( 12, 31, date.maxYear-1, endDate );
	
	while( mov( baseDate, eax ) <= (type dword endDate) ) do
	
		movzx( baseDate.month, ebx );
		if( ebx in 1..12 ) then
		
			movzx( baseDate.day, ecx );
			xor( eax, eax );
			if( ebx == 2 ) then
			
				date.isLeapYear( baseDate.year );
				
			endif;
			add( date.DaysInMonth[ebx*4], eax );
			if( ecx > 0 && ecx <= eax ) then
			
				try
				
					date.validate( baseDate );
					
				  exception( ex.InvalidDate )
			
					stderr.put
					( 
						nl nl 
						"***************************************************" nl
						"date.validate failed!", nl,
						"Date= '",
						(type uns8 baseDate.month),
						"/",
						(type uns8 baseDate.day),
						"/",
						(type uns16 baseDate.year ),
						nl
					);
					stdout.put( "Press Enter to Continue: " );
					stdin.readLn();
					os.exitProcess(1);
					
				  anyexception
				  
					stderr.put
					( 
						nl nl 
						"***************************************************" nl
						"date.validate failed! Bad Exception!", nl,
						"Exception= '", eax, nl,
						nl
					);
					stdout.put( "Press Enter to Continue: " );
					stdin.readLn();
					os.exitProcess(1);

				endtry;


			else
			
				try
				
					date.validate( baseDate );
			
					stderr.put
					( 
						nl nl 
						"***************************************************" nl
						"date.validate should have raised an exception! (2)", nl,
						"Date= '",
						(type uns8 baseDate.month),
						"/",
						(type uns8 baseDate.day),
						"/",
						(type uns16 baseDate.year ),
						nl
					);
					stdout.put( "Press Enter to Continue: " );
					stdin.readLn();
					os.exitProcess(1);
					
				  exception( ex.InvalidDate );
				  
				  	// This is the condition we expect.
					
				  anyexception
				  
					stderr.put
					( 
						nl nl 
						"***************************************************" nl
						"date.validate failed! Bad Exception! (2)", nl,
						"Exception= '", eax, nl,
						nl
					);
					stdout.put( "Press Enter to Continue: " );
					stdin.readLn();
					os.exitProcess(1);
			
				endtry;

			endif;
			
		else
		
			try
				
				date.validate( baseDate );
				stderr.put
				( 
					nl nl 
					"***************************************************" nl
					"date.validate should have failed! (3)", nl,
					"Date= '",
					(type uns8 baseDate.month),
					"/",
					(type uns8 baseDate.day),
					"/",
					(type uns16 baseDate.year ),
					nl
				);
				stdout.put( "Press Enter to Continue: " );
				stdin.readLn();
				os.exitProcess(1);
				
					
			  exception( ex.InvalidDate );
			  
			  	// This is the condition we expect.
				
			  anyexception
			  
				stderr.put
				( 
					nl nl 
					"***************************************************" nl
					"date.validate failed! Bad Exception! (3)", nl,
					"Exception= '", eax, nl,
					nl
				);
				stdout.put( "Press Enter to Continue: " );
				stdin.readLn();
				os.exitProcess(1);

				
			endtry;

		endif;
		add( 1, baseDate.day );
		adc( 0, baseDate.month );
		adc( 0, baseDate.year );
		
	endwhile;
	stderr.put( "date.validate succeeded!" nl );
	os.exitProcess(0);
		
end valid_test;

													