program DatePlusYears_test;
#include( "stdlib.hhf" )

static
	baseDate	:date.daterec;
	incDate		:date.daterec;
	addDate		:date.daterec;
	
	altDate		:date.daterec;
	endDate		:date.daterec;
	
	years		:dword;
	dc			:dateClass;
	vdc			:virtualDateClass;
	
	
begin DatePlusYears_test;

	dc.create();
	vdc.create();
	date.setFormat( date.mmddyyyy );
	dc.setFormat( date.mmddyyyy );
	vdc.setFormat( date.mmddyyyy );
	
	date.pack( 12, 1, date.minYear, baseDate );
	mov( (type dword baseDate), eax );
	mov( eax, (type dword incDate));
	mov( eax, (type dword addDate));
	mov( eax, (type dword altDate));
	mov( eax, (type dword dc.theDate));
	mov( eax, (type dword vdc.theDate));
	
	date.pack( 12, 1, date.maxYear-1, endDate );
	
	mov( 0, years );
	while( mov( endDate, eax ) >= (type dword altDate) ) do
	
		inc( years );
		mov( (type dword baseDate), eax );
		mov( eax, addDate );
		mov( eax, vdc.theDate );
		date.addYears( years, addDate ); 
		date.addYears( 1, incDate );
		dc.addYears(1);
		vdc.addYears(years);
		
		inc( altDate.year );
		mov( addDate, eax );
		mov( incDate, ebx );
		mov( altDate, ecx );
		if
		( 
				eax <> ebx 
			||	eax <> ecx
			||	eax <> (type dword dc.theDate)
			||	eax <> (type dword vdc.theDate) 
		) then
		
			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"dateClass.addYears failed!", nl,
				"incDate= '"
			);
			date.a_toString( incDate );
			stderr.put
			(
				(type string eax), "'" nl
				"addDate=  '"
			);
			date.a_toString( addDate );
			stderr.put
			(
				(type string eax), "'" nl
			);
			date.a_toString( altDate );
			stderr.put
			(
				(type string eax), "'" nl
				"dc.date = '", dc, "'" nl
				"vdc.date ='", vdc, "'" nl
				"***************************************************" nl
				nl 
			);
			str.free( eax );
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
	endwhile;
	stderr.put( "dateClass.addYears succeeded!" nl );
	os.exitProcess(0);
		
end DatePlusYears_test;

													