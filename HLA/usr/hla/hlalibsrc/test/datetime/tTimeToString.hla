program toStr_test;
#include( "stdlib.hhf" )

static
	baseTime	:time.timerec;
	hours		:uns32;
	hours12		:uns32;
	mins		:uns32;
	secs		:uns32;
	timeFMT		:time.OutputFormat;
	align(4);
	timeStr		:string;
	cmpStr		:str.strvar(16);
	hoursStr	:str.strvar(4);
	minsStr		:str.strvar(4);
	secsStr		:str.strvar(4);
	ampm		:string;
	
	ampmStrs	:string[8,2] :=
				[
					["am", "pm"],
					["a", "p"],
					["", ""],
					["", ""],
					["am", "pm"],
					["a", "p"],
					["", ""],
					["", ""]
				];
	
	
		
begin toStr_test;
	
	
	for
	( 
		mov( time.hhmmssAMPM, timeFMT ); 
		timeFMT < time.badTimeFormat; 
		inc( timeFMT )
	) do
	
		time.setFormat( timeFMT );
		for( mov( 0, hours ); hours < 24; inc( hours )) do
		
			movzx( timeFMT, ebx );
			shl( 1, ebx );
			mov( hours, eax );
			if( timeFMT != time.hhmm24 && timeFMT != time.hhmmss24 ) then
			
				if( eax > 12 ) then
				
					sub( 12, eax );
					inc( ebx );
					
				elseif( eax = 12 ) then
				
					inc( ebx );
					
				elseif( eax = 0 ) then
				
					add( 12, eax );
											
				endif;
				
			endif;
			mov( eax, hours12 );
			mov( ampmStrs[ ebx*4 ], ebx );
			mov( ebx, ampm );
			for( mov( 0, mins ); mins < 60; inc( mins )) do
			
				for( mov( 0, secs ); secs < 60; inc( secs )) do
				
					time.pack( hours, mins, secs, baseTime );
					time.a_toString( baseTime );
					mov( eax, timeStr );
					
					conv.u32ToStr( hours12, 2, '0', hoursStr );
					conv.u32ToStr( mins,  2, '0', minsStr );
					conv.u32ToStr( secs,  2, '0', secsStr );
					if( timeFMT >= time.hhmmAMPM ) then
					
						str.put( cmpStr, hoursStr, ':', minsStr, ampm );
					
					else
					
						str.put( cmpStr, hoursStr, ':', minsStr, ':', secsStr, ampm );
					
					endif;
					str.eq( timeStr, cmpStr );
					test( eax, eax );
					jz timeToStrFailed1;
					
					str.free( timeStr );
									
				endfor;
				
			endfor;
			
		endfor;
	
	endfor;		
	stderr.put( "time.toString succeeded!" nl );
	os.exitProcess(0);
	

timeToStrFailed1:
	mov( 1, bl );
	
timeToStrFailed:
	stderr.put
	( 
		nl nl 
		"***************************************************" 
		nl
		"time.toString failed! (", (type uns8 bl), ")", nl,
		" hours=", hours, " mins=", mins, " secs=", secs, nl,
		"timeStr = ",
		timeStr,
		nl,
		"cmpStr= ",
		cmpStr,
		nl 
	);
	stdout.put( "Press Enter to Continue: " );
	stdin.readLn();
	os.exitProcess(1);
					
end toStr_test;

													