program tMemmap;
#include( "stdlib.hhf" )

const
	mmapESI	:text := "(type mmap [esi])";
	
static
	m1	:mmap;
	m2	:mmap;
	pm	:pointer to mmap;
	msg	:str.strvar(256);
	
begin tMemmap;

	try
	
		m1.create();
		m2.create();
				
		m1.open( "tMemmap.hla", fileio.r );
		m2.openNew( "mmCopy.hla", m1.fileSize );
		
		mov( m1.filePtr, esi );
		mov( m2.filePtr, edi );
		mov( m1.fileSize, ecx );
		cld();
		rep.movsb();
		
		m1.close();
		m2.destroy();
		
		if( m1.getOpen() ) then
		
			stderr.put( "mmap: getOpen(m1) reported true (should be false)!" nl );
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
		
		m2.create();
		m2.open( "mmCopy.hla", fileio.r );
		mmap.create();
		mov( esi, pm );
		pm.open( "tMemmap.hla", fileio.r );
		
		mov( pm, esi );
		mov( mmapESI.filePtr, edi );
		mov( mmapESI.fileSize, ecx );
		mov( m2.filePtr, esi );
		if( ecx <> m2.fileSize ) then
		
			stderr.put( "mmap: file sizes do not agree!" nl );
			stderr.put( "m2.fileSize = ", (type uns32 ecx), nl );
			stderr.put( "pm.fileSize = ", (type uns32 mmapESI.fileSize), nl );
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		repe.cmpsb();
		if( @ne ) then
		
			stderr.put( "mmap: files are different!" nl );
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
		m2.getFileName();
		mov( eax, ebx );
		if( str.ne( eax, "mmCopy.hla" )) then
		
			stderr.put
			( 
				"mmap: 'mmCopy.hla' filename mismatch, found: ",
				(type string ebx),
				nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
		pm.getFileName();
		mov( eax, ebx );
		if( str.ne( eax, "tMemmap.hla" )) then
		
			stderr.put
			( 
				"mmap: 'tMemmap.hla' filename mismatch, found: ",
				(type string ebx),
				nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
		if( m2.getMalloc() ) then
		
			stderr.put( "mmap: getMalloc(m2) reported true (should be false)!" nl );
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
		if( !pm.getMalloc() ) then
		
			stderr.put( "mmap: getMalloc(pm) reported false (should be true)!" nl );
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
		if( !m2.getOpen() ) then
		
			stderr.put( "mmap: getOpen(m2) reported false (should be true)!" nl );
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		if( !pm.getOpen() ) then
		
			stderr.put( "mmap: getOpen(pm) reported false (should be true)!" nl );
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;	
		m2.destroy();
		pm.destroy();
		
		filesys.delete( "mmCopy.hla" ); 
		
	  anyexception
	  
	  	mov( eax, ebx );
	  	ex.exceptionMsg( eax, msg );
	  	stderr.put
		( 
			"tMemmap failed! Unexpected exception, eax=$", eax, nl,
			msg, nl
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	stderr.put( "tMemmap test suite succeeded!" nl );
	
end tMemmap;