// This program tests the pattern-matching string functions.


program patStrs_test;
#include( "stdlib.hhf" )
	
static
	extraction	:str.strvar(256);
	
begin patStrs_test;


	//	procedure zeroOrMoreWS;
	
	// Positive test
	
	pat.match( "aaaab" );
	
		pat.zeroOrMoreWS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.zeroOrMoreWS failed(1a)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( "" );
	
		pat.zeroOrMoreWS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.zeroOrMoreWS failed(1b)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( "  aaa" );
	
		pat.zeroOrMoreWS();
		pat.oneChar( 'a' );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.zeroOrMoreWS failed(1c)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	// There are no failure cases.
	
	// Test back-tracking:
	
	
	pat.match( "   b" );
	
		pat.zeroOrMoreWS();
		pat.oneChar( ' ' );
		pat.oneChar( 'b' );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.zeroOrMoreWS failed(3)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	stderr.put( "pat.zeroOrMoreWS test succeeded!" nl );





	//	procedure oneOrMoreWS;
	
	// Positive test
	
	pat.match( " aaaab" );
				
		pat.oneOrMoreWS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.oneOrMoreWS failed(1a)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( " " );
	
		pat.oneOrMoreWS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.oneOrMoreWS failed(1b)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( "  aaa" );
	
		pat.oneOrMoreWS();
		pat.oneChar( 'a' );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.oneOrMoreWS failed(1c)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	// Failure case.
	
	pat.match( "aaaab" );
				
		pat.oneOrMoreWS();
	  	stderr.put( "pat.oneOrMoreWS failed(2)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	  pat.if_failure
	  
	  // This is what we expect.
	  
	pat.endmatch;
	
	// Test back-tracking:
	
	
	pat.match( "     b" );
	
		pat.oneOrMoreWS();
		pat.oneChar( ' ' );
		pat.oneChar( 'b' );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.oneOrMoreWS failed(3)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	stderr.put( "pat.oneOrMoreWS test succeeded!" nl );
	
	





	//	procedure WSorEOS;
	
	// Positive test
	
	pat.match( " aaaab" );
				
		pat.WSorEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.WSorEOS failed(1a)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( " " );
	
		pat.WSorEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.WSorEOS failed(1b)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( " aaa" );
	
		pat.WSorEOS();
		pat.oneChar( 'a' );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.WSorEOS failed(1c)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( "" );
	
		pat.WSorEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.WSorEOS failed(1d)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	
	// Failure case.
	
	pat.match( "a" );
				
		pat.WSorEOS();
	  	stderr.put( "pat.WSorEOS failed(2)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	  pat.if_failure
	  
	  // This is what we expect.
	  
	pat.endmatch;
	
	// Back-tracking doesn't apply, but check this:
	
	
	pat.match( "     " );
	
		pat.zeroOrMoreWS();
		pat.WSorEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.WSorEOS failed(3)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	stderr.put( "pat.WSorEOS test succeeded!" nl );
	
	





	//	procedure WSthenEOS;
	
	// Positive test
	
	pat.match( " " );
				
		pat.WSthenEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.WSthenEOS failed(1a)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	
	pat.match( "" );
				
		pat.WSthenEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.WSthenEOS failed(1b)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	pat.match( " " );
	
		pat.oneChar( ' ' );
		pat.WSthenEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.WSthenEOS failed(1c)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;

	
	
	// Failure case.
	
	pat.match( "a" );
				
		pat.WSthenEOS();
	  	stderr.put( "pat.WSthenEOS failed(2b)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	  pat.if_failure
	  
	  // This is what we expect.
	  
	pat.endmatch;
	
	
	// Test with back-tracking:
	
	
	pat.match( "     " );
	
		pat.zeroOrMoreWS();
		pat.WSthenEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.WSthenEOS failed(3)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	stderr.put( "pat.WSthenEOS test succeeded!" nl );
	
	





	//	procedure peekWS;
	
	// Positive test
	
	pat.match( " aaaab" );
				
		pat.peekWS();
		pat.matchStr( " aaaab" );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.peekWS failed(1a)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( " " );
	
		pat.peekWS();
		pat.oneChar( ' ' );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.peekWS failed(1b)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	
	// Failure case.
	
	pat.match( "aaaab" );
				
		pat.peekWS();
	  	stderr.put( "pat.peekWS failed(2)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	  pat.if_failure
	  
	  // This is what we expect.
	  
	pat.endmatch;
	
	// Back-tracking doesn't apply:
	
	stderr.put( "pat.peekWS test succeeded!" nl );
	
	





	//	procedure peekWSorEOS;
	
	// Positive test
	
	pat.match( " aaaab" );
				
		pat.peekWSorEOS();
		pat.matchStr( " aaaab" );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.peekWSorEOS failed(1a)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( " " );
	
		pat.peekWSorEOS();
		pat.oneChar( ' ' );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.peekWSorEOS failed(1b)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( "" );
	
		pat.peekWSorEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.peekWSorEOS failed(1c)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	
	
	// Failure case.
	
	pat.match( "a" );
				
		pat.peekWSorEOS();
	  	stderr.put( "pat.peekWSorEOS failed(2)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	  pat.if_failure
	  
	  // This is what we expect.
	  
	pat.endmatch;
	
	// Back-tracking doesn't apply, but check this:
	
	
	pat.match( "     " );
	
		pat.peekWSorEOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.peekWSorEOS failed(3)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	stderr.put( "pat.peekWSorEOS test succeeded!" nl );



	//	procedure arb; 
	
	// Positive test
	
	pat.match( "aaaab" );
	
		pat.arb();
		pat.EOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.arb failed(1a)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( "" );
	
		pat.arb();
		pat.EOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.arb failed(1b)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( "  aaa" );
	
		pat.arb();
		pat.oneChar( 'a' );
		pat.EOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.arb failed(1c)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	// There are no failure cases.
	
	// Test back-tracking:
	
	
	pat.match( "   b" );
	
		pat.arb();
		pat.oneChar( ' ' );
		pat.oneChar( 'b' );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.arb failed(3)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	stderr.put( "pat.arb test succeeded!" nl );



	//	procedure l_arb; 
	
	// Positive test
	
	pat.match( "aaaab" );
	
		pat.l_arb();
		pat.oneChar( 'b' );
		pat.EOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.l_arb failed(1a)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( "" );
	
		pat.l_arb();
		pat.EOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.l_arb failed(1b)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	pat.match( "  bca" );
	
		pat.l_arb();
		pat.oneChar( 'a' );
		pat.EOS();
		
	  pat.if_failure
	  
	  	stderr.put( "pat.l_arb failed(1c)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	
	// There are no failure cases.
	
	// Test back-tracking:
	
	
	pat.match( "   b" );
	
		pat.l_arb();
		pat.oneChar( ' ' );
		pat.oneChar( 'b' );
		
	  pat.if_failure
	  
	  	stderr.put( "pat.l_arb failed(3)!" nl );
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
	  
	pat.endmatch;
	stderr.put( "pat.l_arb test succeeded!" nl );
	
	stderr.put( "tMisc test suite succeeded!" nl );

end patStrs_test;

													