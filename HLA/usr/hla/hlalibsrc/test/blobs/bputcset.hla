program bputcset_test;
#include( "stdlib.hhf" )

static
	c		:cset := {};
	b	:blob.t;
	blb	:byte[9000];
	
begin bputcset_test;

	blob.init( blb, 9000 );
	mov( eax, b );
	blob.reset( b );
	blob.putcset( b, c );
	blob.newln( b );

	or( 1, (type dword c) );
	blob.putcset( b, c );
	blob.newln( b );

	for( mov( 0, ecx ); ecx < 31; inc( ecx )) do

		shl( 1, (type dword c) );
		blob.putcset( b, c );
		blob.newln( b );

	endfor;
	mov( 0, (type dword c) );

	or( 1, (type dword c[4]) );
	blob.putcset( b, c );
	blob.newln( b );
	for( mov( 0, ecx ); ecx < 31; inc( ecx )) do

		shl( 1, (type dword c[4]) );
		blob.putcset( b, c );
		blob.newln( b );

	endfor;
	mov( 0, (type dword c[4]) );



	or( 1, (type dword c[8]) );
	blob.putcset( b, c );
	blob.newln( b );
	for( mov( 0, ecx ); ecx < 31; inc( ecx )) do

		shl( 1, (type dword c[8]) );
		blob.putcset( b, c );
		blob.newln( b );

	endfor;
	mov( 0, (type dword c[8]) );



	or( 1, (type dword c[12]) );
	blob.putcset( b, c );
	blob.newln( b );
	for( mov( 0, ecx ); ecx < 31; inc( ecx )) do

		shl( 1, (type dword c[12]) );
		blob.putcset( b, c );
		blob.newln( b );

	endfor;
	mov( 0, (type dword c[12]) );

	or( 1, (type dword c[4]));
	blob.putcset( b, c );
	blob.newln( b );
	for( mov( 1, ecx ); ecx < 96; inc( ecx )) do

		shl( 1, (type dword c[4]) );
		rcl( 1, (type dword c[8]) );
		rcl( 1, (type dword c[12]) );
		or( 1, (type dword c[4]) );
		blob.putcset( b, c );
		blob.newln( b );

	endfor;

	blob.save( "bputcset.txt", b );

end bputcset_test;

													