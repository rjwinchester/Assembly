program bSub_test;
#include( "stdlib.hhf" )

const
	bufData_c : char[] :=
				[
					'a', #$d, #$a,
					'b', 'c',  #$d, #$a,
					'd', ' ', 'e', 'f', #$d, #$a,
					#$d, #$a,
					'1', '0', '0', #$d, #$a
				];
	

	sub2Data_c : char[] :=
				[
					'a', #$d, #$a,
				];
	
	sub3Data_c : char[] :=
				[
					'b', 'c',  #$d, #$a,
					'd', ' ', 'e', 'f', #$d, #$a,
					#$d, #$a,
					'1', '0', '0', #$d, #$a
				];
	

var
	b1			:blob.blob;
	b2			:blob.blob;
	b2a			:blob.blob;
	b3			:blob.blob;
	bcmp2		:blob.blob;
	bcmp3		:blob.blob;
	
readonly
	bufData		:char[ @elements( bufData_c )] := bufData_c;
	sub2Data	:char[ @elements( sub2Data_c )] := sub2Data_c;
	sub3Data	:char[ @elements( sub3Data_c )] := sub3Data_c;
					 
begin bSub_test;

	try
	
		blob.alloc( 8192 );
		mov( eax, b1 );
		blob.alloc( 8192 );
		mov( eax, b2 );
		blob.alloc( 8192 );
		mov( eax, b3 );
		
		blob.alloc( 8192 );
		mov( eax, bcmp2 );
		blob.alloc( 8192 );
		mov( eax, bcmp3 );
		
		blob.bufToBlob( &bufData, &bufData[@elements( bufData_c )], b1 );
		blob.bufToBlob( &sub2Data, &sub2Data[@elements( sub2Data_c )], bcmp2 );
		blob.bufToBlob( &sub3Data, &sub3Data[@elements( sub3Data_c )], bcmp3 );
		
		stdout.put( "Testing blob.subBlob/blob.a_subBlob" nl );
		blob.subBlob( b1, 0, @elements( sub2Data_c ), b2 );
		blob.subBlob( b1, @elements( sub2Data_c ), @elements( sub3Data_c ), b3 );
		if( blob.ne( b2, bcmp2 ) || blob.ne( b3, bcmp3 ) ) then
		
			stdout.put
			(
				"blob.subBlob failed!" nl
			);
			raise( 1000 );
		
		endif;
		
		
		blob.a_subBlob( b1, 0, @elements( sub2Data_c ) );
		mov( eax, b2a );
		if( blob.ne( b2a, bcmp2 ) ) then
		
			stdout.put
			(
				"blob.a_subBlob failed!" nl
			);
			raise( 1002 );
		
		endif;
		
		
		
	  anyexception

		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"bSub failed!" nl
			"Exception = ", (type uns32 eax), nl
			"***************************************************" nl
			nl 
		);
		os.exitProcess(3);
		
	endtry;
	stderr.put( "bSub succeeded!" nl );
	os.exitProcess(0);
		
end bSub_test;

													