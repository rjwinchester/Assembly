program sputhex_test; 
#include( "stdlib.hhf" )
#includeOnce( "sockets.hhf" )
#includeOnce( "sleep.hhf" )

static
	quit		:dword := 0;
	hostIPadrs	:dword;
	s			:vServer_t;
	timeout		:thunk;
	calls		:dword := 0;
	
	ipAdrsStr	:str.strvar(256);
	cmdLine		:str.strvar(256);
	exmsg		:str.strvar(256);
	
	i			:int32;
	tbVal		:tbyte;
	tbVal2		:tbyte;
	
	
	procedure connected( parm:dword );
		@nodisplay;
		@nostackalign;
		@noframe;
	var
		handle		:dword;
		bufIndex	:dword;
		object		:pointer to vServer_t;
		ipAdrs		:hla.sockaddr;
		
		buffer		:char[64];
		
	begin connected;

		push( ebp );
		mov( esp, ebp );
		sub( _vars_, esp );
		
		pushad();
		pushfd();
		
		mov( eax, handle );
		mov( esi, object );
		
		/*****************************************************************/
		
		mov( $1234_5678, eax );
		mov( eax, (type dword tbVal ));
		mov( eax, (type dword tbVal[4] ));
		mov( $90ab, (type word tbVal[8] ));
		
		mov( eax, (type dword tbVal2));
		mov( 0, (type dword tbVal2[4]));
		mov( 0, (type word tbVal2[8])); 


		conv.setUnderscores( false );

		object.puttb( tbVal );	
		object.newln();
		object.puttb( tbVal2 );	
		object.newln();
		object.newln();

		object.puth80Size( tbVal, 30, '.' );	
		object.newln();
		object.puth80Size( tbVal, -30, '.' );	
		object.newln();
		object.newln();

		object.puth80Size( tbVal2, 12, '.' );	
		object.newln();
		object.puth80Size( tbVal2, -12, '.' );	
		object.newln();
		object.newln();

		conv.setUnderscores( true );
		
		object.puttb( tbVal );	
		object.newln();
		object.puttb( tbVal2 );	
		object.newln();
		object.puth80Size( tbVal, 30, '.' );	
		object.newln();
		object.puth80Size( tbVal, -30, '.' );	
		object.newln();
		object.puth80Size( tbVal2, 12, '.' );	
		object.newln();
		object.puth80Size( tbVal2, -12, '.' );	
		object.newln();
		object.newln();

		object.putb( 0 );
		object.newln();
		object.putb( 1 );
		object.newln();
		object.putb( $7f );
		object.newln();
		object.putb( $80 );
		object.newln();
		object.putb( $FF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth80Size( 0, i, '.' );
			object.newln();
			object.puth80Size( $10, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.putw( 0 );
		object.newln();
		object.putw( $10 );
		object.newln();
		object.putw( $200 );
		object.newln();
		object.putw( $7fff );
		object.newln();
		object.putw( $8000 );
		object.newln();
		object.putw( $FFFF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth16Size( 0, i, '.' );
			object.newln();
			object.puth16Size( $10, i, '.' );
			object.newln();
			object.puth16Size( $100, i, '.' );
			object.newln();
			object.puth16Size( $1000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.putd( 0 );
		object.newln();
		object.putd( $10 );
		object.newln();
		object.putd( $200 );
		object.newln();
		object.putd( $3000 );
		object.newln();
		object.putd( $4_0000 );
		object.newln();
		object.putd( $50_0000 );
		object.newln();
		object.putd( $600_0000 );
		object.newln();
		object.putd( $7000_0000 );
		object.newln();
		object.putd( $7fff_ffff );
		object.newln();
		object.putd( $8000_0000 );
		object.newln();
		object.putd( $FFFF_FFFF );
		object.newln();
		object.newln();
		for( mov( -10, i); i<=10; inc(i)) do

			object.puth32Size( 0, i, '.' );
			object.newln();
			object.puth32Size( $10, i, '.' );
			object.newln();
			object.puth32Size( $100, i, '.' );
			object.newln();
			object.puth32Size( $1000, i, '.' );
			object.newln();
			object.puth32Size( $1_0000, i, '.' );
			object.newln();
			object.puth32Size( $10_0000, i, '.' );
			object.newln();
			object.puth32Size( $100_0000, i, '.' );
			object.newln();
			object.puth32Size( $1000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.putq( 0 );
		object.newln();
		object.putq( $10 );
		object.newln();
		object.putq( $200 );
		object.newln();
		object.putq( $3000 );
		object.newln();
		object.putq( $4_0000 );
		object.newln();
		object.putq( $50_0000 );
		object.newln();
		object.putq( $600_0000 );
		object.newln();
		object.putq( $7000_0000 );
		object.newln();
		object.putq( $8_0000_0000 );
		object.newln();
		object.putq( $90_0000_0000 );
		object.newln();
		object.putq( $A00_0000_0000 );
		object.newln();
		object.putq( $B000_0000_0000 );
		object.newln();
		object.putq( $C_0000_0000_0000 );
		object.newln();
		object.putq( $D0_0000_0000_0000 );
		object.newln();
		object.putq( $E00_0000_0000_0000 );
		object.newln();
		object.putq( $F000_0000_0000_0000 );
		object.newln();
		object.putq( $7fff_ffff_ffff_ffff );
		object.newln();
		object.putq( $8000_0000_0000_0000 );
		object.newln();
		object.putq( $FFFF_FFFF_FFFF_FFFF );
		object.newln();
		object.newln();

		for( mov( -20, i); i<=20; inc(i)) do

			object.puth64Size( 1, i, '.' );
			object.newln();
			object.puth64Size( $10, i, '.' );
			object.newln();
			object.puth64Size( $100, i, '.' );
			object.newln();
			object.puth64Size( $1000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000_0000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.putl( 0 );
		object.newln();
		object.putl( $10 );
		object.newln();
		object.putl( $200 );
		object.newln();
		object.putl( $3000 );
		object.newln();
		object.putl( $4_0000 );
		object.newln();
		object.putl( $50_0000 );
		object.newln();
		object.putl( $600_0000 );
		object.newln();
		object.putl( $7000_0000 );
		object.newln();
		object.putl( $8_0000_0000 );
		object.newln();
		object.putl( $90_0000_0000 );
		object.newln();
		object.putl( $A00_0000_0000 );
		object.newln();
		object.putl( $B000_0000_0000 );
		object.newln();
		object.putl( $C_0000_0000_0000 );
		object.newln();
		object.putl( $D0_0000_0000_0000 );
		object.newln();
		object.putl( $E00_0000_0000_0000 );
		object.newln();
		object.putl( $F000_0000_0000_0000 );
		object.newln();
		object.putl( $1_0000_0000_0000_0000 );
		object.newln();
		object.putl( $20_0000_0000_0000_0000 );
		object.newln();
		object.putl( $300_0000_0000_0000_0000 );
		object.newln();
		object.putl( $4000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $5_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $60_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $700_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $8000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $9_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $A0_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $B00_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $C000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $D_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $E0_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $F00_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $1000_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $7fff_ffff_ffff_ffff_ffff_ffff_ffff_ffff );
		object.newln();
		object.putl( $8000_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF );
		object.newln();
		object.newln();

		for( mov( -40, i); i<=40; inc(i)) do

			object.puth128Size( 0, i, '.' );
			object.newln();
			object.puth128Size( $10, i, '.' );
			object.newln();
			object.puth128Size( $100, i, '.' );
			object.newln();
			object.puth128Size( $1000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		conv.setUnderscores( false );


		object.putb( 0 );
		object.newln();
		object.putb( $7f );
		object.newln();
		object.putb( $80 );
		object.newln();
		object.putb( $FF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth80Size( 0, i, '.' );
			object.newln();
			object.puth80Size( $10, i, '.' );
			object.newln();
			object.newln();

		endfor;

		object.putw( 0 );
		object.newln();
		object.putw( $7fff );
		object.newln();
		object.putw( $8000 );
		object.newln();
		object.putw( $FFFF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth16Size( 0, i, '.' );
			object.newln();
			object.puth16Size( $10, i, '.' );
			object.newln();
			object.puth16Size( $100, i, '.' );
			object.newln();
			object.puth16Size( $1000, i, '.' );
			object.newln();
			object.newln();

		endfor;

		object.putd( 0 );
		object.newln();
		object.putd( $7fff_ffff );
		object.newln();
		object.putd( $8000_0000 );
		object.newln();
		object.putd( $FFFF_FFFF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth32Size( 0, i, '.' );
			object.newln();
			object.puth32Size( $10, i, '.' );
			object.newln();
			object.puth32Size( $100, i, '.' );
			object.newln();
			object.puth32Size( $1000, i, '.' );
			object.newln();
			object.puth32Size( $1_0000, i, '.' );
			object.newln();
			object.puth32Size( $10_0000, i, '.' );
			object.newln();
			object.puth32Size( $100_0000, i, '.' );
			object.newln();
			object.puth32Size( $1000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.putq( 0 );
		object.newln();
		object.putq( $7fff_ffff_ffff_ffff );
		object.newln();
		object.putq( $8000_0000_0000_0000 );
		object.newln();
		object.putq( $FFFF_FFFF_FFFF_FFFF );
		object.newln();
		object.newln();

		for( mov( -20, i); i<=20; inc(i)) do

			object.puth64Size( 0, i, '.' );
			object.newln();
			object.puth64Size( $10, i, '.' );
			object.newln();
			object.puth64Size( $100, i, '.' );
			object.newln();
			object.puth64Size( $1000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000_0000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.putl( 0 );
		object.newln();
		object.putl( $7fff_ffff_ffff_ffff_ffff_ffff_ffff_ffff );
		object.newln();
		object.putl( $8000_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.putl( $FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF );
		object.newln();

		for( mov( -40, i); i<=40; inc(i)) do

			object.puth128Size( 0, i, '.' );
			object.newln();
			object.puth128Size( $10, i, '.' );
			object.newln();
			object.puth128Size( $100, i, '.' );
			object.newln();
			object.puth128Size( $1000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();
		object.newln();
		object.newln();
		
		
		
		
		
		
		

		conv.setUnderscores( false );

		object.puth80( tbVal );	
		object.newln();
		object.puth80( tbVal2 );	
		object.newln();
		object.newln();

		object.puth80Size( tbVal, 30, '.' );	
		object.newln();
		object.puth80Size( tbVal, -30, '.' );	
		object.newln();
		object.newln();

		object.puth80Size( tbVal2, 12, '.' );	
		object.newln();
		object.puth80Size( tbVal2, -12, '.' );	
		object.newln();
		object.newln();

		conv.setUnderscores( true );
		
		object.puth80( tbVal );	
		object.newln();
		object.puth80( tbVal2 );	
		object.newln();
		object.puth80Size( tbVal, 30, '.' );	
		object.newln();
		object.puth80Size( tbVal, -30, '.' );	
		object.newln();
		object.puth80Size( tbVal2, 12, '.' );	
		object.newln();
		object.puth80Size( tbVal2, -12, '.' );	
		object.newln();
		object.newln();

		object.puth8( 0 );
		object.newln();
		object.puth8( 1 );
		object.newln();
		object.puth8( $7f );
		object.newln();
		object.puth8( $80 );
		object.newln();
		object.puth8( $FF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth8Size( 0, i, '.' );
			object.newln();
			object.puth8Size( $10, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.puth16( 0 );
		object.newln();
		object.puth16( $10 );
		object.newln();
		object.puth16( $200 );
		object.newln();
		object.puth16( $7fff );
		object.newln();
		object.puth16( $8000 );
		object.newln();
		object.puth16( $FFFF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth16Size( 0, i, '.' );
			object.newln();
			object.puth16Size( $10, i, '.' );
			object.newln();
			object.puth16Size( $100, i, '.' );
			object.newln();
			object.puth16Size( $1000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.puth32( 0 );
		object.newln();
		object.puth32( $10 );
		object.newln();
		object.puth32( $200 );
		object.newln();
		object.puth32( $3000 );
		object.newln();
		object.puth32( $4_0000 );
		object.newln();
		object.puth32( $50_0000 );
		object.newln();
		object.puth32( $600_0000 );
		object.newln();
		object.puth32( $7000_0000 );
		object.newln();
		object.puth32( $7fff_ffff );
		object.newln();
		object.puth32( $8000_0000 );
		object.newln();
		object.puth32( $FFFF_FFFF );
		object.newln();
		object.newln();
		for( mov( -10, i); i<=10; inc(i)) do

			object.puth32Size( 0, i, '.' );
			object.newln();
			object.puth32Size( $10, i, '.' );
			object.newln();
			object.puth32Size( $100, i, '.' );
			object.newln();
			object.puth32Size( $1000, i, '.' );
			object.newln();
			object.puth32Size( $1_0000, i, '.' );
			object.newln();
			object.puth32Size( $10_0000, i, '.' );
			object.newln();
			object.puth32Size( $100_0000, i, '.' );
			object.newln();
			object.puth32Size( $1000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.puth64( 0 );
		object.newln();
		object.puth64( $10 );
		object.newln();
		object.puth64( $200 );
		object.newln();
		object.puth64( $3000 );
		object.newln();
		object.puth64( $4_0000 );
		object.newln();
		object.puth64( $50_0000 );
		object.newln();
		object.puth64( $600_0000 );
		object.newln();
		object.puth64( $7000_0000 );
		object.newln();
		object.puth64( $8_0000_0000 );
		object.newln();
		object.puth64( $90_0000_0000 );
		object.newln();
		object.puth64( $A00_0000_0000 );
		object.newln();
		object.puth64( $B000_0000_0000 );
		object.newln();
		object.puth64( $C_0000_0000_0000 );
		object.newln();
		object.puth64( $D0_0000_0000_0000 );
		object.newln();
		object.puth64( $E00_0000_0000_0000 );
		object.newln();
		object.puth64( $F000_0000_0000_0000 );
		object.newln();
		object.puth64( $7fff_ffff_ffff_ffff );
		object.newln();
		object.puth64( $8000_0000_0000_0000 );
		object.newln();
		object.puth64( $FFFF_FFFF_FFFF_FFFF );
		object.newln();
		object.newln();

		for( mov( -20, i); i<=20; inc(i)) do

			object.puth64Size( 1, i, '.' );
			object.newln();
			object.puth64Size( $10, i, '.' );
			object.newln();
			object.puth64Size( $100, i, '.' );
			object.newln();
			object.puth64Size( $1000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000_0000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.puth128( 0 );
		object.newln();
		object.puth128( $10 );
		object.newln();
		object.puth128( $200 );
		object.newln();
		object.puth128( $3000 );
		object.newln();
		object.puth128( $4_0000 );
		object.newln();
		object.puth128( $50_0000 );
		object.newln();
		object.puth128( $600_0000 );
		object.newln();
		object.puth128( $7000_0000 );
		object.newln();
		object.puth128( $8_0000_0000 );
		object.newln();
		object.puth128( $90_0000_0000 );
		object.newln();
		object.puth128( $A00_0000_0000 );
		object.newln();
		object.puth128( $B000_0000_0000 );
		object.newln();
		object.puth128( $C_0000_0000_0000 );
		object.newln();
		object.puth128( $D0_0000_0000_0000 );
		object.newln();
		object.puth128( $E00_0000_0000_0000 );
		object.newln();
		object.puth128( $F000_0000_0000_0000 );
		object.newln();
		object.puth128( $1_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $20_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $300_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $4000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $5_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $60_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $700_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $8000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $9_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $A0_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $B00_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $C000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $D_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $E0_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $F00_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $1000_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $7fff_ffff_ffff_ffff_ffff_ffff_ffff_ffff );
		object.newln();
		object.puth128( $8000_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF );
		object.newln();
		object.newln();

		for( mov( -40, i); i<=40; inc(i)) do

			object.puth128Size( 0, i, '.' );
			object.newln();
			object.puth128Size( $10, i, '.' );
			object.newln();
			object.puth128Size( $100, i, '.' );
			object.newln();
			object.puth128Size( $1000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		conv.setUnderscores( false );


		object.puth8( 0 );
		object.newln();
		object.puth8( $7f );
		object.newln();
		object.puth8( $80 );
		object.newln();
		object.puth8( $FF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth8Size( 0, i, '.' );
			object.newln();
			object.puth8Size( $10, i, '.' );
			object.newln();
			object.newln();

		endfor;

		object.puth16( 0 );
		object.newln();
		object.puth16( $7fff );
		object.newln();
		object.puth16( $8000 );
		object.newln();
		object.puth16( $FFFF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth16Size( 0, i, '.' );
			object.newln();
			object.puth16Size( $10, i, '.' );
			object.newln();
			object.puth16Size( $100, i, '.' );
			object.newln();
			object.puth16Size( $1000, i, '.' );
			object.newln();
			object.newln();

		endfor;

		object.puth32( 0 );
		object.newln();
		object.puth32( $7fff_ffff );
		object.newln();
		object.puth32( $8000_0000 );
		object.newln();
		object.puth32( $FFFF_FFFF );
		object.newln();
		object.newln();

		for( mov( -10, i); i<=10; inc(i)) do

			object.puth32Size( 0, i, '.' );
			object.newln();
			object.puth32Size( $10, i, '.' );
			object.newln();
			object.puth32Size( $100, i, '.' );
			object.newln();
			object.puth32Size( $1000, i, '.' );
			object.newln();
			object.puth32Size( $1_0000, i, '.' );
			object.newln();
			object.puth32Size( $10_0000, i, '.' );
			object.newln();
			object.puth32Size( $100_0000, i, '.' );
			object.newln();
			object.puth32Size( $1000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.puth64( 0 );
		object.newln();
		object.puth64( $7fff_ffff_ffff_ffff );
		object.newln();
		object.puth64( $8000_0000_0000_0000 );
		object.newln();
		object.puth64( $FFFF_FFFF_FFFF_FFFF );
		object.newln();
		object.newln();

		for( mov( -20, i); i<=20; inc(i)) do

			object.puth64Size( 0, i, '.' );
			object.newln();
			object.puth64Size( $10, i, '.' );
			object.newln();
			object.puth64Size( $100, i, '.' );
			object.newln();
			object.puth64Size( $1000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $10_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $100_0000_0000_0000, i, '.' );
			object.newln();
			object.puth64Size( $1000_0000_0000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();

		object.puth128( 0 );
		object.newln();
		object.puth128( $7fff_ffff_ffff_ffff_ffff_ffff_ffff_ffff );
		object.newln();
		object.puth128( $8000_0000_0000_0000_0000_0000_0000_0000 );
		object.newln();
		object.puth128( $FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF );
		object.newln();

		for( mov( -40, i); i<=40; inc(i)) do

			object.puth128Size( 0, i, '.' );
			object.newln();
			object.puth128Size( $10, i, '.' );
			object.newln();
			object.puth128Size( $100, i, '.' );
			object.newln();
			object.puth128Size( $1000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $10_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $100_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.puth128Size( $1000_0000_0000_0000_0000_0000_0000_0000, i, '.' );
			object.newln();
			object.newln();

		endfor;
		object.newln();
		object.newln();
		object.newln();
			

				
		/*****************************************************************/
		
		object.close();
		mov( 1, quit );
		popfd();
		popad();
		leave();
		ret( _parms_ );
		
	end connected;
	
begin sputhex_test; 

	thunk timeout :=
		#{
			// On entry to thunk, EAX contains the address of the timeout
			// variable. Set this as desired for the timeout (1 second,
			// in this case).
			
			mov( 1, (type hla.timeval [eax]).tv_sec );
			stderr.put( "server", nl );
			
			// On the second call to this thunk, start the client application:
			
			cmp( calls, 1 );
			jne dontRunApp;
			
				str.put
				(
					cmdLine,
					"wclient.exe socket_puthex.txt ",
					ipAdrsStr,
					" 988b"
				);
				stdout.put( "cmd=", cmdLine, "'" nl );
				os.bkgnd( cmdLine );
			
			dontRunApp:
			inc( calls );
			mov( quit, eax );
				
		}#;
	
	try
	
		s.create();
		
		sock.hostAdrs(); 
		mov( eax, hostIPadrs );
		sock.ipToStr( eax, ipAdrsStr );
		
		s.start
		( 
			hostIPadrs, 
			$988b, 
			timeout,
			&connected,
			0
		);
		
	  anyexception
	  
	  	ex.exceptionMsg( eax, exmsg );
	  	stdout.put( "Server Exception: ", exmsg, nl );
		fileio.close( s.handle );
		s.destroy();
		
	endtry;
	while( !filesys.exists( "wclient.done" )) do
	
		os.sleep( 1 );
		
	endwhile;
	os.sleep( 1 );
	filesys.delete( "wclient.done" );
	 
end sputhex_test; 
