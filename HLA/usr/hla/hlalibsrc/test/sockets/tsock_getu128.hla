program sgeti128_test; 
#include( "stdlib.hhf" )
#includeOnce( "sockets.hhf" )

readonly
	max128 :uns128 := 340282366920938463463374607431768211455;
	mid128 :uns128 := 170141183460469231731687303715884105728;

static
	quit		:dword := 0;
	hostIPadrs	:dword;
	s			:server_t;
	timeout		:thunk;
	calls		:dword := 0;
	input128	:uns128;
	
	ipAdrsStr	:str.strvar(256);
	cmdLine		:str.strvar(256);
	exmsg		:str.strvar(256);
	
	
	
	procedure cmp128( left:uns128; right:uns128 );
	begin cmp128;
	
		cld();
		lea( esi, left );
		lea( edi, right );
		mov( 4, ecx );
		repe.cmpsd();
		
	end cmp128;



	procedure connected;
		@nodisplay;
		@nostackalign;
		@noframe;
	var
		handle		:dword;
		bufIndex	:dword;
		object		:pointer to server_t;
		ipAdrs		:hla.sockaddr;
		
		buffer		:char[64];
		
	begin connected;

		push( ebp );
		mov( esp, ebp );
		sub( _vars_, esp );
		
		pushad();
		pushfd();
		
		mov( eax, handle );
		mov( esi, object );
		
		/*****************************************************************/
		
		// Testing fileio.getu128
		
		try
		
			object.getu128( input128 );
			cmp128( input128, 0 );
			if( @ne ) then
			
				raise($1011);
			
			endif;	
			
			object.getu128( input128 );
			cmp128( input128, 1 );
			if( @ne ) then
			
				raise($1012);
			
			endif;	
			
			object.getu128( input128 );
			cmp128( input128, max128 );
			if( @ne ) then
			
				raise($1014);
			
			endif;


			object.getu128( input128 );
			cmp128( input128, mid128 );
			if( @ne ) then
			
				raise($1015);
			
			endif;


			
			try
			
				object.getu128( input128 );

			  unprotected
			  
			  	// We we got to this point, we failed to raise a conversion error.
				
			  	raise($1016 );
				
			  exception( ex.ConversionError )
			  
			  	// Okay, we succeeded if we got this exception.
				
			  anyexception
			  
			  	// Anything else? Pass it on.
				
			  	raise($1017 );
				
			endtry;
			object.readLn(  );	// Clean up after ourselves.
			
			
			try
			
				object.getu128( input128 );

			  unprotected
			  
			  	// We we got to this point, we failed to raise an overflow error.
				
			  	raise($1018 );
				
			  exception( ex.ValueOutOfRange )
			  
			  	// Okay, we succeeded if we got this exception.
				
			  anyexception
			  
			  	// Anything else? Pass it on.
				
			  	raise($1019 );
				
			endtry;
			object.readLn(  );
			stderr.put( "socket.getu128 succeeded!" nl );
			
		  anyexception
		  
			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"socket.getu128 failed! eax=", eax, nl
				"Data read did not match data expected in file" nl
				"***************************************************" nl
				nl 
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endtry;
				
		/*****************************************************************/
		
		object.close();
		mov( 1, quit );
		popfd();
		popad();
		leave();
		ret( _parms_ );
		
	end connected;
	
begin sgeti128_test; 

	thunk timeout :=
		#{
			// On entry to thunk, EAX contains the address of the timeout
			// variable. Set this as desired for the timeout (2 seconds,
			// in this case).
			
			mov( 2, (type hla.timeval [eax]).tv_sec );
			stderr.put( "server", nl );
			
			// On the second call to this thunk, start the client application:
			
			cmp( calls, 1 );
			jne dontRunApp;
			
				#if( os.win32 )
				
					str.put
					(			 
						cmdLine,
						"cmd /C rclient socket_getu128.data ",
						ipAdrsStr,
						" 8800"
					);
					stdout.put( "cmd=", cmdLine, "'" nl );
					
				#else
				
					str.put
					(
						cmdLine,
						"rclient.exe socket_getu128.data ",
						ipAdrsStr,
						" 8800"
					);
					stdout.put( "cmd=", cmdLine, "'" nl );
					
				#endif
				os.bkgnd( cmdLine );
			
			dontRunApp:
			inc( calls );
			mov( quit, eax );
				
		}#;
	
	try
	
		s.create();
		
		sock.hostAdrs(); 
		mov( eax, hostIPadrs );
		sock.ipToStr( eax, ipAdrsStr );
		
		s.start
		( 
			hostIPadrs, 
			$8800, 
			timeout,
			&connected,
			0
		);
		
	  anyexception
	  
	  	ex.exceptionMsg( eax, exmsg );
	  	stdout.put( "Server Exception: ", exmsg, nl );
		fileio.close( s.handle );
		s.destroy();
		
	endtry;
	 
end sgeti128_test; 
