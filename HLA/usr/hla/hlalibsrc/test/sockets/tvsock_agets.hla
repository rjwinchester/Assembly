program sagets_test; 
#include( "stdlib.hhf" )
#include( "sockets.hhf" )

static
	quit		:dword := 0;
	hostIPadrs	:dword;
	s			:vServer_t;
	i			:int32;
	timeout		:thunk;
	calls		:dword := 0;
	
	ipAdrsStr	:str.strvar(256);
	cmdLine		:str.strvar(256);
	exmsg		:str.strvar(256);
	
	
	
	procedure connected;
		@nodisplay;
		@nostackalign;
		@noframe;
	var
		handle		:dword;
		object		:pointer to vServer_t;
		f			:file;
		inputLine	:string;
		ipAdrs		:hla.sockaddr;
		
		
	begin connected;

		push( ebp );
		mov( esp, ebp );
		sub( _vars_, esp );
		
		pushad();
		pushfd();
		
		mov( eax, handle );
		mov( esi, object );
		
		try
		
			object.a_gets( );
			mov( eax, inputLine );
			if( str.ne( inputLine, "This is a test of sagets" )) then
			
				raise( 0 );
				
			endif;
			str.free( inputLine );
			
			object.a_gets( );
			mov( eax, inputLine );
			if( str.ne( inputLine, "This is a second line" )) then
			
				raise( 0 );
				
			endif;
			str.free( inputLine );
			
			// The following should time out and cause an EOF error:
			
			object.a_gets();
			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"s.agets failed!" nl
				"Expected end of file, read data instead." nl
				"***************************************************" nl
				nl 
			);
			
		  exception( ex.EndOfFile )
		  
			stderr.put( "s.agets succeeded!" nl );
			os.exitProcess(0);
			
		  anyexception
		  
			stderr.put
			( 
				nl nl 
				"***************************************************" nl
				"s.agets failed!" nl
				"Data read did not match data expected in file" nl
				"***************************************************" nl
				nl 
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endtry;
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"s.agets failed!" nl
			"Unknown problem with sagets test" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
		mov( 1, quit );
		popfd();
		popad();
		leave();
		ret( _parms_ );
		
	end connected;
	
begin sagets_test; 

	thunk timeout :=
		#{
			// On entry to thunk, EAX contains the address of the timeout
			// variable. Set this as desired for the timeout (2 seconds,
			// in this case).
			
			mov( 2, (type hla.timeval [eax]).tv_sec );
			stderr.put( "server", nl );
			
			// On the second call to this thunk, start the client application:
			
			cmp( calls, 1 );
			jne dontRunApp;
			
				#if( os.win32 )
				
					str.put
					(
						cmdLine,
						"cmd /C rclient socket_agets.data ",
						ipAdrsStr,
						" 9809"
					);
					stdout.put( "cmd=", cmdLine, "'" nl );
					
				#else
				
					str.put
					(
						cmdLine,
						"rclient.exe socket_agets.data ",
						ipAdrsStr,
						" 9809"
					);
					
				#endif
				os.bkgnd( cmdLine );
			
			dontRunApp:
			inc( calls );
			mov( quit, eax );
				
		}#;
	
	try
	
		mov( 0, i );
		s.create();
		
		sock.hostAdrs(); 
		mov( eax, hostIPadrs );
		sock.ipToStr( eax, ipAdrsStr );
		
		s.start
		( 
			hostIPadrs, 
			$9809, 
			timeout,
			&connected,
			0
		);
		
	  anyexception
	  
	  	ex.exceptionMsg( eax, exmsg );
	  	stdout.put( "Server Exception: ", exmsg, nl );
		fileio.close( s.handle );
		s.destroy();
		
	endtry;
	 
end sagets_test; 
