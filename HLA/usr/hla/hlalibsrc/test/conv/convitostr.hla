program convitostr_test;
#include( "stdlib.hhf" )


static
	bufstr		:string;
	buf			:str.strvar(256);
	
	procedure printCmp( function:string; strValue:string; was:string );
	begin printCmp;
	
		stderr.put( function, " failed!" nl);
		stderr.put( "Should be '", strValue, "'" nl );
		stderr.put( "     was: '", was, "'" nl );
	
	end printCmp;
	
	
	#macro bufTest( function, theValue, strValue, exceptionValue ):_s_;
	
//		?_s_ :string := @string( function );
//		stdout.put( "Testing " + _s_ + "( " + strValue + " )" nl );
		@text( "conv." + @string( function )) ( theValue, 0, ' ', buf );
		if( str.ne( buf, strValue ) ) then

			printCmp( @string( function ), strValue, buf );
			raise( exceptionValue );

		endif;

		@text( "conv.a_" + @string( function )) ( theValue, 0, ' ' );
		mov( eax, bufstr );
		if( str.ne( bufstr, strValue ) ) then

			printCmp( @string( function ), strValue, bufstr );
			raise( exceptionValue );

		endif;
		str.free( bufstr );

	#endmacro
	
	
	#macro strTest( function, theValue, strValue, exceptionValue, size, chr ):_s_;

		?_s_ := @string( function );	
		for( mov( 0, ecx); ecx <= size; inc( ecx )) do
		
			@text( "conv." + _s_) ( theValue, ecx, chr, buf );
			if( str.ne( buf, strValue[ecx*4] ) ) then

				stderr.put
				( 
					"conv." + _s_ + " failed on inputs (", 
					(type uns32 ecx), 
					"): " nl
					"Produced:  """, buf, """, and " nl
					"Should be: """, strValue[ecx*4], """" nl
				);
				raise( exceptionValue );

			endif;
			
		
			@text( "conv.a_" + _s_) ( theValue, ecx, chr );
			mov( eax, bufstr );
			if( str.ne( bufstr, strValue[ecx*4] ) ) then

				stderr.put
				( 
					"conv." + _s_ + " failed on inputs (", 
					(type uns32 ecx), 
					"): " nl
					"Produced:  """, bufstr, """, and " nl
					"Should be: """, strValue[ecx*4], """" nl
				);
				raise( exceptionValue );

			endif;
			str.free( bufstr );
			
		endfor

	#endmacro
	
	#macro strTest2( function, theValue, strValue, exceptionValue, size, chr ):_s_;

		?_s_ := @string( function );
		mov( 0, ecx );
		while( (type int32 ecx) >= -size ) do
		
			mov( ecx, edx );
			neg( edx );
			@text( "conv." + _s_) ( theValue, ecx, chr, buf );

			if( str.ne( buf, strValue[edx*4] ) ) then

				stderr.put
				( 
					"conv." + _s_ + " failed on inputs (", 
					(type uns32 edx), 
					"): " nl
					"Produced:  """, buf, """" nl
					"Should be: """, strValue[edx*4], """" nl
				);
				raise( exceptionValue );

			endif;
			
			
			mov( ecx, edx );
			neg( edx );
			@text( "conv.a_" + _s_) ( theValue, ecx, chr );
			mov( eax, bufstr );
			if( str.ne( bufstr, strValue[edx*4] ) ) then

				stderr.put
				( 
					"conv.a_" + _s_ + " failed on inputs (", 
					(type uns32 edx), 
					"): " nl
					"Produced:  """, bufstr, """" nl
					"Should be: """, strValue[edx*4], """" nl
				);
				raise( exceptionValue );

			endif;
			str.free( bufstr );
			dec( ecx );
			
		endwhile

	#endmacro
	
	#macro mkStr( s, fill, size );
	
		(@strset( fill, @max( 0, size-@length(s))) +s)
		
	#endmacro
	
	#macro mkStr2( s, fill, size );
	
		(s+@strset( fill, @max( 0, size-@length(s))))
		
	#endmacro
	
	
begin convitostr_test;


	// Testing conv.i8ToBuf

	try

		bufTest( i8ToStr,             0,           "0", $00080);
		bufTest( i8ToStr,             1,           "1", $00081);
		bufTest( i8ToStr,             2,           "2", $00082);
		bufTest( i8ToStr,             3,           "3", $00083);
		bufTest( i8ToStr,             4,           "4", $00084);
		bufTest( i8ToStr,             5,           "5", $00085);
		bufTest( i8ToStr,             6,           "6", $00086);
		bufTest( i8ToStr,             7,           "7", $00087);
		bufTest( i8ToStr,             8,           "8", $00088);
		bufTest( i8ToStr,             9,           "9", $00089);
		bufTest( i8ToStr,             0,           "0", $a00080);
		bufTest( i8ToStr,            -1,          "-1", $a00081);
		bufTest( i8ToStr,            -2,          "-2", $a00082);
		bufTest( i8ToStr,            -3,          "-3", $a00083);
		bufTest( i8ToStr,            -4,          "-4", $a00084);
		bufTest( i8ToStr,            -5,          "-5", $a00085);
		bufTest( i8ToStr,            -6,          "-6", $a00086);
		bufTest( i8ToStr,            -7,          "-7", $a00087);
		bufTest( i8ToStr,            -8,          "-8", $a00088);
		bufTest( i8ToStr,            -9,          "-9", $a00089);
		bufTest( i8ToStr,             0,           "0", $01080);
		bufTest( i8ToStr,            10,          "10", $01081);
		bufTest( i8ToStr,            20,          "20", $01082);
		bufTest( i8ToStr,            30,          "30", $01083);
		bufTest( i8ToStr,            40,          "40", $01084);
		bufTest( i8ToStr,            50,          "50", $01085);
		bufTest( i8ToStr,            60,          "60", $01086);
		bufTest( i8ToStr,            70,          "70", $01087);
		bufTest( i8ToStr,            80,          "80", $01088);
		bufTest( i8ToStr,            90,          "90", $01089);
		bufTest( i8ToStr,             0,           "0", $a01080);
		bufTest( i8ToStr,           -10,         "-10", $a01081);
		bufTest( i8ToStr,           -20,         "-20", $a01082);
		bufTest( i8ToStr,           -30,         "-30", $a01083);
		bufTest( i8ToStr,           -40,         "-40", $a01084);
		bufTest( i8ToStr,           -50,         "-50", $a01085);
		bufTest( i8ToStr,           -60,         "-60", $a01086);
		bufTest( i8ToStr,           -70,         "-70", $a01087);
		bufTest( i8ToStr,           -80,         "-80", $a01088);
		bufTest( i8ToStr,           -90,         "-90", $a01089);
		bufTest( i8ToStr,           100,         "100", $02081);
		bufTest( i8ToStr,          -100,        "-100", $a02081);
		
		readonly
			i8Test_a	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr( "0", ' ', i ),
								
							#endfor
							mkStr( "0", ' ', 63 )
						];
						
			i8Test_b	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "127", '.', i ),
								
							#endfor
							mkStr2( "127", '.', 63 )
						];
						
			i8Test_c	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "-128", '*', i ),
								
							#endfor
							mkStr2( "-128", '*', 63 )
						];
						
		endreadonly;
		strTest( i8ToStr, 0, i8Test_a, $F0A0, 63, ' ' );				
		strTest2( i8ToStr, 127, i8Test_b, $F0A1, 63, '.' );				
		strTest2( i8ToStr, -128, i8Test_c, $F0A2, 63, '*' );				
	
		
		stderr.put( "conv.i8ToStr succeeded!" nl );
		
	  anyexception
	  
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"conv.i8ToStr failed! eax=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;






	// Testing conv.i16ToStr

	try

		bufTest( i16ToStr,             0,           "0", $00160);
		bufTest( i16ToStr,             1,           "1", $00161);
		bufTest( i16ToStr,             2,           "2", $00162);
		bufTest( i16ToStr,             3,           "3", $00163);
		bufTest( i16ToStr,             4,           "4", $00164);
		bufTest( i16ToStr,             5,           "5", $00165);
		bufTest( i16ToStr,             6,           "6", $00166);
		bufTest( i16ToStr,             7,           "7", $00167);
		bufTest( i16ToStr,             8,           "8", $00168);
		bufTest( i16ToStr,             9,           "9", $00169);
		bufTest( i16ToStr,            -1,          "-1", $a00161);
		bufTest( i16ToStr,            -2,          "-2", $a00162);
		bufTest( i16ToStr,            -3,          "-3", $a00163);
		bufTest( i16ToStr,            -4,          "-4", $a00164);
		bufTest( i16ToStr,            -5,          "-5", $a00165);
		bufTest( i16ToStr,            -6,          "-6", $a00166);
		bufTest( i16ToStr,            -7,          "-7", $a00167);
		bufTest( i16ToStr,            -8,          "-8", $a00168);
		bufTest( i16ToStr,            -9,          "-9", $a00169);
		bufTest( i16ToStr,            10,          "10", $01161);
		bufTest( i16ToStr,            20,          "20", $01162);
		bufTest( i16ToStr,            30,          "30", $01163);
		bufTest( i16ToStr,            40,          "40", $01164);
		bufTest( i16ToStr,            50,          "50", $01165);
		bufTest( i16ToStr,            60,          "60", $01166);
		bufTest( i16ToStr,            70,          "70", $01167);
		bufTest( i16ToStr,            80,          "80", $01168);
		bufTest( i16ToStr,            90,          "90", $01169);
		bufTest( i16ToStr,           -10,         "-10", $a01161);
		bufTest( i16ToStr,           -20,         "-20", $a01162);
		bufTest( i16ToStr,           -30,         "-30", $a01163);
		bufTest( i16ToStr,           -40,         "-40", $a01164);
		bufTest( i16ToStr,           -50,         "-50", $a01165);
		bufTest( i16ToStr,           -60,         "-60", $a01166);
		bufTest( i16ToStr,           -70,         "-70", $a01167);
		bufTest( i16ToStr,           -80,         "-80", $a01168);
		bufTest( i16ToStr,           -90,         "-90", $a01169);
		bufTest( i16ToStr,           100,         "100", $02161);
		bufTest( i16ToStr,           200,         "200", $02162);
		bufTest( i16ToStr,           300,         "300", $02163);
		bufTest( i16ToStr,           400,         "400", $02164);
		bufTest( i16ToStr,           500,         "500", $02165);
		bufTest( i16ToStr,           600,         "600", $02166);
		bufTest( i16ToStr,           700,         "700", $02167);
		bufTest( i16ToStr,           800,         "800", $02168);
		bufTest( i16ToStr,           900,         "900", $02169);
		bufTest( i16ToStr,          -100,        "-100", $a02161);
		bufTest( i16ToStr,          -200,        "-200", $a02162);
		bufTest( i16ToStr,          -300,        "-300", $a02163);
		bufTest( i16ToStr,          -400,        "-400", $a02164);
		bufTest( i16ToStr,          -500,        "-500", $a02165);
		bufTest( i16ToStr,          -600,        "-600", $a02166);
		bufTest( i16ToStr,          -700,        "-700", $a02167);
		bufTest( i16ToStr,          -800,        "-800", $a02168);
		bufTest( i16ToStr,          -900,        "-900", $a02169);
		bufTest( i16ToStr,         1_000,        "1000", $03161);
		bufTest( i16ToStr,         2_000,        "2000", $03162);
		bufTest( i16ToStr,         3_000,        "3000", $03163);
		bufTest( i16ToStr,         4_000,        "4000", $03164);
		bufTest( i16ToStr,         5_000,        "5000", $03165);
		bufTest( i16ToStr,         6_000,        "6000", $03166);
		bufTest( i16ToStr,         7_000,        "7000", $03167);
		bufTest( i16ToStr,         8_000,        "8000", $03168);
		bufTest( i16ToStr,         9_000,        "9000", $03169);
		bufTest( i16ToStr,        -1_000,       "-1000", $a03161);
		bufTest( i16ToStr,        -2_000,       "-2000", $a03162);
		bufTest( i16ToStr,        -3_000,       "-3000", $a03163);
		bufTest( i16ToStr,        -4_000,       "-4000", $a03164);
		bufTest( i16ToStr,        -5_000,       "-5000", $a03165);
		bufTest( i16ToStr,        -6_000,       "-6000", $a03166);
		bufTest( i16ToStr,        -7_000,       "-7000", $a03167);
		bufTest( i16ToStr,        -8_000,       "-8000", $a03168);
		bufTest( i16ToStr,        -9_000,       "-9000", $a03169);
		bufTest( i16ToStr,        10_000,       "10000", $04161);
		bufTest( i16ToStr,        20_000,       "20000", $04162);
		bufTest( i16ToStr,        30_000,       "30000", $04163);
		bufTest( i16ToStr,       -10_000,      "-10000", $a04161);
		bufTest( i16ToStr,       -20_000,      "-20000", $a04162);
		bufTest( i16ToStr,       -30_000,      "-30000", $a04163);

		
		readonly
			i16Test_0	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr( "0", ' ', i ),
								
							#endfor
							mkStr( "0", ' ', 63 )
						];
						
			i16Test_1	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "1", '.', i ),
								
							#endfor
							mkStr2( "1", '.', 63 )
						];
						
			i16Test_2	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "-2", '*', i ),
								
							#endfor
							mkStr2( "-2", '*', 63 )
						];
						
			i16Test_3	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "32767", '*', i ),
								
							#endfor
							mkStr2( "32767", '*', 63 )
						];
						
			i16Test_4	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr( "-32768", '*', i ),
								
							#endfor
							mkStr( "-32768", '*', 63 )
						];
						
		endreadonly;
		strTest(  i16ToStr, 0,  i16Test_0, $F0A0, 63, ' ' );				
		strTest2( i16ToStr, 1,  i16Test_1, $F0A1, 63, '.' );				
		strTest2( i16ToStr, -2, i16Test_2, $F0A2, 63, '*' );				
		strTest2( i16ToStr, 32767, i16Test_3, $F0A3, 63, '*' );				
		strTest(  i16ToStr, -32768, i16Test_4, $F0A4, 63, '*' );				
	
		
		stderr.put( "conv.i16ToStr succeeded!" nl );
		
	  anyexception
	  
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"conv.i16ToStr failed! eax=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;






	// Testing conv.i32ToStr

	try

		bufTest( i32ToStr,             0,           "0", $00320);
		bufTest( i32ToStr,             1,           "1", $00321);
		bufTest( i32ToStr,             2,           "2", $00322);
		bufTest( i32ToStr,             3,           "3", $00323);
		bufTest( i32ToStr,             4,           "4", $00324);
		bufTest( i32ToStr,             5,           "5", $00325);
		bufTest( i32ToStr,             6,           "6", $00326);
		bufTest( i32ToStr,             7,           "7", $00327);
		bufTest( i32ToStr,             8,           "8", $00328);
		bufTest( i32ToStr,             9,           "9", $00329);
		bufTest( i32ToStr,            -1,          "-1", $a00321);
		bufTest( i32ToStr,            -2,          "-2", $a00322);
		bufTest( i32ToStr,            -3,          "-3", $a00323);
		bufTest( i32ToStr,            -4,          "-4", $a00324);
		bufTest( i32ToStr,            -5,          "-5", $a00325);
		bufTest( i32ToStr,            -6,          "-6", $a00326);
		bufTest( i32ToStr,            -7,          "-7", $a00327);
		bufTest( i32ToStr,            -8,          "-8", $a00328);
		bufTest( i32ToStr,            -9,          "-9", $a00329);
		bufTest( i32ToStr,            10,          "10", $01321);
		bufTest( i32ToStr,            20,          "20", $01322);
		bufTest( i32ToStr,            30,          "30", $01323);
		bufTest( i32ToStr,            40,          "40", $01324);
		bufTest( i32ToStr,            50,          "50", $01325);
		bufTest( i32ToStr,            60,          "60", $01326);
		bufTest( i32ToStr,            70,          "70", $01327);
		bufTest( i32ToStr,            80,          "80", $01328);
		bufTest( i32ToStr,            90,          "90", $01329);
		bufTest( i32ToStr,           -10,         "-10", $a01321);
		bufTest( i32ToStr,           -20,         "-20", $a01322);
		bufTest( i32ToStr,           -30,         "-30", $a01323);
		bufTest( i32ToStr,           -40,         "-40", $a01324);
		bufTest( i32ToStr,           -50,         "-50", $a01325);
		bufTest( i32ToStr,           -60,         "-60", $a01326);
		bufTest( i32ToStr,           -70,         "-70", $a01327);
		bufTest( i32ToStr,           -80,         "-80", $a01328);
		bufTest( i32ToStr,           -90,         "-90", $a01329);
		bufTest( i32ToStr,           100,         "100", $02321);
		bufTest( i32ToStr,           200,         "200", $02322);
		bufTest( i32ToStr,           300,         "300", $02323);
		bufTest( i32ToStr,           400,         "400", $02324);
		bufTest( i32ToStr,           500,         "500", $02325);
		bufTest( i32ToStr,           600,         "600", $02326);
		bufTest( i32ToStr,           700,         "700", $02327);
		bufTest( i32ToStr,           800,         "800", $02328);
		bufTest( i32ToStr,           900,         "900", $02329);
		bufTest( i32ToStr,          -100,        "-100", $a02321);
		bufTest( i32ToStr,          -200,        "-200", $a02322);
		bufTest( i32ToStr,          -300,        "-300", $a02323);
		bufTest( i32ToStr,          -400,        "-400", $a02324);
		bufTest( i32ToStr,          -500,        "-500", $a02325);
		bufTest( i32ToStr,          -600,        "-600", $a02326);
		bufTest( i32ToStr,          -700,        "-700", $a02327);
		bufTest( i32ToStr,          -800,        "-800", $a02328);
		bufTest( i32ToStr,          -900,        "-900", $a02329);
		bufTest( i32ToStr,         1_000,        "1000", $03321);
		bufTest( i32ToStr,         2_000,        "2000", $03322);
		bufTest( i32ToStr,         3_000,        "3000", $03323);
		bufTest( i32ToStr,         4_000,        "4000", $03324);
		bufTest( i32ToStr,         5_000,        "5000", $03325);
		bufTest( i32ToStr,         6_000,        "6000", $03326);
		bufTest( i32ToStr,         7_000,        "7000", $03327);
		bufTest( i32ToStr,         8_000,        "8000", $03328);
		bufTest( i32ToStr,         9_000,        "9000", $03329);
		bufTest( i32ToStr,        -1_000,       "-1000", $a03321);
		bufTest( i32ToStr,        -2_000,       "-2000", $a03322);
		bufTest( i32ToStr,        -3_000,       "-3000", $a03323);
		bufTest( i32ToStr,        -4_000,       "-4000", $a03324);
		bufTest( i32ToStr,        -5_000,       "-5000", $a03325);
		bufTest( i32ToStr,        -6_000,       "-6000", $a03326);
		bufTest( i32ToStr,        -7_000,       "-7000", $a03327);
		bufTest( i32ToStr,        -8_000,       "-8000", $a03328);
		bufTest( i32ToStr,        -9_000,       "-9000", $a03329);
		bufTest( i32ToStr,        10_000,       "10000", $04321);
		bufTest( i32ToStr,        20_000,       "20000", $04322);
		bufTest( i32ToStr,        30_000,       "30000", $04323);
		bufTest( i32ToStr,        40_000,       "40000", $04324);
		bufTest( i32ToStr,        50_000,       "50000", $04325);
		bufTest( i32ToStr,        60_000,       "60000", $04326);
		bufTest( i32ToStr,        70_000,       "70000", $04327);
		bufTest( i32ToStr,        80_000,       "80000", $04328);
		bufTest( i32ToStr,        90_000,       "90000", $04329);
		bufTest( i32ToStr,       -10_000,      "-10000", $a04321);
		bufTest( i32ToStr,       -20_000,      "-20000", $a04322);
		bufTest( i32ToStr,       -30_000,      "-30000", $a04323);
		bufTest( i32ToStr,       -40_000,      "-40000", $a04324);
		bufTest( i32ToStr,       -50_000,      "-50000", $a04325);
		bufTest( i32ToStr,       -60_000,      "-60000", $a04326);
		bufTest( i32ToStr,       -70_000,      "-70000", $a04327);
		bufTest( i32ToStr,       -80_000,      "-80000", $a04328);
		bufTest( i32ToStr,       -90_000,      "-90000", $a04329);
		bufTest( i32ToStr,       100_000,      "100000", $05321);
		bufTest( i32ToStr,       200_000,      "200000", $05322);
		bufTest( i32ToStr,       300_000,      "300000", $05323);
		bufTest( i32ToStr,       400_000,      "400000", $05324);
		bufTest( i32ToStr,       500_000,      "500000", $05325);
		bufTest( i32ToStr,       600_000,      "600000", $05326);
		bufTest( i32ToStr,       700_000,      "700000", $05327);
		bufTest( i32ToStr,       800_000,      "800000", $05328);
		bufTest( i32ToStr,       900_000,      "900000", $05329);
		bufTest( i32ToStr,      -100_000,     "-100000", $a05321);
		bufTest( i32ToStr,      -200_000,     "-200000", $a05322);
		bufTest( i32ToStr,      -300_000,     "-300000", $a05323);
		bufTest( i32ToStr,      -400_000,     "-400000", $a05324);
		bufTest( i32ToStr,      -500_000,     "-500000", $a05325);
		bufTest( i32ToStr,      -600_000,     "-600000", $a05326);
		bufTest( i32ToStr,      -700_000,     "-700000", $a05327);
		bufTest( i32ToStr,      -800_000,     "-800000", $a05328);
		bufTest( i32ToStr,      -900_000,     "-900000", $a05329);
		bufTest( i32ToStr,     1_000_000,     "1000000", $06321);
		bufTest( i32ToStr,     2_000_000,     "2000000", $06322);
		bufTest( i32ToStr,     3_000_000,     "3000000", $06323);
		bufTest( i32ToStr,     4_000_000,     "4000000", $06324);
		bufTest( i32ToStr,     5_000_000,     "5000000", $06325);
		bufTest( i32ToStr,     6_000_000,     "6000000", $06326);
		bufTest( i32ToStr,     7_000_000,     "7000000", $06327);
		bufTest( i32ToStr,     8_000_000,     "8000000", $06328);
		bufTest( i32ToStr,     9_000_000,     "9000000", $06329);
		bufTest( i32ToStr,    -1_000_000,    "-1000000", $a06321);
		bufTest( i32ToStr,    -2_000_000,    "-2000000", $a06322);
		bufTest( i32ToStr,    -3_000_000,    "-3000000", $a06323);
		bufTest( i32ToStr,    -4_000_000,    "-4000000", $a06324);
		bufTest( i32ToStr,    -5_000_000,    "-5000000", $a06325);
		bufTest( i32ToStr,    -6_000_000,    "-6000000", $a06326);
		bufTest( i32ToStr,    -7_000_000,    "-7000000", $a06327);
		bufTest( i32ToStr,    -8_000_000,    "-8000000", $a06328);
		bufTest( i32ToStr,    -9_000_000,    "-9000000", $a06329);
		bufTest( i32ToStr,    10_000_000,    "10000000", $07321);
		bufTest( i32ToStr,    20_000_000,    "20000000", $07322);
		bufTest( i32ToStr,    30_000_000,    "30000000", $07323);
		bufTest( i32ToStr,    40_000_000,    "40000000", $07324);
		bufTest( i32ToStr,    50_000_000,    "50000000", $07325);
		bufTest( i32ToStr,    60_000_000,    "60000000", $07326);
		bufTest( i32ToStr,    70_000_000,    "70000000", $07327);
		bufTest( i32ToStr,    80_000_000,    "80000000", $07328);
		bufTest( i32ToStr,    90_000_000,    "90000000", $07329);
		bufTest( i32ToStr,   -10_000_000,   "-10000000", $a07321);
		bufTest( i32ToStr,   -20_000_000,   "-20000000", $a07322);
		bufTest( i32ToStr,   -30_000_000,   "-30000000", $a07323);
		bufTest( i32ToStr,   -40_000_000,   "-40000000", $a07324);
		bufTest( i32ToStr,   -50_000_000,   "-50000000", $a07325);
		bufTest( i32ToStr,   -60_000_000,   "-60000000", $a07326);
		bufTest( i32ToStr,   -70_000_000,   "-70000000", $a07327);
		bufTest( i32ToStr,   -80_000_000,   "-80000000", $a07328);
		bufTest( i32ToStr,   -90_000_000,   "-90000000", $a07329);
		bufTest( i32ToStr,   100_000_000,   "100000000", $08321);
		bufTest( i32ToStr,   200_000_000,   "200000000", $08322);
		bufTest( i32ToStr,   300_000_000,   "300000000", $08323);
		bufTest( i32ToStr,   400_000_000,   "400000000", $08324);
		bufTest( i32ToStr,   500_000_000,   "500000000", $08325);
		bufTest( i32ToStr,   600_000_000,   "600000000", $08326);
		bufTest( i32ToStr,   700_000_000,   "700000000", $08327);
		bufTest( i32ToStr,   800_000_000,   "800000000", $08328);
		bufTest( i32ToStr,   900_000_000,   "900000000", $08329);
		bufTest( i32ToStr,  -100_000_000,  "-100000000", $a08321);
		bufTest( i32ToStr,  -200_000_000,  "-200000000", $a08322);
		bufTest( i32ToStr,  -300_000_000,  "-300000000", $a08323);
		bufTest( i32ToStr,  -400_000_000,  "-400000000", $a08324);
		bufTest( i32ToStr,  -500_000_000,  "-500000000", $a08325);
		bufTest( i32ToStr,  -600_000_000,  "-600000000", $a08326);
		bufTest( i32ToStr,  -700_000_000,  "-700000000", $a08327);
		bufTest( i32ToStr,  -800_000_000,  "-800000000", $a08328);
		bufTest( i32ToStr,  -900_000_000,  "-900000000", $a08329);
		bufTest( i32ToStr, 1_000_000_000,  "1000000000", $09321);
		bufTest( i32ToStr, 2_000_000_000,  "2000000000", $09322);
		bufTest( i32ToStr,-1_000_000_000, "-1000000000", $a09321);
		bufTest( i32ToStr,-2_000_000_000, "-2000000000", $a09322);

		
		readonly
			i32Test_a	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr( "0", ' ', i ),
								
							#endfor
							mkStr( "0", ' ', 63 )
						];
						
			i32Test_b	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "127", '.', i ),
								
							#endfor
							mkStr2( "127", '.', 63 )
						];
						
			i32Test_c	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "-128", '*', i ),
								
							#endfor
							mkStr2( "-128", '*', 63 )
						];
						
		endreadonly;
		strTest( i32ToStr, 0, i32Test_a, $a0F0A0, 63, ' ' );				
		strTest2( i32ToStr, 127, i32Test_b, $a0F0A1, 63, '.' );				
		strTest2( i32ToStr, -128, i32Test_c, $a0F0A2, 63, '*' );				

		
		stderr.put( "conv.i32ToStr succeeded!" nl );
		
	  anyexception
	  
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"conv.i32ToStr failed! eax=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;






	// Testing conv.i64ToStr

	try

		
		bufTest( i64ToStr,             0,           "0", $00640);
		bufTest( i64ToStr,             1,           "1", $00641);
		bufTest( i64ToStr,             2,           "2", $00642);
		bufTest( i64ToStr,             3,           "3", $00643);
		bufTest( i64ToStr,             4,           "4", $00644);
		bufTest( i64ToStr,             5,           "5", $00645);
		bufTest( i64ToStr,             6,           "6", $00646);
		bufTest( i64ToStr,             7,           "7", $00647);
		bufTest( i64ToStr,             8,           "8", $00648);
		bufTest( i64ToStr,             9,           "9", $00649);
		bufTest( i64ToStr,             0,           "0", $a00640);
		bufTest( i64ToStr,            -1,          "-1", $a00641);
		bufTest( i64ToStr,            -2,          "-2", $a00642);
		bufTest( i64ToStr,            -3,          "-3", $a00643);
		bufTest( i64ToStr,            -4,          "-4", $a00644);
		bufTest( i64ToStr,            -5,          "-5", $a00645);
		bufTest( i64ToStr,            -6,          "-6", $a00646);
		bufTest( i64ToStr,            -7,          "-7", $a00647);
		bufTest( i64ToStr,            -8,          "-8", $a00648);
		bufTest( i64ToStr,            -9,          "-9", $a00649);
		bufTest( i64ToStr,            10,          "10", $01641);
		bufTest( i64ToStr,            20,          "20", $01642);
		bufTest( i64ToStr,            30,          "30", $01643);
		bufTest( i64ToStr,            40,          "40", $01644);
		bufTest( i64ToStr,            50,          "50", $01645);
		bufTest( i64ToStr,            60,          "60", $01646);
		bufTest( i64ToStr,            70,          "70", $01647);
		bufTest( i64ToStr,            80,          "80", $01648);
		bufTest( i64ToStr,            90,          "90", $01649);
		bufTest( i64ToStr,           -10,         "-10", $a01641);
		bufTest( i64ToStr,           -20,         "-20", $a01642);
		bufTest( i64ToStr,           -30,         "-30", $a01643);
		bufTest( i64ToStr,           -40,         "-40", $a01644);
		bufTest( i64ToStr,           -50,         "-50", $a01645);
		bufTest( i64ToStr,           -60,         "-60", $a01646);
		bufTest( i64ToStr,           -70,         "-70", $a01647);
		bufTest( i64ToStr,           -80,         "-80", $a01648);
		bufTest( i64ToStr,           -90,         "-90", $a01649);
		bufTest( i64ToStr,           100,         "100", $02641);
		bufTest( i64ToStr,           200,         "200", $02642);
		bufTest( i64ToStr,           300,         "300", $02643);
		bufTest( i64ToStr,           400,         "400", $02644);
		bufTest( i64ToStr,           500,         "500", $02645);
		bufTest( i64ToStr,           600,         "600", $02646);
		bufTest( i64ToStr,           700,         "700", $02647);
		bufTest( i64ToStr,           800,         "800", $02648);
		bufTest( i64ToStr,           900,         "900", $02649);
		bufTest( i64ToStr,          -100,        "-100", $a02641);
		bufTest( i64ToStr,          -200,        "-200", $a02642);
		bufTest( i64ToStr,          -300,        "-300", $a02643);
		bufTest( i64ToStr,          -400,        "-400", $a02644);
		bufTest( i64ToStr,          -500,        "-500", $a02645);
		bufTest( i64ToStr,          -600,        "-600", $a02646);
		bufTest( i64ToStr,          -700,        "-700", $a02647);
		bufTest( i64ToStr,          -800,        "-800", $a02648);
		bufTest( i64ToStr,          -900,        "-900", $a02649);
		bufTest( i64ToStr,         1_000,        "1000", $03641);
		bufTest( i64ToStr,         2_000,        "2000", $03642);
		bufTest( i64ToStr,         3_000,        "3000", $03643);
		bufTest( i64ToStr,         4_000,        "4000", $03644);
		bufTest( i64ToStr,         5_000,        "5000", $03645);
		bufTest( i64ToStr,         6_000,        "6000", $03646);
		bufTest( i64ToStr,         7_000,        "7000", $03647);
		bufTest( i64ToStr,         8_000,        "8000", $03648);
		bufTest( i64ToStr,         9_000,        "9000", $03649);
		bufTest( i64ToStr,        -1_000,       "-1000", $a03641);
		bufTest( i64ToStr,        -2_000,       "-2000", $a03642);
		bufTest( i64ToStr,        -3_000,       "-3000", $a03643);
		bufTest( i64ToStr,        -4_000,       "-4000", $a03644);
		bufTest( i64ToStr,        -5_000,       "-5000", $a03645);
		bufTest( i64ToStr,        -6_000,       "-6000", $a03646);
		bufTest( i64ToStr,        -7_000,       "-7000", $a03647);
		bufTest( i64ToStr,        -8_000,       "-8000", $a03648);
		bufTest( i64ToStr,        -9_000,       "-9000", $a03649);
		bufTest( i64ToStr,        10_000,       "10000", $04641);
		bufTest( i64ToStr,        20_000,       "20000", $04642);
		bufTest( i64ToStr,        30_000,       "30000", $04643);
		bufTest( i64ToStr,        40_000,       "40000", $04644);
		bufTest( i64ToStr,        50_000,       "50000", $04645);
		bufTest( i64ToStr,        60_000,       "60000", $04646);
		bufTest( i64ToStr,        70_000,       "70000", $04647);
		bufTest( i64ToStr,        80_000,       "80000", $04648);
		bufTest( i64ToStr,        90_000,       "90000", $04649);
		bufTest( i64ToStr,       -10_000,      "-10000", $a04641);
		bufTest( i64ToStr,       -20_000,      "-20000", $a04642);
		bufTest( i64ToStr,       -30_000,      "-30000", $a04643);
		bufTest( i64ToStr,       -40_000,      "-40000", $a04644);
		bufTest( i64ToStr,       -50_000,      "-50000", $a04645);
		bufTest( i64ToStr,       -60_000,      "-60000", $a04646);
		bufTest( i64ToStr,       -70_000,      "-70000", $a04647);
		bufTest( i64ToStr,       -80_000,      "-80000", $a04648);
		bufTest( i64ToStr,       -90_000,      "-90000", $a04649);
		bufTest( i64ToStr,       100_000,      "100000", $05641);
		bufTest( i64ToStr,       200_000,      "200000", $05642);
		bufTest( i64ToStr,       300_000,      "300000", $05643);
		bufTest( i64ToStr,       400_000,      "400000", $05644);
		bufTest( i64ToStr,       500_000,      "500000", $05645);
		bufTest( i64ToStr,       600_000,      "600000", $05646);
		bufTest( i64ToStr,       700_000,      "700000", $05647);
		bufTest( i64ToStr,       800_000,      "800000", $05648);
		bufTest( i64ToStr,       900_000,      "900000", $05649);
		bufTest( i64ToStr,      -100_000,     "-100000", $a05641);
		bufTest( i64ToStr,      -200_000,     "-200000", $a05642);
		bufTest( i64ToStr,      -300_000,     "-300000", $a05643);
		bufTest( i64ToStr,      -400_000,     "-400000", $a05644);
		bufTest( i64ToStr,      -500_000,     "-500000", $a05645);
		bufTest( i64ToStr,      -600_000,     "-600000", $a05646);
		bufTest( i64ToStr,      -700_000,     "-700000", $a05647);
		bufTest( i64ToStr,      -800_000,     "-800000", $a05648);
		bufTest( i64ToStr,      -900_000,     "-900000", $a05649);
		bufTest( i64ToStr,     1_000_000,     "1000000", $06641);
		bufTest( i64ToStr,     2_000_000,     "2000000", $06642);
		bufTest( i64ToStr,     3_000_000,     "3000000", $06643);
		bufTest( i64ToStr,     4_000_000,     "4000000", $06644);
		bufTest( i64ToStr,     5_000_000,     "5000000", $06645);
		bufTest( i64ToStr,     6_000_000,     "6000000", $06646);
		bufTest( i64ToStr,     7_000_000,     "7000000", $06647);
		bufTest( i64ToStr,     8_000_000,     "8000000", $06648);
		bufTest( i64ToStr,     9_000_000,     "9000000", $06649);
		bufTest( i64ToStr,    -1_000_000,    "-1000000", $a06641);
		bufTest( i64ToStr,    -2_000_000,    "-2000000", $a06642);
		bufTest( i64ToStr,    -3_000_000,    "-3000000", $a06643);
		bufTest( i64ToStr,    -4_000_000,    "-4000000", $a06644);
		bufTest( i64ToStr,    -5_000_000,    "-5000000", $a06645);
		bufTest( i64ToStr,    -6_000_000,    "-6000000", $a06646);
		bufTest( i64ToStr,    -7_000_000,    "-7000000", $a06647);
		bufTest( i64ToStr,    -8_000_000,    "-8000000", $a06648);
		bufTest( i64ToStr,    -9_000_000,    "-9000000", $a06649);
		bufTest( i64ToStr,    10_000_000,    "10000000", $07641);
		bufTest( i64ToStr,    20_000_000,    "20000000", $07642);
		bufTest( i64ToStr,    30_000_000,    "30000000", $07643);
		bufTest( i64ToStr,    40_000_000,    "40000000", $07644);
		bufTest( i64ToStr,    50_000_000,    "50000000", $07645);
		bufTest( i64ToStr,    60_000_000,    "60000000", $07646);
		bufTest( i64ToStr,    70_000_000,    "70000000", $07647);
		bufTest( i64ToStr,    80_000_000,    "80000000", $07648);
		bufTest( i64ToStr,    90_000_000,    "90000000", $07649);
		bufTest( i64ToStr,   -10_000_000,   "-10000000", $a07641);
		bufTest( i64ToStr,   -20_000_000,   "-20000000", $a07642);
		bufTest( i64ToStr,   -30_000_000,   "-30000000", $a07643);
		bufTest( i64ToStr,   -40_000_000,   "-40000000", $a07644);
		bufTest( i64ToStr,   -50_000_000,   "-50000000", $a07645);
		bufTest( i64ToStr,   -60_000_000,   "-60000000", $a07646);
		bufTest( i64ToStr,   -70_000_000,   "-70000000", $a07647);
		bufTest( i64ToStr,   -80_000_000,   "-80000000", $a07648);
		bufTest( i64ToStr,   -90_000_000,   "-90000000", $a07649);
		bufTest( i64ToStr,   100_000_000,   "100000000", $08641);
		bufTest( i64ToStr,   200_000_000,   "200000000", $08642);
		bufTest( i64ToStr,   300_000_000,   "300000000", $08643);
		bufTest( i64ToStr,   400_000_000,   "400000000", $08644);
		bufTest( i64ToStr,   500_000_000,   "500000000", $08645);
		bufTest( i64ToStr,   600_000_000,   "600000000", $08646);
		bufTest( i64ToStr,   700_000_000,   "700000000", $08647);
		bufTest( i64ToStr,   800_000_000,   "800000000", $08648);
		bufTest( i64ToStr,   900_000_000,   "900000000", $08649);
		bufTest( i64ToStr,  -100_000_000,  "-100000000", $a08641);
		bufTest( i64ToStr,  -200_000_000,  "-200000000", $a08642);
		bufTest( i64ToStr,  -300_000_000,  "-300000000", $a08643);
		bufTest( i64ToStr,  -400_000_000,  "-400000000", $a08644);
		bufTest( i64ToStr,  -500_000_000,  "-500000000", $a08645);
		bufTest( i64ToStr,  -600_000_000,  "-600000000", $a08646);
		bufTest( i64ToStr,  -700_000_000,  "-700000000", $a08647);
		bufTest( i64ToStr,  -800_000_000,  "-800000000", $a08648);
		bufTest( i64ToStr,  -900_000_000,  "-900000000", $a08649);
		bufTest( i64ToStr, 1_000_000_000,  "1000000000", $09641);
		bufTest( i64ToStr, 2_000_000_000,  "2000000000", $09642);
		bufTest( i64ToStr, 3_000_000_000,  "3000000000", $09643);
		bufTest( i64ToStr, 4_000_000_000,  "4000000000", $09644);
		bufTest( i64ToStr, 5_000_000_000,  "5000000000", $09645);
		bufTest( i64ToStr, 6_000_000_000,  "6000000000", $09646);
		bufTest( i64ToStr, 7_000_000_000,  "7000000000", $09647);
		bufTest( i64ToStr, 8_000_000_000,  "8000000000", $09648);
		bufTest( i64ToStr, 9_000_000_000,  "9000000000", $09649);
		bufTest( i64ToStr,-1_000_000_000, "-1000000000", $a09641);
		bufTest( i64ToStr,-2_000_000_000, "-2000000000", $a09642);
		bufTest( i64ToStr,-3_000_000_000, "-3000000000", $a09643);
		bufTest( i64ToStr,-4_000_000_000, "-4000000000", $a09644);
		bufTest( i64ToStr,-5_000_000_000, "-5000000000", $a09645);
		bufTest( i64ToStr,-6_000_000_000, "-6000000000", $a09646);
		bufTest( i64ToStr,-7_000_000_000, "-7000000000", $a09647);
		bufTest( i64ToStr,-8_000_000_000, "-8000000000", $a09648);
		bufTest( i64ToStr,-9_000_000_000, "-9000000000", $a09649);
		bufTest( i64ToStr,10_000_000_000, "10000000000", $0A641);
		bufTest( i64ToStr,20_000_000_000, "20000000000", $0A642);
		bufTest( i64ToStr,30_000_000_000, "30000000000", $0A643);
		bufTest( i64ToStr,40_000_000_000, "40000000000", $0A644);
		bufTest( i64ToStr,50_000_000_000, "50000000000", $0A645);
		bufTest( i64ToStr,60_000_000_000, "60000000000", $0A646);
		bufTest( i64ToStr,70_000_000_000, "70000000000", $0A647);
		bufTest( i64ToStr,80_000_000_000, "80000000000", $0A648);
		bufTest( i64ToStr,90_000_000_000, "90000000000", $0A649);
		bufTest( i64ToStr,-10_000_000_000, "-10000000000", $a0A641);
		bufTest( i64ToStr,-20_000_000_000, "-20000000000", $a0A642);
		bufTest( i64ToStr,-30_000_000_000, "-30000000000", $a0A643);
		bufTest( i64ToStr,-40_000_000_000, "-40000000000", $a0A644);
		bufTest( i64ToStr,-50_000_000_000, "-50000000000", $a0A645);
		bufTest( i64ToStr,-60_000_000_000, "-60000000000", $a0A646);
		bufTest( i64ToStr,-70_000_000_000, "-70000000000", $a0A647);
		bufTest( i64ToStr,-80_000_000_000, "-80000000000", $a0A648);
		bufTest( i64ToStr,-90_000_000_000, "-90000000000", $a0A649);
		bufTest( i64ToStr,100_000_000_000, "100000000000", $0B641);
		bufTest( i64ToStr,200_000_000_000, "200000000000", $0B642);
		bufTest( i64ToStr,300_000_000_000, "300000000000", $0B643);
		bufTest( i64ToStr,400_000_000_000, "400000000000", $0B644);
		bufTest( i64ToStr,500_000_000_000, "500000000000", $0B645);
		bufTest( i64ToStr,600_000_000_000, "600000000000", $0B646);
		bufTest( i64ToStr,700_000_000_000, "700000000000", $0B647);
		bufTest( i64ToStr,800_000_000_000, "800000000000", $0B648);
		bufTest( i64ToStr,900_000_000_000, "900000000000", $0B649);
		bufTest( i64ToStr,-100_000_000_000, "-100000000000", $a0B641);
		bufTest( i64ToStr,-200_000_000_000, "-200000000000", $a0B642);
		bufTest( i64ToStr,-300_000_000_000, "-300000000000", $a0B643);
		bufTest( i64ToStr,-400_000_000_000, "-400000000000", $a0B644);
		bufTest( i64ToStr,-500_000_000_000, "-500000000000", $a0B645);
		bufTest( i64ToStr,-600_000_000_000, "-600000000000", $a0B646);
		bufTest( i64ToStr,-700_000_000_000, "-700000000000", $a0B647);
		bufTest( i64ToStr,-800_000_000_000, "-800000000000", $a0B648);
		bufTest( i64ToStr,-900_000_000_000, "-900000000000", $a0B649);
		bufTest( i64ToStr,1_000_000_000_000, "1000000000000", $0C641);
		bufTest( i64ToStr,2_000_000_000_000, "2000000000000", $0C642);
		bufTest( i64ToStr,3_000_000_000_000, "3000000000000", $0C643);
		bufTest( i64ToStr,4_000_000_000_000, "4000000000000", $0C644);
		bufTest( i64ToStr,5_000_000_000_000, "5000000000000", $0C645);
		bufTest( i64ToStr,6_000_000_000_000, "6000000000000", $0C646);
		bufTest( i64ToStr,7_000_000_000_000, "7000000000000", $0C647);
		bufTest( i64ToStr,8_000_000_000_000, "8000000000000", $0C648);
		bufTest( i64ToStr,9_000_000_000_000, "9000000000000", $0C649);
		bufTest( i64ToStr,-1_000_000_000_000,  "-1000000000000", $a0C641);
		bufTest( i64ToStr,-2_000_000_000_000,  "-2000000000000", $a0C642);
		bufTest( i64ToStr,-3_000_000_000_000,  "-3000000000000", $a0C643);
		bufTest( i64ToStr,-4_000_000_000_000,  "-4000000000000", $a0C644);
		bufTest( i64ToStr,-5_000_000_000_000,  "-5000000000000", $a0C645);
		bufTest( i64ToStr,-6_000_000_000_000,  "-6000000000000", $a0C646);
		bufTest( i64ToStr,-7_000_000_000_000,  "-7000000000000", $a0C647);
		bufTest( i64ToStr,-8_000_000_000_000,  "-8000000000000", $a0C648);
		bufTest( i64ToStr,-9_000_000_000_000,  "-9000000000000", $a0C649);
		bufTest( i64ToStr,10_000_000_000_000,  "10000000000000", $0D641);
		bufTest( i64ToStr,20_000_000_000_000,  "20000000000000", $0D642);
		bufTest( i64ToStr,30_000_000_000_000,  "30000000000000", $0D643);
		bufTest( i64ToStr,40_000_000_000_000,  "40000000000000", $0D644);
		bufTest( i64ToStr,50_000_000_000_000,  "50000000000000", $0D645);
		bufTest( i64ToStr,60_000_000_000_000,  "60000000000000", $0D646);
		bufTest( i64ToStr,70_000_000_000_000,  "70000000000000", $0D647);
		bufTest( i64ToStr,80_000_000_000_000,  "80000000000000", $0D648);
		bufTest( i64ToStr,90_000_000_000_000,  "90000000000000", $0D649);
		bufTest( i64ToStr,-10_000_000_000_000,   "-10000000000000", $a0D641);
		bufTest( i64ToStr,-20_000_000_000_000,   "-20000000000000", $a0D642);
		bufTest( i64ToStr,-30_000_000_000_000,   "-30000000000000", $a0D643);
		bufTest( i64ToStr,-40_000_000_000_000,   "-40000000000000", $a0D644);
		bufTest( i64ToStr,-50_000_000_000_000,   "-50000000000000", $a0D645);
		bufTest( i64ToStr,-60_000_000_000_000,   "-60000000000000", $a0D646);
		bufTest( i64ToStr,-70_000_000_000_000,   "-70000000000000", $a0D647);
		bufTest( i64ToStr,-80_000_000_000_000,   "-80000000000000", $a0D648);
		bufTest( i64ToStr,-90_000_000_000_000,   "-90000000000000", $a0D649);
		bufTest( i64ToStr,100_000_000_000_000,   "100000000000000", $0E641);
		bufTest( i64ToStr,200_000_000_000_000,   "200000000000000", $0E642);
		bufTest( i64ToStr,300_000_000_000_000,   "300000000000000", $0E643);
		bufTest( i64ToStr,400_000_000_000_000,   "400000000000000", $0E644);
		bufTest( i64ToStr,500_000_000_000_000,   "500000000000000", $0E645);
		bufTest( i64ToStr,600_000_000_000_000,   "600000000000000", $0E646);
		bufTest( i64ToStr,700_000_000_000_000,   "700000000000000", $0E647);
		bufTest( i64ToStr,800_000_000_000_000,   "800000000000000", $0E648);
		bufTest( i64ToStr,900_000_000_000_000,   "900000000000000", $0E649);
		bufTest( i64ToStr,-100_000_000_000_000,    "-100000000000000", $a0E641);
		bufTest( i64ToStr,-200_000_000_000_000,    "-200000000000000", $a0E642);
		bufTest( i64ToStr,-300_000_000_000_000,    "-300000000000000", $a0E643);
		bufTest( i64ToStr,-400_000_000_000_000,    "-400000000000000", $a0E644);
		bufTest( i64ToStr,-500_000_000_000_000,    "-500000000000000", $a0E645);
		bufTest( i64ToStr,-600_000_000_000_000,    "-600000000000000", $a0E646);
		bufTest( i64ToStr,-700_000_000_000_000,    "-700000000000000", $a0E647);
		bufTest( i64ToStr,-800_000_000_000_000,    "-800000000000000", $a0E648);
		bufTest( i64ToStr,-900_000_000_000_000,    "-900000000000000", $a0E649);
		bufTest( i64ToStr,1_000_000_000_000_000,    "1000000000000000", $0F641);
		bufTest( i64ToStr,2_000_000_000_000_000,    "2000000000000000", $0F642);
		bufTest( i64ToStr,3_000_000_000_000_000,    "3000000000000000", $0F643);
		bufTest( i64ToStr,4_000_000_000_000_000,    "4000000000000000", $0F644);
		bufTest( i64ToStr,5_000_000_000_000_000,    "5000000000000000", $0F645);
		bufTest( i64ToStr,6_000_000_000_000_000,    "6000000000000000", $0F646);
		bufTest( i64ToStr,7_000_000_000_000_000,    "7000000000000000", $0F647);
		bufTest( i64ToStr,8_000_000_000_000_000,    "8000000000000000", $0F648);
		bufTest( i64ToStr,9_000_000_000_000_000,    "9000000000000000", $0F649);
		bufTest( i64ToStr,-1_000_000_000_000_000,     "-1000000000000000", $a0F641);
		bufTest( i64ToStr,-2_000_000_000_000_000,     "-2000000000000000", $a0F642);
		bufTest( i64ToStr,-3_000_000_000_000_000,     "-3000000000000000", $a0F643);
		bufTest( i64ToStr,-4_000_000_000_000_000,     "-4000000000000000", $a0F644);
		bufTest( i64ToStr,-5_000_000_000_000_000,     "-5000000000000000", $a0F645);
		bufTest( i64ToStr,-6_000_000_000_000_000,     "-6000000000000000", $a0F646);
		bufTest( i64ToStr,-7_000_000_000_000_000,     "-7000000000000000", $a0F647);
		bufTest( i64ToStr,-8_000_000_000_000_000,     "-8000000000000000", $a0F648);
		bufTest( i64ToStr,-9_000_000_000_000_000,     "-9000000000000000", $a0F649);
		bufTest( i64ToStr,10_000_000_000_000_000,     "10000000000000000", $10641);
		bufTest( i64ToStr,20_000_000_000_000_000,     "20000000000000000", $10642);
		bufTest( i64ToStr,30_000_000_000_000_000,     "30000000000000000", $10643);
		bufTest( i64ToStr,40_000_000_000_000_000,     "40000000000000000", $10644);
		bufTest( i64ToStr,50_000_000_000_000_000,     "50000000000000000", $10645);
		bufTest( i64ToStr,60_000_000_000_000_000,     "60000000000000000", $10646);
		bufTest( i64ToStr,70_000_000_000_000_000,     "70000000000000000", $10647);
		bufTest( i64ToStr,80_000_000_000_000_000,     "80000000000000000", $10648);
		bufTest( i64ToStr,90_000_000_000_000_000,     "90000000000000000", $10649);
		bufTest( i64ToStr,-10_000_000_000_000_000,      "-10000000000000000", $a10641);
		bufTest( i64ToStr,-20_000_000_000_000_000,      "-20000000000000000", $a10642);
		bufTest( i64ToStr,-30_000_000_000_000_000,      "-30000000000000000", $a10643);
		bufTest( i64ToStr,-40_000_000_000_000_000,      "-40000000000000000", $a10644);
		bufTest( i64ToStr,-50_000_000_000_000_000,      "-50000000000000000", $a10645);
		bufTest( i64ToStr,-60_000_000_000_000_000,      "-60000000000000000", $a10646);
		bufTest( i64ToStr,-70_000_000_000_000_000,      "-70000000000000000", $a10647);
		bufTest( i64ToStr,-80_000_000_000_000_000,      "-80000000000000000", $a10648);
		bufTest( i64ToStr,-90_000_000_000_000_000,      "-90000000000000000", $a10649);
		bufTest( i64ToStr,100_000_000_000_000_000,      "100000000000000000", $11641);
		bufTest( i64ToStr,200_000_000_000_000_000,      "200000000000000000", $11642);
		bufTest( i64ToStr,300_000_000_000_000_000,      "300000000000000000", $11643);
		bufTest( i64ToStr,400_000_000_000_000_000,      "400000000000000000", $11644);
		bufTest( i64ToStr,500_000_000_000_000_000,      "500000000000000000", $11645);
		bufTest( i64ToStr,600_000_000_000_000_000,      "600000000000000000", $11646);
		bufTest( i64ToStr,700_000_000_000_000_000,      "700000000000000000", $11647);
		bufTest( i64ToStr,800_000_000_000_000_000,      "800000000000000000", $11648);
		bufTest( i64ToStr,900_000_000_000_000_000,      "900000000000000000", $11649);
		bufTest( i64ToStr,-100_000_000_000_000_000,       "-100000000000000000", $a11641);
		bufTest( i64ToStr,-200_000_000_000_000_000,       "-200000000000000000", $a11642);
		bufTest( i64ToStr,-300_000_000_000_000_000,       "-300000000000000000", $a11643);
		bufTest( i64ToStr,-400_000_000_000_000_000,       "-400000000000000000", $a11644);
		bufTest( i64ToStr,-500_000_000_000_000_000,       "-500000000000000000", $a11645);
		bufTest( i64ToStr,-600_000_000_000_000_000,       "-600000000000000000", $a11646);
		bufTest( i64ToStr,-700_000_000_000_000_000,       "-700000000000000000", $a11647);
		bufTest( i64ToStr,-800_000_000_000_000_000,       "-800000000000000000", $a11648);
		bufTest( i64ToStr,-900_000_000_000_000_000,       "-900000000000000000", $a11649);
		bufTest( i64ToStr,1_000_000_000_000_000_000,       "1000000000000000000", $12641);
		bufTest( i64ToStr,2_000_000_000_000_000_000,       "2000000000000000000", $12642);
		bufTest( i64ToStr,3_000_000_000_000_000_000,       "3000000000000000000", $12643);
		bufTest( i64ToStr,4_000_000_000_000_000_000,       "4000000000000000000", $12644);
		bufTest( i64ToStr,5_000_000_000_000_000_000,       "5000000000000000000", $12645);
		bufTest( i64ToStr,6_000_000_000_000_000_000,       "6000000000000000000", $12646);
		bufTest( i64ToStr,7_000_000_000_000_000_000,       "7000000000000000000", $12647);
		bufTest( i64ToStr,8_000_000_000_000_000_000,       "8000000000000000000", $12648);
		bufTest( i64ToStr,9_000_000_000_000_000_000,       "9000000000000000000", $12649);
		bufTest( i64ToStr,-1_000_000_000_000_000_000,        "-1000000000000000000", $a12641);
		bufTest( i64ToStr,-2_000_000_000_000_000_000,        "-2000000000000000000", $a12642);
		bufTest( i64ToStr,-3_000_000_000_000_000_000,        "-3000000000000000000", $a12643);
		bufTest( i64ToStr,-4_000_000_000_000_000_000,        "-4000000000000000000", $a12644);
		bufTest( i64ToStr,-5_000_000_000_000_000_000,        "-5000000000000000000", $a12645);
		bufTest( i64ToStr,-6_000_000_000_000_000_000,        "-6000000000000000000", $a12646);
		bufTest( i64ToStr,-7_000_000_000_000_000_000,        "-7000000000000000000", $a12647);
		bufTest( i64ToStr,-8_000_000_000_000_000_000,        "-8000000000000000000", $a12648);
		bufTest( i64ToStr,-9_000_000_000_000_000_000,        "-9000000000000000000", $a12649);

		
		readonly
			i64Test_a	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr( "0", ' ', i ),
								
							#endfor
							mkStr( "0", ' ', 63 )
						];
						
			i64Test_b	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "127", '.', i ),
								
							#endfor
							mkStr2( "127", '.', 63 )
						];
						
			i64Test_c	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "-128", '*', i ),
								
							#endfor
							mkStr2( "-128", '*', 63 )
						];
						
		endreadonly;
		strTest( i64ToStr, 0, i64Test_a, $a0F0A0, 63, ' ' );				
		strTest2( i64ToStr, 127, i64Test_b, $a0F0A1, 63, '.' );				
		strTest2( i64ToStr, -128, i64Test_c, $a0F0A2, 63, '*' );				


		stderr.put( "conv.i64ToStr succeeded!" nl );
		
	  anyexception
	  
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"conv.i64ToStr failed! eax=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;






	// Testing conv.i128ToStr

	try

		bufTest( i128ToStr,0,"0", $0_1280);
		bufTest( i128ToStr,1,"1", $0_1281);
		bufTest( i128ToStr,2,"2", $0_1282);
		bufTest( i128ToStr,3,"3", $0_1283);
		bufTest( i128ToStr,4,"4", $0_1284);
		bufTest( i128ToStr,5,"5", $0_1285);
		bufTest( i128ToStr,6,"6", $0_1286);
		bufTest( i128ToStr,7,"7", $0_1287);
		bufTest( i128ToStr,8,"8", $0_1288);
		bufTest( i128ToStr,9,"9", $0_1289);
		bufTest( i128ToStr,0,"0", $a0_1280);
		bufTest( i128ToStr,-1,"-1", $a0_1281);
		bufTest( i128ToStr,-2,"-2", $a0_1282);
		bufTest( i128ToStr,-3,"-3", $a0_1283);
		bufTest( i128ToStr,-4,"-4", $a0_1284);
		bufTest( i128ToStr,-5,"-5", $a0_1285);
		bufTest( i128ToStr,-6,"-6", $a0_1286);
		bufTest( i128ToStr,-7,"-7", $a0_1287);
		bufTest( i128ToStr,-8,"-8", $a0_1288);
		bufTest( i128ToStr,-9,"-9", $a0_1289);
		bufTest( i128ToStr,10,"10", $1_1281);
		bufTest( i128ToStr,20,"20", $1_1282);
		bufTest( i128ToStr,30,"30", $1_1283);
		bufTest( i128ToStr,40,"40", $1_1284);
		bufTest( i128ToStr,50,"50", $1_1285);
		bufTest( i128ToStr,60,"60", $1_1286);
		bufTest( i128ToStr,70,"70", $1_1287);
		bufTest( i128ToStr,80,"80", $1_1288);
		bufTest( i128ToStr,90,"90", $1_1289);
		bufTest( i128ToStr,-10,"-10", $a1_1281);
		bufTest( i128ToStr,-20,"-20", $a1_1282);
		bufTest( i128ToStr,-30,"-30", $a1_1283);
		bufTest( i128ToStr,-40,"-40", $a1_1284);
		bufTest( i128ToStr,-50,"-50", $a1_1285);
		bufTest( i128ToStr,-60,"-60", $a1_1286);
		bufTest( i128ToStr,-70,"-70", $a1_1287);
		bufTest( i128ToStr,-80,"-80", $a1_1288);
		bufTest( i128ToStr,-90,"-90", $a1_1289);
		bufTest( i128ToStr,100,"100", $2_1281);
		bufTest( i128ToStr,200,"200", $2_1282);
		bufTest( i128ToStr,300,"300", $2_1283);
		bufTest( i128ToStr,400,"400", $2_1284);
		bufTest( i128ToStr,500,"500", $2_1285);
		bufTest( i128ToStr,600,"600", $2_1286);
		bufTest( i128ToStr,700,"700", $2_1287);
		bufTest( i128ToStr,800,"800", $2_1288);
		bufTest( i128ToStr,900,"900", $2_1289);
		bufTest( i128ToStr,-100,"-100", $a2_1281);
		bufTest( i128ToStr,-200,"-200", $a2_1282);
		bufTest( i128ToStr,-300,"-300", $a2_1283);
		bufTest( i128ToStr,-400,"-400", $a2_1284);
		bufTest( i128ToStr,-500,"-500", $a2_1285);
		bufTest( i128ToStr,-600,"-600", $a2_1286);
		bufTest( i128ToStr,-700,"-700", $a2_1287);
		bufTest( i128ToStr,-800,"-800", $a2_1288);
		bufTest( i128ToStr,-900,"-900", $a2_1289);
		bufTest( i128ToStr,1_000,"1000", $3_1281);
		bufTest( i128ToStr,2_000,"2000", $3_1282);
		bufTest( i128ToStr,3_000,"3000", $3_1283);
		bufTest( i128ToStr,4_000,"4000", $3_1284);
		bufTest( i128ToStr,5_000,"5000", $3_1285);
		bufTest( i128ToStr,6_000,"6000", $3_1286);
		bufTest( i128ToStr,7_000,"7000", $3_1287);
		bufTest( i128ToStr,8_000,"8000", $3_1288);
		bufTest( i128ToStr,9_000,"9000", $3_1289);
		bufTest( i128ToStr,-1_000,"-1000", $a3_1281);
		bufTest( i128ToStr,-2_000,"-2000", $a3_1282);
		bufTest( i128ToStr,-3_000,"-3000", $a3_1283);
		bufTest( i128ToStr,-4_000,"-4000", $a3_1284);
		bufTest( i128ToStr,-5_000,"-5000", $a3_1285);
		bufTest( i128ToStr,-6_000,"-6000", $a3_1286);
		bufTest( i128ToStr,-7_000,"-7000", $a3_1287);
		bufTest( i128ToStr,-8_000,"-8000", $a3_1288);
		bufTest( i128ToStr,-9_000,"-9000", $a3_1289);
		bufTest( i128ToStr,10_000,"10000", $4_1281);
		bufTest( i128ToStr,20_000,"20000", $4_1282);
		bufTest( i128ToStr,30_000,"30000", $4_1283);
		bufTest( i128ToStr,40_000,"40000", $4_1284);
		bufTest( i128ToStr,50_000,"50000", $4_1285);
		bufTest( i128ToStr,60_000,"60000", $4_1286);
		bufTest( i128ToStr,70_000,"70000", $4_1287);
		bufTest( i128ToStr,80_000,"80000", $4_1288);
		bufTest( i128ToStr,90_000,"90000", $4_1289);
		bufTest( i128ToStr,-10_000,"-10000", $a4_1281);
		bufTest( i128ToStr,-20_000,"-20000", $a4_1282);
		bufTest( i128ToStr,-30_000,"-30000", $a4_1283);
		bufTest( i128ToStr,-40_000,"-40000", $a4_1284);
		bufTest( i128ToStr,-50_000,"-50000", $a4_1285);
		bufTest( i128ToStr,-60_000,"-60000", $a4_1286);
		bufTest( i128ToStr,-70_000,"-70000", $a4_1287);
		bufTest( i128ToStr,-80_000,"-80000", $a4_1288);
		bufTest( i128ToStr,-90_000,"-90000", $a4_1289);
		bufTest( i128ToStr,100_000,"100000", $5_1281);
		bufTest( i128ToStr,200_000,"200000", $5_1282);
		bufTest( i128ToStr,300_000,"300000", $5_1283);
		bufTest( i128ToStr,400_000,"400000", $5_1284);
		bufTest( i128ToStr,500_000,"500000", $5_1285);
		bufTest( i128ToStr,600_000,"600000", $5_1286);
		bufTest( i128ToStr,700_000,"700000", $5_1287);
		bufTest( i128ToStr,800_000,"800000", $5_1288);
		bufTest( i128ToStr,900_000,"900000", $5_1289);
		bufTest( i128ToStr,-100_000,"-100000", $a5_1281);
		bufTest( i128ToStr,-200_000,"-200000", $a5_1282);
		bufTest( i128ToStr,-300_000,"-300000", $a5_1283);
		bufTest( i128ToStr,-400_000,"-400000", $a5_1284);
		bufTest( i128ToStr,-500_000,"-500000", $a5_1285);
		bufTest( i128ToStr,-600_000,"-600000", $a5_1286);
		bufTest( i128ToStr,-700_000,"-700000", $a5_1287);
		bufTest( i128ToStr,-800_000,"-800000", $a5_1288);
		bufTest( i128ToStr,-900_000,"-900000", $a5_1289);
		bufTest( i128ToStr,1_000_000,"1000000", $6_1281);
		bufTest( i128ToStr,2_000_000,"2000000", $6_1282);
		bufTest( i128ToStr,3_000_000,"3000000", $6_1283);
		bufTest( i128ToStr,4_000_000,"4000000", $6_1284);
		bufTest( i128ToStr,5_000_000,"5000000", $6_1285);
		bufTest( i128ToStr,6_000_000,"6000000", $6_1286);
		bufTest( i128ToStr,7_000_000,"7000000", $6_1287);
		bufTest( i128ToStr,8_000_000,"8000000", $6_1288);
		bufTest( i128ToStr,9_000_000,"9000000", $6_1289);
		bufTest( i128ToStr,-1_000_000,"-1000000", $a6_1281);
		bufTest( i128ToStr,-2_000_000,"-2000000", $a6_1282);
		bufTest( i128ToStr,-3_000_000,"-3000000", $a6_1283);
		bufTest( i128ToStr,-4_000_000,"-4000000", $a6_1284);
		bufTest( i128ToStr,-5_000_000,"-5000000", $a6_1285);
		bufTest( i128ToStr,-6_000_000,"-6000000", $a6_1286);
		bufTest( i128ToStr,-7_000_000,"-7000000", $a6_1287);
		bufTest( i128ToStr,-8_000_000,"-8000000", $a6_1288);
		bufTest( i128ToStr,-9_000_000,"-9000000", $a6_1289);
		bufTest( i128ToStr,10_000_000,"10000000", $7_1281);
		bufTest( i128ToStr,20_000_000,"20000000", $7_1282);
		bufTest( i128ToStr,30_000_000,"30000000", $7_1283);
		bufTest( i128ToStr,40_000_000,"40000000", $7_1284);
		bufTest( i128ToStr,50_000_000,"50000000", $7_1285);
		bufTest( i128ToStr,60_000_000,"60000000", $7_1286);
		bufTest( i128ToStr,70_000_000,"70000000", $7_1287);
		bufTest( i128ToStr,80_000_000,"80000000", $7_1288);
		bufTest( i128ToStr,90_000_000,"90000000", $7_1289);
		bufTest( i128ToStr,-10_000_000,"-10000000", $a7_1281);
		bufTest( i128ToStr,-20_000_000,"-20000000", $a7_1282);
		bufTest( i128ToStr,-30_000_000,"-30000000", $a7_1283);
		bufTest( i128ToStr,-40_000_000,"-40000000", $a7_1284);
		bufTest( i128ToStr,-50_000_000,"-50000000", $a7_1285);
		bufTest( i128ToStr,-60_000_000,"-60000000", $a7_1286);
		bufTest( i128ToStr,-70_000_000,"-70000000", $a7_1287);
		bufTest( i128ToStr,-80_000_000,"-80000000", $a7_1288);
		bufTest( i128ToStr,-90_000_000,"-90000000", $a7_1289);
		bufTest( i128ToStr,100_000_000,"100000000", $8_1281);
		bufTest( i128ToStr,200_000_000,"200000000", $8_1282);
		bufTest( i128ToStr,300_000_000,"300000000", $8_1283);
		bufTest( i128ToStr,400_000_000,"400000000", $8_1284);
		bufTest( i128ToStr,500_000_000,"500000000", $8_1285);
		bufTest( i128ToStr,600_000_000,"600000000", $8_1286);
		bufTest( i128ToStr,700_000_000,"700000000", $8_1287);
		bufTest( i128ToStr,800_000_000,"800000000", $8_1288);
		bufTest( i128ToStr,900_000_000,"900000000", $8_1289);
		bufTest( i128ToStr,-100_000_000,"-100000000", $a8_1281);
		bufTest( i128ToStr,-200_000_000,"-200000000", $a8_1282);
		bufTest( i128ToStr,-300_000_000,"-300000000", $a8_1283);
		bufTest( i128ToStr,-400_000_000,"-400000000", $a8_1284);
		bufTest( i128ToStr,-500_000_000,"-500000000", $a8_1285);
		bufTest( i128ToStr,-600_000_000,"-600000000", $a8_1286);
		bufTest( i128ToStr,-700_000_000,"-700000000", $a8_1287);
		bufTest( i128ToStr,-800_000_000,"-800000000", $a8_1288);
		bufTest( i128ToStr,-900_000_000,"-900000000", $a8_1289);
		bufTest( i128ToStr,1_000_000_000,"1000000000", $9_1281);
		bufTest( i128ToStr,2_000_000_000,"2000000000", $9_1282);
		bufTest( i128ToStr,3_000_000_000,"3000000000", $9_1283);
		bufTest( i128ToStr,4_000_000_000,"4000000000", $9_1284);
		bufTest( i128ToStr,5_000_000_000,"5000000000", $9_1285);
		bufTest( i128ToStr,6_000_000_000,"6000000000", $9_1286);
		bufTest( i128ToStr,7_000_000_000,"7000000000", $9_1287);
		bufTest( i128ToStr,8_000_000_000,"8000000000", $9_1288);
		bufTest( i128ToStr,9_000_000_000,"9000000000", $9_1289);
		bufTest( i128ToStr,-1_000_000_000,"-1000000000", $a9_1281);
		bufTest( i128ToStr,-2_000_000_000,"-2000000000", $a9_1282);
		bufTest( i128ToStr,-3_000_000_000,"-3000000000", $a9_1283);
		bufTest( i128ToStr,-4_000_000_000,"-4000000000", $a9_1284);
		bufTest( i128ToStr,-5_000_000_000,"-5000000000", $a9_1285);
		bufTest( i128ToStr,-6_000_000_000,"-6000000000", $a9_1286);
		bufTest( i128ToStr,-7_000_000_000,"-7000000000", $a9_1287);
		bufTest( i128ToStr,-8_000_000_000,"-8000000000", $a9_1288);
		bufTest( i128ToStr,-9_000_000_000,"-9000000000", $a9_1289);
		bufTest( i128ToStr,10_000_000_000,"10000000000", $A_1281);
		bufTest( i128ToStr,20_000_000_000,"20000000000", $A_1282);
		bufTest( i128ToStr,30_000_000_000,"30000000000", $A_1283);
		bufTest( i128ToStr,40_000_000_000,"40000000000", $A_1284);
		bufTest( i128ToStr,50_000_000_000,"50000000000", $A_1285);
		bufTest( i128ToStr,60_000_000_000,"60000000000", $A_1286);
		bufTest( i128ToStr,70_000_000_000,"70000000000", $A_1287);
		bufTest( i128ToStr,80_000_000_000,"80000000000", $A_1288);
		bufTest( i128ToStr,90_000_000_000,"90000000000", $A_1289);
		bufTest( i128ToStr,-10_000_000_000,"-10000000000", $aA_1281);
		bufTest( i128ToStr,-20_000_000_000,"-20000000000", $aA_1282);
		bufTest( i128ToStr,-30_000_000_000,"-30000000000", $aA_1283);
		bufTest( i128ToStr,-40_000_000_000,"-40000000000", $aA_1284);
		bufTest( i128ToStr,-50_000_000_000,"-50000000000", $aA_1285);
		bufTest( i128ToStr,-60_000_000_000,"-60000000000", $aA_1286);
		bufTest( i128ToStr,-70_000_000_000,"-70000000000", $aA_1287);
		bufTest( i128ToStr,-80_000_000_000,"-80000000000", $aA_1288);
		bufTest( i128ToStr,-90_000_000_000,"-90000000000", $aA_1289);
		bufTest( i128ToStr,100_000_000_000,"100000000000", $B_1281);
		bufTest( i128ToStr,200_000_000_000,"200000000000", $B_1282);
		bufTest( i128ToStr,300_000_000_000,"300000000000", $B_1283);
		bufTest( i128ToStr,400_000_000_000,"400000000000", $B_1284);
		bufTest( i128ToStr,500_000_000_000,"500000000000", $B_1285);
		bufTest( i128ToStr,600_000_000_000,"600000000000", $B_1286);
		bufTest( i128ToStr,700_000_000_000,"700000000000", $B_1287);
		bufTest( i128ToStr,800_000_000_000,"800000000000", $B_1288);
		bufTest( i128ToStr,900_000_000_000,"900000000000", $B_1289);
		bufTest( i128ToStr,-100_000_000_000,"-100000000000", $aB_1281);
		bufTest( i128ToStr,-200_000_000_000,"-200000000000", $aB_1282);
		bufTest( i128ToStr,-300_000_000_000,"-300000000000", $aB_1283);
		bufTest( i128ToStr,-400_000_000_000,"-400000000000", $aB_1284);
		bufTest( i128ToStr,-500_000_000_000,"-500000000000", $aB_1285);
		bufTest( i128ToStr,-600_000_000_000,"-600000000000", $aB_1286);
		bufTest( i128ToStr,-700_000_000_000,"-700000000000", $aB_1287);
		bufTest( i128ToStr,-800_000_000_000,"-800000000000", $aB_1288);
		bufTest( i128ToStr,-900_000_000_000,"-900000000000", $aB_1289);
		bufTest( i128ToStr,1_000_000_000_000,"1000000000000", $C_1281);
		bufTest( i128ToStr,2_000_000_000_000,"2000000000000", $C_1282);
		bufTest( i128ToStr,3_000_000_000_000,"3000000000000", $C_1283);
		bufTest( i128ToStr,4_000_000_000_000,"4000000000000", $C_1284);
		bufTest( i128ToStr,5_000_000_000_000,"5000000000000", $C_1285);
		bufTest( i128ToStr,6_000_000_000_000,"6000000000000", $C_1286);
		bufTest( i128ToStr,7_000_000_000_000,"7000000000000", $C_1287);
		bufTest( i128ToStr,8_000_000_000_000,"8000000000000", $C_1288);
		bufTest( i128ToStr,9_000_000_000_000,"9000000000000", $C_1289);
		bufTest( i128ToStr,-1_000_000_000_000,"-1000000000000", $aC_1281);
		bufTest( i128ToStr,-2_000_000_000_000,"-2000000000000", $aC_1282);
		bufTest( i128ToStr,-3_000_000_000_000,"-3000000000000", $aC_1283);
		bufTest( i128ToStr,-4_000_000_000_000,"-4000000000000", $aC_1284);
		bufTest( i128ToStr,-5_000_000_000_000,"-5000000000000", $aC_1285);
		bufTest( i128ToStr,-6_000_000_000_000,"-6000000000000", $aC_1286);
		bufTest( i128ToStr,-7_000_000_000_000,"-7000000000000", $aC_1287);
		bufTest( i128ToStr,-8_000_000_000_000,"-8000000000000", $aC_1288);
		bufTest( i128ToStr,-9_000_000_000_000,"-9000000000000", $aC_1289);
		bufTest( i128ToStr,10_000_000_000_000,"10000000000000", $D_1281);
		bufTest( i128ToStr,20_000_000_000_000,"20000000000000", $D_1282);
		bufTest( i128ToStr,30_000_000_000_000,"30000000000000", $D_1283);
		bufTest( i128ToStr,40_000_000_000_000,"40000000000000", $D_1284);
		bufTest( i128ToStr,50_000_000_000_000,"50000000000000", $D_1285);
		bufTest( i128ToStr,60_000_000_000_000,"60000000000000", $D_1286);
		bufTest( i128ToStr,70_000_000_000_000,"70000000000000", $D_1287);
		bufTest( i128ToStr,80_000_000_000_000,"80000000000000", $D_1288);
		bufTest( i128ToStr,90_000_000_000_000,"90000000000000", $D_1289);
		bufTest( i128ToStr,-10_000_000_000_000,"-10000000000000", $aD_1281);
		bufTest( i128ToStr,-20_000_000_000_000,"-20000000000000", $aD_1282);
		bufTest( i128ToStr,-30_000_000_000_000,"-30000000000000", $aD_1283);
		bufTest( i128ToStr,-40_000_000_000_000,"-40000000000000", $aD_1284);
		bufTest( i128ToStr,-50_000_000_000_000,"-50000000000000", $aD_1285);
		bufTest( i128ToStr,-60_000_000_000_000,"-60000000000000", $aD_1286);
		bufTest( i128ToStr,-70_000_000_000_000,"-70000000000000", $aD_1287);
		bufTest( i128ToStr,-80_000_000_000_000,"-80000000000000", $aD_1288);
		bufTest( i128ToStr,-90_000_000_000_000,"-90000000000000", $aD_1289);
		bufTest( i128ToStr,100_000_000_000_000,"100000000000000", $E_1281);
		bufTest( i128ToStr,200_000_000_000_000,"200000000000000", $E_1282);
		bufTest( i128ToStr,300_000_000_000_000,"300000000000000", $E_1283);
		bufTest( i128ToStr,400_000_000_000_000,"400000000000000", $E_1284);
		bufTest( i128ToStr,500_000_000_000_000,"500000000000000", $E_1285);
		bufTest( i128ToStr,600_000_000_000_000,"600000000000000", $E_1286);
		bufTest( i128ToStr,700_000_000_000_000,"700000000000000", $E_1287);
		bufTest( i128ToStr,800_000_000_000_000,"800000000000000", $E_1288);
		bufTest( i128ToStr,900_000_000_000_000,"900000000000000", $E_1289);
		bufTest( i128ToStr,-100_000_000_000_000,"-100000000000000", $aE_1281);
		bufTest( i128ToStr,-200_000_000_000_000,"-200000000000000", $aE_1282);
		bufTest( i128ToStr,-300_000_000_000_000,"-300000000000000", $aE_1283);
		bufTest( i128ToStr,-400_000_000_000_000,"-400000000000000", $aE_1284);
		bufTest( i128ToStr,-500_000_000_000_000,"-500000000000000", $aE_1285);
		bufTest( i128ToStr,-600_000_000_000_000,"-600000000000000", $aE_1286);
		bufTest( i128ToStr,-700_000_000_000_000,"-700000000000000", $aE_1287);
		bufTest( i128ToStr,-800_000_000_000_000,"-800000000000000", $aE_1288);
		bufTest( i128ToStr,-900_000_000_000_000,"-900000000000000", $aE_1289);
		bufTest( i128ToStr,1_000_000_000_000_000,"1000000000000000", $F_1281);
		bufTest( i128ToStr,2_000_000_000_000_000,"2000000000000000", $F_1282);
		bufTest( i128ToStr,3_000_000_000_000_000,"3000000000000000", $F_1283);
		bufTest( i128ToStr,4_000_000_000_000_000,"4000000000000000", $F_1284);
		bufTest( i128ToStr,5_000_000_000_000_000,"5000000000000000", $F_1285);
		bufTest( i128ToStr,6_000_000_000_000_000,"6000000000000000", $F_1286);
		bufTest( i128ToStr,7_000_000_000_000_000,"7000000000000000", $F_1287);
		bufTest( i128ToStr,8_000_000_000_000_000,"8000000000000000", $F_1288);
		bufTest( i128ToStr,9_000_000_000_000_000,"9000000000000000", $F_1289);
		bufTest( i128ToStr,-1_000_000_000_000_000,"-1000000000000000", $aF_1281);
		bufTest( i128ToStr,-2_000_000_000_000_000,"-2000000000000000", $aF_1282);
		bufTest( i128ToStr,-3_000_000_000_000_000,"-3000000000000000", $aF_1283);
		bufTest( i128ToStr,-4_000_000_000_000_000,"-4000000000000000", $aF_1284);
		bufTest( i128ToStr,-5_000_000_000_000_000,"-5000000000000000", $aF_1285);
		bufTest( i128ToStr,-6_000_000_000_000_000,"-6000000000000000", $aF_1286);
		bufTest( i128ToStr,-7_000_000_000_000_000,"-7000000000000000", $aF_1287);
		bufTest( i128ToStr,-8_000_000_000_000_000,"-8000000000000000", $aF_1288);
		bufTest( i128ToStr,-9_000_000_000_000_000,"-9000000000000000", $aF_1289);
		bufTest( i128ToStr,10_000_000_000_000_000,"10000000000000000", $0_1281);
		bufTest( i128ToStr,20_000_000_000_000_000,"20000000000000000", $0_1282);
		bufTest( i128ToStr,30_000_000_000_000_000,"30000000000000000", $0_1283);
		bufTest( i128ToStr,40_000_000_000_000_000,"40000000000000000", $0_1284);
		bufTest( i128ToStr,50_000_000_000_000_000,"50000000000000000", $0_1285);
		bufTest( i128ToStr,60_000_000_000_000_000,"60000000000000000", $0_1286);
		bufTest( i128ToStr,70_000_000_000_000_000,"70000000000000000", $0_1287);
		bufTest( i128ToStr,80_000_000_000_000_000,"80000000000000000", $0_1288);
		bufTest( i128ToStr,90_000_000_000_000_000,"90000000000000000", $0_1289);
		bufTest( i128ToStr,-10_000_000_000_000_000,"-10000000000000000", $a0_1281);
		bufTest( i128ToStr,-20_000_000_000_000_000,"-20000000000000000", $a0_1282);
		bufTest( i128ToStr,-30_000_000_000_000_000,"-30000000000000000", $a0_1283);
		bufTest( i128ToStr,-40_000_000_000_000_000,"-40000000000000000", $a0_1284);
		bufTest( i128ToStr,-50_000_000_000_000_000,"-50000000000000000", $a0_1285);
		bufTest( i128ToStr,-60_000_000_000_000_000,"-60000000000000000", $a0_1286);
		bufTest( i128ToStr,-70_000_000_000_000_000,"-70000000000000000", $a0_1287);
		bufTest( i128ToStr,-80_000_000_000_000_000,"-80000000000000000", $a0_1288);
		bufTest( i128ToStr,-90_000_000_000_000_000,"-90000000000000000", $a0_1289);
		bufTest( i128ToStr,100_000_000_000_000_000,"100000000000000000", $1_1281);
		bufTest( i128ToStr,200_000_000_000_000_000,"200000000000000000", $1_1282);
		bufTest( i128ToStr,300_000_000_000_000_000,"300000000000000000", $1_1283);
		bufTest( i128ToStr,400_000_000_000_000_000,"400000000000000000", $1_1284);
		bufTest( i128ToStr,500_000_000_000_000_000,"500000000000000000", $1_1285);
		bufTest( i128ToStr,600_000_000_000_000_000,"600000000000000000", $1_1286);
		bufTest( i128ToStr,700_000_000_000_000_000,"700000000000000000", $1_1287);
		bufTest( i128ToStr,800_000_000_000_000_000,"800000000000000000", $1_1288);
		bufTest( i128ToStr,900_000_000_000_000_000,"900000000000000000", $1_1289);
		bufTest( i128ToStr,-100_000_000_000_000_000,"-100000000000000000", $a1_1281);
		bufTest( i128ToStr,-200_000_000_000_000_000,"-200000000000000000", $a1_1282);
		bufTest( i128ToStr,-300_000_000_000_000_000,"-300000000000000000", $a1_1283);
		bufTest( i128ToStr,-400_000_000_000_000_000,"-400000000000000000", $a1_1284);
		bufTest( i128ToStr,-500_000_000_000_000_000,"-500000000000000000", $a1_1285);
		bufTest( i128ToStr,-600_000_000_000_000_000,"-600000000000000000", $a1_1286);
		bufTest( i128ToStr,-700_000_000_000_000_000,"-700000000000000000", $a1_1287);
		bufTest( i128ToStr,-800_000_000_000_000_000,"-800000000000000000", $a1_1288);
		bufTest( i128ToStr,-900_000_000_000_000_000,"-900000000000000000", $a1_1289);
		bufTest( i128ToStr,1_000_000_000_000_000_000,"1000000000000000000", $2_1281);
		bufTest( i128ToStr,2_000_000_000_000_000_000,"2000000000000000000", $2_1282);
		bufTest( i128ToStr,3_000_000_000_000_000_000,"3000000000000000000", $2_1283);
		bufTest( i128ToStr,4_000_000_000_000_000_000,"4000000000000000000", $2_1284);
		bufTest( i128ToStr,5_000_000_000_000_000_000,"5000000000000000000", $2_1285);
		bufTest( i128ToStr,6_000_000_000_000_000_000,"6000000000000000000", $2_1286);
		bufTest( i128ToStr,7_000_000_000_000_000_000,"7000000000000000000", $2_1287);
		bufTest( i128ToStr,8_000_000_000_000_000_000,"8000000000000000000", $2_1288);
		bufTest( i128ToStr,9_000_000_000_000_000_000,"9000000000000000000", $2_1289);
		bufTest( i128ToStr,-1_000_000_000_000_000_000,"-1000000000000000000", $a2_1281);
		bufTest( i128ToStr,-2_000_000_000_000_000_000,"-2000000000000000000", $a2_1282);
		bufTest( i128ToStr,-3_000_000_000_000_000_000,"-3000000000000000000", $a2_1283);
		bufTest( i128ToStr,-4_000_000_000_000_000_000,"-4000000000000000000", $a2_1284);
		bufTest( i128ToStr,-5_000_000_000_000_000_000,"-5000000000000000000", $a2_1285);
		bufTest( i128ToStr,-6_000_000_000_000_000_000,"-6000000000000000000", $a2_1286);
		bufTest( i128ToStr,-7_000_000_000_000_000_000,"-7000000000000000000", $a2_1287);
		bufTest( i128ToStr,-8_000_000_000_000_000_000,"-8000000000000000000", $a2_1288);
		bufTest( i128ToStr,-9_000_000_000_000_000_000,"-9000000000000000000", $a2_1289);
		bufTest( i128ToStr,10_000_000_000_000_000_000,"10000000000000000000", $3_1281);
		bufTest( i128ToStr,20_000_000_000_000_000_000,"20000000000000000000", $3_1282);
		bufTest( i128ToStr,30_000_000_000_000_000_000,"30000000000000000000", $3_1283);
		bufTest( i128ToStr,40_000_000_000_000_000_000,"40000000000000000000", $3_1284);
		bufTest( i128ToStr,50_000_000_000_000_000_000,"50000000000000000000", $3_1285);
		bufTest( i128ToStr,60_000_000_000_000_000_000,"60000000000000000000", $3_1286);
		bufTest( i128ToStr,70_000_000_000_000_000_000,"70000000000000000000", $3_1287);
		bufTest( i128ToStr,80_000_000_000_000_000_000,"80000000000000000000", $3_1288);
		bufTest( i128ToStr,90_000_000_000_000_000_000,"90000000000000000000", $3_1289);
		bufTest( i128ToStr,-10_000_000_000_000_000_000,"-10000000000000000000", $a3_1281);
		bufTest( i128ToStr,-20_000_000_000_000_000_000,"-20000000000000000000", $a3_1282);
		bufTest( i128ToStr,-30_000_000_000_000_000_000,"-30000000000000000000", $a3_1283);
		bufTest( i128ToStr,-40_000_000_000_000_000_000,"-40000000000000000000", $a3_1284);
		bufTest( i128ToStr,-50_000_000_000_000_000_000,"-50000000000000000000", $a3_1285);
		bufTest( i128ToStr,-60_000_000_000_000_000_000,"-60000000000000000000", $a3_1286);
		bufTest( i128ToStr,-70_000_000_000_000_000_000,"-70000000000000000000", $a3_1287);
		bufTest( i128ToStr,-80_000_000_000_000_000_000,"-80000000000000000000", $a3_1288);
		bufTest( i128ToStr,-90_000_000_000_000_000_000,"-90000000000000000000", $a3_1289);
		bufTest( i128ToStr,100_000_000_000_000_000_000,"100000000000000000000", $4_1281);
		bufTest( i128ToStr,200_000_000_000_000_000_000,"200000000000000000000", $4_1282);
		bufTest( i128ToStr,300_000_000_000_000_000_000,"300000000000000000000", $4_1283);
		bufTest( i128ToStr,400_000_000_000_000_000_000,"400000000000000000000", $4_1284);
		bufTest( i128ToStr,500_000_000_000_000_000_000,"500000000000000000000", $4_1285);
		bufTest( i128ToStr,600_000_000_000_000_000_000,"600000000000000000000", $4_1286);
		bufTest( i128ToStr,700_000_000_000_000_000_000,"700000000000000000000", $4_1287);
		bufTest( i128ToStr,800_000_000_000_000_000_000,"800000000000000000000", $4_1288);
		bufTest( i128ToStr,900_000_000_000_000_000_000,"900000000000000000000", $4_1289);
		bufTest( i128ToStr,-100_000_000_000_000_000_000,"-100000000000000000000", $a4_1281);
		bufTest( i128ToStr,-200_000_000_000_000_000_000,"-200000000000000000000", $a4_1282);
		bufTest( i128ToStr,-300_000_000_000_000_000_000,"-300000000000000000000", $a4_1283);
		bufTest( i128ToStr,-400_000_000_000_000_000_000,"-400000000000000000000", $a4_1284);
		bufTest( i128ToStr,-500_000_000_000_000_000_000,"-500000000000000000000", $a4_1285);
		bufTest( i128ToStr,-600_000_000_000_000_000_000,"-600000000000000000000", $a4_1286);
		bufTest( i128ToStr,-700_000_000_000_000_000_000,"-700000000000000000000", $a4_1287);
		bufTest( i128ToStr,-800_000_000_000_000_000_000,"-800000000000000000000", $a4_1288);
		bufTest( i128ToStr,-900_000_000_000_000_000_000,"-900000000000000000000", $a4_1289);
		bufTest( i128ToStr,1_000_000_000_000_000_000_000,"1000000000000000000000", $5_1281);
		bufTest( i128ToStr,2_000_000_000_000_000_000_000,"2000000000000000000000", $5_1282);
		bufTest( i128ToStr,3_000_000_000_000_000_000_000,"3000000000000000000000", $5_1283);
		bufTest( i128ToStr,4_000_000_000_000_000_000_000,"4000000000000000000000", $5_1284);
		bufTest( i128ToStr,5_000_000_000_000_000_000_000,"5000000000000000000000", $5_1285);
		bufTest( i128ToStr,6_000_000_000_000_000_000_000,"6000000000000000000000", $5_1286);
		bufTest( i128ToStr,7_000_000_000_000_000_000_000,"7000000000000000000000", $5_1287);
		bufTest( i128ToStr,8_000_000_000_000_000_000_000,"8000000000000000000000", $5_1288);
		bufTest( i128ToStr,9_000_000_000_000_000_000_000,"9000000000000000000000", $5_1289);
		bufTest( i128ToStr,-1_000_000_000_000_000_000_000,"-1000000000000000000000", $a5_1281);
		bufTest( i128ToStr,-2_000_000_000_000_000_000_000,"-2000000000000000000000", $a5_1282);
		bufTest( i128ToStr,-3_000_000_000_000_000_000_000,"-3000000000000000000000", $a5_1283);
		bufTest( i128ToStr,-4_000_000_000_000_000_000_000,"-4000000000000000000000", $a5_1284);
		bufTest( i128ToStr,-5_000_000_000_000_000_000_000,"-5000000000000000000000", $a5_1285);
		bufTest( i128ToStr,-6_000_000_000_000_000_000_000,"-6000000000000000000000", $a5_1286);
		bufTest( i128ToStr,-7_000_000_000_000_000_000_000,"-7000000000000000000000", $a5_1287);
		bufTest( i128ToStr,-8_000_000_000_000_000_000_000,"-8000000000000000000000", $a5_1288);
		bufTest( i128ToStr,-9_000_000_000_000_000_000_000,"-9000000000000000000000", $a5_1289);
		bufTest( i128ToStr,10_000_000_000_000_000_000_000,"10000000000000000000000", $6_1281);
		bufTest( i128ToStr,20_000_000_000_000_000_000_000,"20000000000000000000000", $6_1282);
		bufTest( i128ToStr,30_000_000_000_000_000_000_000,"30000000000000000000000", $6_1283);
		bufTest( i128ToStr,40_000_000_000_000_000_000_000,"40000000000000000000000", $6_1284);
		bufTest( i128ToStr,50_000_000_000_000_000_000_000,"50000000000000000000000", $6_1285);
		bufTest( i128ToStr,60_000_000_000_000_000_000_000,"60000000000000000000000", $6_1286);
		bufTest( i128ToStr,70_000_000_000_000_000_000_000,"70000000000000000000000", $6_1287);
		bufTest( i128ToStr,80_000_000_000_000_000_000_000,"80000000000000000000000", $6_1288);
		bufTest( i128ToStr,90_000_000_000_000_000_000_000,"90000000000000000000000", $6_1289);
		bufTest( i128ToStr,-10_000_000_000_000_000_000_000,"-10000000000000000000000", $a6_1281);
		bufTest( i128ToStr,-20_000_000_000_000_000_000_000,"-20000000000000000000000", $a6_1282);
		bufTest( i128ToStr,-30_000_000_000_000_000_000_000,"-30000000000000000000000", $a6_1283);
		bufTest( i128ToStr,-40_000_000_000_000_000_000_000,"-40000000000000000000000", $a6_1284);
		bufTest( i128ToStr,-50_000_000_000_000_000_000_000,"-50000000000000000000000", $a6_1285);
		bufTest( i128ToStr,-60_000_000_000_000_000_000_000,"-60000000000000000000000", $a6_1286);
		bufTest( i128ToStr,-70_000_000_000_000_000_000_000,"-70000000000000000000000", $a6_1287);
		bufTest( i128ToStr,-80_000_000_000_000_000_000_000,"-80000000000000000000000", $a6_1288);
		bufTest( i128ToStr,-90_000_000_000_000_000_000_000,"-90000000000000000000000", $a6_1289);
		bufTest( i128ToStr,100_000_000_000_000_000_000_000,"100000000000000000000000", $7_1281);
		bufTest( i128ToStr,200_000_000_000_000_000_000_000,"200000000000000000000000", $7_1282);
		bufTest( i128ToStr,300_000_000_000_000_000_000_000,"300000000000000000000000", $7_1283);
		bufTest( i128ToStr,400_000_000_000_000_000_000_000,"400000000000000000000000", $7_1284);
		bufTest( i128ToStr,500_000_000_000_000_000_000_000,"500000000000000000000000", $7_1285);
		bufTest( i128ToStr,600_000_000_000_000_000_000_000,"600000000000000000000000", $7_1286);
		bufTest( i128ToStr,700_000_000_000_000_000_000_000,"700000000000000000000000", $7_1287);
		bufTest( i128ToStr,800_000_000_000_000_000_000_000,"800000000000000000000000", $7_1288);
		bufTest( i128ToStr,900_000_000_000_000_000_000_000,"900000000000000000000000", $7_1289);
		bufTest( i128ToStr,-100_000_000_000_000_000_000_000,"-100000000000000000000000", $a7_1281);
		bufTest( i128ToStr,-200_000_000_000_000_000_000_000,"-200000000000000000000000", $a7_1282);
		bufTest( i128ToStr,-300_000_000_000_000_000_000_000,"-300000000000000000000000", $a7_1283);
		bufTest( i128ToStr,-400_000_000_000_000_000_000_000,"-400000000000000000000000", $a7_1284);
		bufTest( i128ToStr,-500_000_000_000_000_000_000_000,"-500000000000000000000000", $a7_1285);
		bufTest( i128ToStr,-600_000_000_000_000_000_000_000,"-600000000000000000000000", $a7_1286);
		bufTest( i128ToStr,-700_000_000_000_000_000_000_000,"-700000000000000000000000", $a7_1287);
		bufTest( i128ToStr,-800_000_000_000_000_000_000_000,"-800000000000000000000000", $a7_1288);
		bufTest( i128ToStr,-900_000_000_000_000_000_000_000,"-900000000000000000000000", $a7_1289);
		bufTest( i128ToStr,1_000_000_000_000_000_000_000_000,"1000000000000000000000000", $8_1281);
		bufTest( i128ToStr,2_000_000_000_000_000_000_000_000,"2000000000000000000000000", $8_1282);
		bufTest( i128ToStr,3_000_000_000_000_000_000_000_000,"3000000000000000000000000", $8_1283);
		bufTest( i128ToStr,4_000_000_000_000_000_000_000_000,"4000000000000000000000000", $8_1284);
		bufTest( i128ToStr,5_000_000_000_000_000_000_000_000,"5000000000000000000000000", $8_1285);
		bufTest( i128ToStr,6_000_000_000_000_000_000_000_000,"6000000000000000000000000", $8_1286);
		bufTest( i128ToStr,7_000_000_000_000_000_000_000_000,"7000000000000000000000000", $8_1287);
		bufTest( i128ToStr,8_000_000_000_000_000_000_000_000,"8000000000000000000000000", $8_1288);
		bufTest( i128ToStr,9_000_000_000_000_000_000_000_000,"9000000000000000000000000", $8_1289);
		bufTest( i128ToStr,-1_000_000_000_000_000_000_000_000,"-1000000000000000000000000", $a8_1281);
		bufTest( i128ToStr,-2_000_000_000_000_000_000_000_000,"-2000000000000000000000000", $a8_1282);
		bufTest( i128ToStr,-3_000_000_000_000_000_000_000_000,"-3000000000000000000000000", $a8_1283);
		bufTest( i128ToStr,-4_000_000_000_000_000_000_000_000,"-4000000000000000000000000", $a8_1284);
		bufTest( i128ToStr,-5_000_000_000_000_000_000_000_000,"-5000000000000000000000000", $a8_1285);
		bufTest( i128ToStr,-6_000_000_000_000_000_000_000_000,"-6000000000000000000000000", $a8_1286);
		bufTest( i128ToStr,-7_000_000_000_000_000_000_000_000,"-7000000000000000000000000", $a8_1287);
		bufTest( i128ToStr,-8_000_000_000_000_000_000_000_000,"-8000000000000000000000000", $a8_1288);
		bufTest( i128ToStr,-9_000_000_000_000_000_000_000_000,"-9000000000000000000000000", $a8_1289);
		bufTest( i128ToStr,10_000_000_000_000_000_000_000_000,"10000000000000000000000000", $9_1281);
		bufTest( i128ToStr,20_000_000_000_000_000_000_000_000,"20000000000000000000000000", $9_1282);
		bufTest( i128ToStr,30_000_000_000_000_000_000_000_000,"30000000000000000000000000", $9_1283);
		bufTest( i128ToStr,40_000_000_000_000_000_000_000_000,"40000000000000000000000000", $9_1284);
		bufTest( i128ToStr,50_000_000_000_000_000_000_000_000,"50000000000000000000000000", $9_1285);
		bufTest( i128ToStr,60_000_000_000_000_000_000_000_000,"60000000000000000000000000", $9_1286);
		bufTest( i128ToStr,70_000_000_000_000_000_000_000_000,"70000000000000000000000000", $9_1287);
		bufTest( i128ToStr,80_000_000_000_000_000_000_000_000,"80000000000000000000000000", $9_1288);
		bufTest( i128ToStr,90_000_000_000_000_000_000_000_000,"90000000000000000000000000", $9_1289);
		bufTest( i128ToStr,-10_000_000_000_000_000_000_000_000,"-10000000000000000000000000", $a9_1281);
		bufTest( i128ToStr,-20_000_000_000_000_000_000_000_000,"-20000000000000000000000000", $a9_1282);
		bufTest( i128ToStr,-30_000_000_000_000_000_000_000_000,"-30000000000000000000000000", $a9_1283);
		bufTest( i128ToStr,-40_000_000_000_000_000_000_000_000,"-40000000000000000000000000", $a9_1284);
		bufTest( i128ToStr,-50_000_000_000_000_000_000_000_000,"-50000000000000000000000000", $a9_1285);
		bufTest( i128ToStr,-60_000_000_000_000_000_000_000_000,"-60000000000000000000000000", $a9_1286);
		bufTest( i128ToStr,-70_000_000_000_000_000_000_000_000,"-70000000000000000000000000", $a9_1287);
		bufTest( i128ToStr,-80_000_000_000_000_000_000_000_000,"-80000000000000000000000000", $a9_1288);
		bufTest( i128ToStr,-90_000_000_000_000_000_000_000_000,"-90000000000000000000000000", $a9_1289);
		bufTest( i128ToStr,100_000_000_000_000_000_000_000_000,"100000000000000000000000000", $A_1281);
		bufTest( i128ToStr,200_000_000_000_000_000_000_000_000,"200000000000000000000000000", $A_1282);
		bufTest( i128ToStr,300_000_000_000_000_000_000_000_000,"300000000000000000000000000", $A_1283);
		bufTest( i128ToStr,400_000_000_000_000_000_000_000_000,"400000000000000000000000000", $A_1284);
		bufTest( i128ToStr,500_000_000_000_000_000_000_000_000,"500000000000000000000000000", $A_1285);
		bufTest( i128ToStr,600_000_000_000_000_000_000_000_000,"600000000000000000000000000", $A_1286);
		bufTest( i128ToStr,700_000_000_000_000_000_000_000_000,"700000000000000000000000000", $A_1287);
		bufTest( i128ToStr,800_000_000_000_000_000_000_000_000,"800000000000000000000000000", $A_1288);
		bufTest( i128ToStr,900_000_000_000_000_000_000_000_000,"900000000000000000000000000", $A_1289);
		bufTest( i128ToStr,-100_000_000_000_000_000_000_000_000,"-100000000000000000000000000", $aA_1281);
		bufTest( i128ToStr,-200_000_000_000_000_000_000_000_000,"-200000000000000000000000000", $aA_1282);
		bufTest( i128ToStr,-300_000_000_000_000_000_000_000_000,"-300000000000000000000000000", $aA_1283);
		bufTest( i128ToStr,-400_000_000_000_000_000_000_000_000,"-400000000000000000000000000", $aA_1284);
		bufTest( i128ToStr,-500_000_000_000_000_000_000_000_000,"-500000000000000000000000000", $aA_1285);
		bufTest( i128ToStr,-600_000_000_000_000_000_000_000_000,"-600000000000000000000000000", $aA_1286);
		bufTest( i128ToStr,-700_000_000_000_000_000_000_000_000,"-700000000000000000000000000", $aA_1287);
		bufTest( i128ToStr,-800_000_000_000_000_000_000_000_000,"-800000000000000000000000000", $aA_1288);
		bufTest( i128ToStr,-900_000_000_000_000_000_000_000_000,"-900000000000000000000000000", $aA_1289);
		bufTest( i128ToStr,1_000_000_000_000_000_000_000_000_000,"1000000000000000000000000000", $B_1281);
		bufTest( i128ToStr,2_000_000_000_000_000_000_000_000_000,"2000000000000000000000000000", $B_1282);
		bufTest( i128ToStr,3_000_000_000_000_000_000_000_000_000,"3000000000000000000000000000", $B_1283);
		bufTest( i128ToStr,4_000_000_000_000_000_000_000_000_000,"4000000000000000000000000000", $B_1284);
		bufTest( i128ToStr,5_000_000_000_000_000_000_000_000_000,"5000000000000000000000000000", $B_1285);
		bufTest( i128ToStr,6_000_000_000_000_000_000_000_000_000,"6000000000000000000000000000", $B_1286);
		bufTest( i128ToStr,7_000_000_000_000_000_000_000_000_000,"7000000000000000000000000000", $B_1287);
		bufTest( i128ToStr,8_000_000_000_000_000_000_000_000_000,"8000000000000000000000000000", $B_1288);
		bufTest( i128ToStr,9_000_000_000_000_000_000_000_000_000,"9000000000000000000000000000", $B_1289);
		bufTest( i128ToStr,-1_000_000_000_000_000_000_000_000_000,"-1000000000000000000000000000", $aB_1281);
		bufTest( i128ToStr,-2_000_000_000_000_000_000_000_000_000,"-2000000000000000000000000000", $aB_1282);
		bufTest( i128ToStr,-3_000_000_000_000_000_000_000_000_000,"-3000000000000000000000000000", $aB_1283);
		bufTest( i128ToStr,-4_000_000_000_000_000_000_000_000_000,"-4000000000000000000000000000", $aB_1284);
		bufTest( i128ToStr,-5_000_000_000_000_000_000_000_000_000,"-5000000000000000000000000000", $aB_1285);
		bufTest( i128ToStr,-6_000_000_000_000_000_000_000_000_000,"-6000000000000000000000000000", $aB_1286);
		bufTest( i128ToStr,-7_000_000_000_000_000_000_000_000_000,"-7000000000000000000000000000", $aB_1287);
		bufTest( i128ToStr,-8_000_000_000_000_000_000_000_000_000,"-8000000000000000000000000000", $aB_1288);
		bufTest( i128ToStr,-9_000_000_000_000_000_000_000_000_000,"-9000000000000000000000000000", $aB_1289);
		bufTest( i128ToStr,10_000_000_000_000_000_000_000_000_000,"10000000000000000000000000000", $C_1281);
		bufTest( i128ToStr,20_000_000_000_000_000_000_000_000_000,"20000000000000000000000000000", $C_1282);
		bufTest( i128ToStr,30_000_000_000_000_000_000_000_000_000,"30000000000000000000000000000", $C_1283);
		bufTest( i128ToStr,40_000_000_000_000_000_000_000_000_000,"40000000000000000000000000000", $C_1284);
		bufTest( i128ToStr,50_000_000_000_000_000_000_000_000_000,"50000000000000000000000000000", $C_1285);
		bufTest( i128ToStr,60_000_000_000_000_000_000_000_000_000,"60000000000000000000000000000", $C_1286);
		bufTest( i128ToStr,70_000_000_000_000_000_000_000_000_000,"70000000000000000000000000000", $C_1287);
		bufTest( i128ToStr,80_000_000_000_000_000_000_000_000_000,"80000000000000000000000000000", $C_1288);
		bufTest( i128ToStr,90_000_000_000_000_000_000_000_000_000,"90000000000000000000000000000", $C_1289);
		bufTest( i128ToStr,-10_000_000_000_000_000_000_000_000_000,"-10000000000000000000000000000", $aC_1281);
		bufTest( i128ToStr,-20_000_000_000_000_000_000_000_000_000,"-20000000000000000000000000000", $aC_1282);
		bufTest( i128ToStr,-30_000_000_000_000_000_000_000_000_000,"-30000000000000000000000000000", $aC_1283);
		bufTest( i128ToStr,-40_000_000_000_000_000_000_000_000_000,"-40000000000000000000000000000", $aC_1284);
		bufTest( i128ToStr,-50_000_000_000_000_000_000_000_000_000,"-50000000000000000000000000000", $aC_1285);
		bufTest( i128ToStr,-60_000_000_000_000_000_000_000_000_000,"-60000000000000000000000000000", $aC_1286);
		bufTest( i128ToStr,-70_000_000_000_000_000_000_000_000_000,"-70000000000000000000000000000", $aC_1287);
		bufTest( i128ToStr,-80_000_000_000_000_000_000_000_000_000,"-80000000000000000000000000000", $aC_1288);
		bufTest( i128ToStr,-90_000_000_000_000_000_000_000_000_000,"-90000000000000000000000000000", $aC_1289);
		bufTest( i128ToStr,100_000_000_000_000_000_000_000_000_000,"100000000000000000000000000000", $D_1281);
		bufTest( i128ToStr,200_000_000_000_000_000_000_000_000_000,"200000000000000000000000000000", $D_1282);
		bufTest( i128ToStr,300_000_000_000_000_000_000_000_000_000,"300000000000000000000000000000", $D_1283);
		bufTest( i128ToStr,400_000_000_000_000_000_000_000_000_000,"400000000000000000000000000000", $D_1284);
		bufTest( i128ToStr,500_000_000_000_000_000_000_000_000_000,"500000000000000000000000000000", $D_1285);
		bufTest( i128ToStr,600_000_000_000_000_000_000_000_000_000,"600000000000000000000000000000", $D_1286);
		bufTest( i128ToStr,700_000_000_000_000_000_000_000_000_000,"700000000000000000000000000000", $D_1287);
		bufTest( i128ToStr,800_000_000_000_000_000_000_000_000_000,"800000000000000000000000000000", $D_1288);
		bufTest( i128ToStr,900_000_000_000_000_000_000_000_000_000,"900000000000000000000000000000", $D_1289);
		bufTest( i128ToStr,-100_000_000_000_000_000_000_000_000_000,"-100000000000000000000000000000", $aD_1281);
		bufTest( i128ToStr,-200_000_000_000_000_000_000_000_000_000,"-200000000000000000000000000000", $aD_1282);
		bufTest( i128ToStr,-300_000_000_000_000_000_000_000_000_000,"-300000000000000000000000000000", $aD_1283);
		bufTest( i128ToStr,-400_000_000_000_000_000_000_000_000_000,"-400000000000000000000000000000", $aD_1284);
		bufTest( i128ToStr,-500_000_000_000_000_000_000_000_000_000,"-500000000000000000000000000000", $aD_1285);
		bufTest( i128ToStr,-600_000_000_000_000_000_000_000_000_000,"-600000000000000000000000000000", $aD_1286);
		bufTest( i128ToStr,-700_000_000_000_000_000_000_000_000_000,"-700000000000000000000000000000", $aD_1287);
		bufTest( i128ToStr,-800_000_000_000_000_000_000_000_000_000,"-800000000000000000000000000000", $aD_1288);
		bufTest( i128ToStr,-900_000_000_000_000_000_000_000_000_000,"-900000000000000000000000000000", $aD_1289);
		bufTest( i128ToStr,1_000_000_000_000_000_000_000_000_000_000,"1000000000000000000000000000000", $E_1281);
		bufTest( i128ToStr,2_000_000_000_000_000_000_000_000_000_000,"2000000000000000000000000000000", $E_1282);
		bufTest( i128ToStr,3_000_000_000_000_000_000_000_000_000_000,"3000000000000000000000000000000", $E_1283);
		bufTest( i128ToStr,4_000_000_000_000_000_000_000_000_000_000,"4000000000000000000000000000000", $E_1284);
		bufTest( i128ToStr,5_000_000_000_000_000_000_000_000_000_000,"5000000000000000000000000000000", $E_1285);
		bufTest( i128ToStr,6_000_000_000_000_000_000_000_000_000_000,"6000000000000000000000000000000", $E_1286);
		bufTest( i128ToStr,7_000_000_000_000_000_000_000_000_000_000,"7000000000000000000000000000000", $E_1287);
		bufTest( i128ToStr,8_000_000_000_000_000_000_000_000_000_000,"8000000000000000000000000000000", $E_1288);
		bufTest( i128ToStr,9_000_000_000_000_000_000_000_000_000_000,"9000000000000000000000000000000", $E_1289);
		bufTest( i128ToStr,-1_000_000_000_000_000_000_000_000_000_000,"-1000000000000000000000000000000", $aE_1281);
		bufTest( i128ToStr,-2_000_000_000_000_000_000_000_000_000_000,"-2000000000000000000000000000000", $aE_1282);
		bufTest( i128ToStr,-3_000_000_000_000_000_000_000_000_000_000,"-3000000000000000000000000000000", $aE_1283);
		bufTest( i128ToStr,-4_000_000_000_000_000_000_000_000_000_000,"-4000000000000000000000000000000", $aE_1284);
		bufTest( i128ToStr,-5_000_000_000_000_000_000_000_000_000_000,"-5000000000000000000000000000000", $aE_1285);
		bufTest( i128ToStr,-6_000_000_000_000_000_000_000_000_000_000,"-6000000000000000000000000000000", $aE_1286);
		bufTest( i128ToStr,-7_000_000_000_000_000_000_000_000_000_000,"-7000000000000000000000000000000", $aE_1287);
		bufTest( i128ToStr,-8_000_000_000_000_000_000_000_000_000_000,"-8000000000000000000000000000000", $aE_1288);
		bufTest( i128ToStr,-9_000_000_000_000_000_000_000_000_000_000,"-9000000000000000000000000000000", $aE_1289);
		bufTest( i128ToStr,10_000_000_000_000_000_000_000_000_000_000,"10000000000000000000000000000000", $F_1281);
		bufTest( i128ToStr,20_000_000_000_000_000_000_000_000_000_000,"20000000000000000000000000000000", $F_1282);
		bufTest( i128ToStr,30_000_000_000_000_000_000_000_000_000_000,"30000000000000000000000000000000", $F_1283);
		bufTest( i128ToStr,40_000_000_000_000_000_000_000_000_000_000,"40000000000000000000000000000000", $F_1284);
		bufTest( i128ToStr,50_000_000_000_000_000_000_000_000_000_000,"50000000000000000000000000000000", $F_1285);
		bufTest( i128ToStr,60_000_000_000_000_000_000_000_000_000_000,"60000000000000000000000000000000", $F_1286);
		bufTest( i128ToStr,70_000_000_000_000_000_000_000_000_000_000,"70000000000000000000000000000000", $F_1287);
		bufTest( i128ToStr,80_000_000_000_000_000_000_000_000_000_000,"80000000000000000000000000000000", $F_1288);
		bufTest( i128ToStr,90_000_000_000_000_000_000_000_000_000_000,"90000000000000000000000000000000", $F_1289);
		bufTest( i128ToStr,-10_000_000_000_000_000_000_000_000_000_000,"-10000000000000000000000000000000", $aF_1281);
		bufTest( i128ToStr,-20_000_000_000_000_000_000_000_000_000_000,"-20000000000000000000000000000000", $aF_1282);
		bufTest( i128ToStr,-30_000_000_000_000_000_000_000_000_000_000,"-30000000000000000000000000000000", $aF_1283);
		bufTest( i128ToStr,-40_000_000_000_000_000_000_000_000_000_000,"-40000000000000000000000000000000", $aF_1284);
		bufTest( i128ToStr,-50_000_000_000_000_000_000_000_000_000_000,"-50000000000000000000000000000000", $aF_1285);
		bufTest( i128ToStr,-60_000_000_000_000_000_000_000_000_000_000,"-60000000000000000000000000000000", $aF_1286);
		bufTest( i128ToStr,-70_000_000_000_000_000_000_000_000_000_000,"-70000000000000000000000000000000", $aF_1287);
		bufTest( i128ToStr,-80_000_000_000_000_000_000_000_000_000_000,"-80000000000000000000000000000000", $aF_1288);
		bufTest( i128ToStr,-90_000_000_000_000_000_000_000_000_000_000,"-90000000000000000000000000000000", $aF_1289);
		bufTest( i128ToStr,100_000_000_000_000_000_000_000_000_000_000,"100000000000000000000000000000000", $0_1281);
		bufTest( i128ToStr,200_000_000_000_000_000_000_000_000_000_000,"200000000000000000000000000000000", $0_1282);
		bufTest( i128ToStr,300_000_000_000_000_000_000_000_000_000_000,"300000000000000000000000000000000", $0_1283);
		bufTest( i128ToStr,400_000_000_000_000_000_000_000_000_000_000,"400000000000000000000000000000000", $0_1284);
		bufTest( i128ToStr,500_000_000_000_000_000_000_000_000_000_000,"500000000000000000000000000000000", $0_1285);
		bufTest( i128ToStr,600_000_000_000_000_000_000_000_000_000_000,"600000000000000000000000000000000", $0_1286);
		bufTest( i128ToStr,700_000_000_000_000_000_000_000_000_000_000,"700000000000000000000000000000000", $0_1287);
		bufTest( i128ToStr,800_000_000_000_000_000_000_000_000_000_000,"800000000000000000000000000000000", $0_1288);
		bufTest( i128ToStr,900_000_000_000_000_000_000_000_000_000_000,"900000000000000000000000000000000", $0_1289);
		bufTest( i128ToStr,-100_000_000_000_000_000_000_000_000_000_000,"-100000000000000000000000000000000", $a0_1281);
		bufTest( i128ToStr,-200_000_000_000_000_000_000_000_000_000_000,"-200000000000000000000000000000000", $a0_1282);
		bufTest( i128ToStr,-300_000_000_000_000_000_000_000_000_000_000,"-300000000000000000000000000000000", $a0_1283);
		bufTest( i128ToStr,-400_000_000_000_000_000_000_000_000_000_000,"-400000000000000000000000000000000", $a0_1284);
		bufTest( i128ToStr,-500_000_000_000_000_000_000_000_000_000_000,"-500000000000000000000000000000000", $a0_1285);
		bufTest( i128ToStr,-600_000_000_000_000_000_000_000_000_000_000,"-600000000000000000000000000000000", $a0_1286);
		bufTest( i128ToStr,-700_000_000_000_000_000_000_000_000_000_000,"-700000000000000000000000000000000", $a0_1287);
		bufTest( i128ToStr,-800_000_000_000_000_000_000_000_000_000_000,"-800000000000000000000000000000000", $a0_1288);
		bufTest( i128ToStr,-900_000_000_000_000_000_000_000_000_000_000,"-900000000000000000000000000000000", $a0_1289);
		bufTest( i128ToStr,1_000_000_000_000_000_000_000_000_000_000_000,"1000000000000000000000000000000000", $1_1281);
		bufTest( i128ToStr,2_000_000_000_000_000_000_000_000_000_000_000,"2000000000000000000000000000000000", $1_1282);
		bufTest( i128ToStr,3_000_000_000_000_000_000_000_000_000_000_000,"3000000000000000000000000000000000", $1_1283);
		bufTest( i128ToStr,4_000_000_000_000_000_000_000_000_000_000_000,"4000000000000000000000000000000000", $1_1284);
		bufTest( i128ToStr,5_000_000_000_000_000_000_000_000_000_000_000,"5000000000000000000000000000000000", $1_1285);
		bufTest( i128ToStr,6_000_000_000_000_000_000_000_000_000_000_000,"6000000000000000000000000000000000", $1_1286);
		bufTest( i128ToStr,7_000_000_000_000_000_000_000_000_000_000_000,"7000000000000000000000000000000000", $1_1287);
		bufTest( i128ToStr,8_000_000_000_000_000_000_000_000_000_000_000,"8000000000000000000000000000000000", $1_1288);
		bufTest( i128ToStr,9_000_000_000_000_000_000_000_000_000_000_000,"9000000000000000000000000000000000", $1_1289);
		bufTest( i128ToStr,-1_000_000_000_000_000_000_000_000_000_000_000,"-1000000000000000000000000000000000", $a1_1281);
		bufTest( i128ToStr,-2_000_000_000_000_000_000_000_000_000_000_000,"-2000000000000000000000000000000000", $a1_1282);
		bufTest( i128ToStr,-3_000_000_000_000_000_000_000_000_000_000_000,"-3000000000000000000000000000000000", $a1_1283);
		bufTest( i128ToStr,-4_000_000_000_000_000_000_000_000_000_000_000,"-4000000000000000000000000000000000", $a1_1284);
		bufTest( i128ToStr,-5_000_000_000_000_000_000_000_000_000_000_000,"-5000000000000000000000000000000000", $a1_1285);
		bufTest( i128ToStr,-6_000_000_000_000_000_000_000_000_000_000_000,"-6000000000000000000000000000000000", $a1_1286);
		bufTest( i128ToStr,-7_000_000_000_000_000_000_000_000_000_000_000,"-7000000000000000000000000000000000", $a1_1287);
		bufTest( i128ToStr,-8_000_000_000_000_000_000_000_000_000_000_000,"-8000000000000000000000000000000000", $a1_1288);
		bufTest( i128ToStr,-9_000_000_000_000_000_000_000_000_000_000_000,"-9000000000000000000000000000000000", $a1_1289);
		bufTest( i128ToStr,10_000_000_000_000_000_000_000_000_000_000_000,"10000000000000000000000000000000000", $2_1281);
		bufTest( i128ToStr,20_000_000_000_000_000_000_000_000_000_000_000,"20000000000000000000000000000000000", $2_1282);
		bufTest( i128ToStr,30_000_000_000_000_000_000_000_000_000_000_000,"30000000000000000000000000000000000", $2_1283);
		bufTest( i128ToStr,40_000_000_000_000_000_000_000_000_000_000_000,"40000000000000000000000000000000000", $2_1284);
		bufTest( i128ToStr,50_000_000_000_000_000_000_000_000_000_000_000,"50000000000000000000000000000000000", $2_1285);
		bufTest( i128ToStr,60_000_000_000_000_000_000_000_000_000_000_000,"60000000000000000000000000000000000", $2_1286);
		bufTest( i128ToStr,70_000_000_000_000_000_000_000_000_000_000_000,"70000000000000000000000000000000000", $2_1287);
		bufTest( i128ToStr,80_000_000_000_000_000_000_000_000_000_000_000,"80000000000000000000000000000000000", $2_1288);
		bufTest( i128ToStr,90_000_000_000_000_000_000_000_000_000_000_000,"90000000000000000000000000000000000", $2_1289);
		bufTest( i128ToStr,-10_000_000_000_000_000_000_000_000_000_000_000,"-10000000000000000000000000000000000", $a2_1281);
		bufTest( i128ToStr,-20_000_000_000_000_000_000_000_000_000_000_000,"-20000000000000000000000000000000000", $a2_1282);
		bufTest( i128ToStr,-30_000_000_000_000_000_000_000_000_000_000_000,"-30000000000000000000000000000000000", $a2_1283);
		bufTest( i128ToStr,-40_000_000_000_000_000_000_000_000_000_000_000,"-40000000000000000000000000000000000", $a2_1284);
		bufTest( i128ToStr,-50_000_000_000_000_000_000_000_000_000_000_000,"-50000000000000000000000000000000000", $a2_1285);
		bufTest( i128ToStr,-60_000_000_000_000_000_000_000_000_000_000_000,"-60000000000000000000000000000000000", $a2_1286);
		bufTest( i128ToStr,-70_000_000_000_000_000_000_000_000_000_000_000,"-70000000000000000000000000000000000", $a2_1287);
		bufTest( i128ToStr,-80_000_000_000_000_000_000_000_000_000_000_000,"-80000000000000000000000000000000000", $a2_1288);
		bufTest( i128ToStr,-90_000_000_000_000_000_000_000_000_000_000_000,"-90000000000000000000000000000000000", $a2_1289);
		bufTest( i128ToStr,100_000_000_000_000_000_000_000_000_000_000_000,"100000000000000000000000000000000000", $3_1281);
		bufTest( i128ToStr,200_000_000_000_000_000_000_000_000_000_000_000,"200000000000000000000000000000000000", $3_1282);
		bufTest( i128ToStr,300_000_000_000_000_000_000_000_000_000_000_000,"300000000000000000000000000000000000", $3_1283);
		bufTest( i128ToStr,400_000_000_000_000_000_000_000_000_000_000_000,"400000000000000000000000000000000000", $3_1284);
		bufTest( i128ToStr,500_000_000_000_000_000_000_000_000_000_000_000,"500000000000000000000000000000000000", $3_1285);
		bufTest( i128ToStr,600_000_000_000_000_000_000_000_000_000_000_000,"600000000000000000000000000000000000", $3_1286);
		bufTest( i128ToStr,700_000_000_000_000_000_000_000_000_000_000_000,"700000000000000000000000000000000000", $3_1287);
		bufTest( i128ToStr,800_000_000_000_000_000_000_000_000_000_000_000,"800000000000000000000000000000000000", $3_1288);
		bufTest( i128ToStr,900_000_000_000_000_000_000_000_000_000_000_000,"900000000000000000000000000000000000", $3_1289);
		bufTest( i128ToStr,-100_000_000_000_000_000_000_000_000_000_000_000,"-100000000000000000000000000000000000", $a3_1281);
		bufTest( i128ToStr,-200_000_000_000_000_000_000_000_000_000_000_000,"-200000000000000000000000000000000000", $a3_1282);
		bufTest( i128ToStr,-300_000_000_000_000_000_000_000_000_000_000_000,"-300000000000000000000000000000000000", $a3_1283);
		bufTest( i128ToStr,-400_000_000_000_000_000_000_000_000_000_000_000,"-400000000000000000000000000000000000", $a3_1284);
		bufTest( i128ToStr,-500_000_000_000_000_000_000_000_000_000_000_000,"-500000000000000000000000000000000000", $a3_1285);
		bufTest( i128ToStr,-600_000_000_000_000_000_000_000_000_000_000_000,"-600000000000000000000000000000000000", $a3_1286);
		bufTest( i128ToStr,-700_000_000_000_000_000_000_000_000_000_000_000,"-700000000000000000000000000000000000", $a3_1287);
		bufTest( i128ToStr,-800_000_000_000_000_000_000_000_000_000_000_000,"-800000000000000000000000000000000000", $a3_1288);
		bufTest( i128ToStr,-900_000_000_000_000_000_000_000_000_000_000_000,"-900000000000000000000000000000000000", $a3_1289);
		bufTest( i128ToStr,1_000_000_000_000_000_000_000_000_000_000_000_000,"1000000000000000000000000000000000000", $4_1281);
		bufTest( i128ToStr,2_000_000_000_000_000_000_000_000_000_000_000_000,"2000000000000000000000000000000000000", $4_1282);
		bufTest( i128ToStr,3_000_000_000_000_000_000_000_000_000_000_000_000,"3000000000000000000000000000000000000", $4_1283);
		bufTest( i128ToStr,4_000_000_000_000_000_000_000_000_000_000_000_000,"4000000000000000000000000000000000000", $4_1284);
		bufTest( i128ToStr,5_000_000_000_000_000_000_000_000_000_000_000_000,"5000000000000000000000000000000000000", $4_1285);
		bufTest( i128ToStr,6_000_000_000_000_000_000_000_000_000_000_000_000,"6000000000000000000000000000000000000", $4_1286);
		bufTest( i128ToStr,7_000_000_000_000_000_000_000_000_000_000_000_000,"7000000000000000000000000000000000000", $4_1287);
		bufTest( i128ToStr,8_000_000_000_000_000_000_000_000_000_000_000_000,"8000000000000000000000000000000000000", $4_1288);
		bufTest( i128ToStr,9_000_000_000_000_000_000_000_000_000_000_000_000,"9000000000000000000000000000000000000", $4_1289);
		bufTest( i128ToStr,-1_000_000_000_000_000_000_000_000_000_000_000_000,"-1000000000000000000000000000000000000", $a4_1281);
		bufTest( i128ToStr,-2_000_000_000_000_000_000_000_000_000_000_000_000,"-2000000000000000000000000000000000000", $a4_1282);
		bufTest( i128ToStr,-3_000_000_000_000_000_000_000_000_000_000_000_000,"-3000000000000000000000000000000000000", $a4_1283);
		bufTest( i128ToStr,-4_000_000_000_000_000_000_000_000_000_000_000_000,"-4000000000000000000000000000000000000", $a4_1284);
		bufTest( i128ToStr,-5_000_000_000_000_000_000_000_000_000_000_000_000,"-5000000000000000000000000000000000000", $a4_1285);
		bufTest( i128ToStr,-6_000_000_000_000_000_000_000_000_000_000_000_000,"-6000000000000000000000000000000000000", $a4_1286);
		bufTest( i128ToStr,-7_000_000_000_000_000_000_000_000_000_000_000_000,"-7000000000000000000000000000000000000", $a4_1287);
		bufTest( i128ToStr,-8_000_000_000_000_000_000_000_000_000_000_000_000,"-8000000000000000000000000000000000000", $a4_1288);
		bufTest( i128ToStr,-9_000_000_000_000_000_000_000_000_000_000_000_000,"-9000000000000000000000000000000000000", $a4_1289);
		bufTest( i128ToStr,10_000_000_000_000_000_000_000_000_000_000_000_000,"10000000000000000000000000000000000000", $5_1281);
		bufTest( i128ToStr,20_000_000_000_000_000_000_000_000_000_000_000_000,"20000000000000000000000000000000000000", $5_1282);
		bufTest( i128ToStr,30_000_000_000_000_000_000_000_000_000_000_000_000,"30000000000000000000000000000000000000", $5_1283);
		bufTest( i128ToStr,40_000_000_000_000_000_000_000_000_000_000_000_000,"40000000000000000000000000000000000000", $5_1284);
		bufTest( i128ToStr,50_000_000_000_000_000_000_000_000_000_000_000_000,"50000000000000000000000000000000000000", $5_1285);
		bufTest( i128ToStr,60_000_000_000_000_000_000_000_000_000_000_000_000,"60000000000000000000000000000000000000", $5_1286);
		bufTest( i128ToStr,70_000_000_000_000_000_000_000_000_000_000_000_000,"70000000000000000000000000000000000000", $5_1287);
		bufTest( i128ToStr,80_000_000_000_000_000_000_000_000_000_000_000_000,"80000000000000000000000000000000000000", $5_1288);
		bufTest( i128ToStr,90_000_000_000_000_000_000_000_000_000_000_000_000,"90000000000000000000000000000000000000", $5_1289);
		bufTest( i128ToStr,-10_000_000_000_000_000_000_000_000_000_000_000_000,"-10000000000000000000000000000000000000", $a5_1281);
		bufTest( i128ToStr,-20_000_000_000_000_000_000_000_000_000_000_000_000,"-20000000000000000000000000000000000000", $a5_1282);
		bufTest( i128ToStr,-30_000_000_000_000_000_000_000_000_000_000_000_000,"-30000000000000000000000000000000000000", $a5_1283);
		bufTest( i128ToStr,-40_000_000_000_000_000_000_000_000_000_000_000_000,"-40000000000000000000000000000000000000", $a5_1284);
		bufTest( i128ToStr,-50_000_000_000_000_000_000_000_000_000_000_000_000,"-50000000000000000000000000000000000000", $a5_1285);
		bufTest( i128ToStr,-60_000_000_000_000_000_000_000_000_000_000_000_000,"-60000000000000000000000000000000000000", $a5_1286);
		bufTest( i128ToStr,-70_000_000_000_000_000_000_000_000_000_000_000_000,"-70000000000000000000000000000000000000", $a5_1287);
		bufTest( i128ToStr,-80_000_000_000_000_000_000_000_000_000_000_000_000,"-80000000000000000000000000000000000000", $a5_1288);
		bufTest( i128ToStr,-90_000_000_000_000_000_000_000_000_000_000_000_000,"-90000000000000000000000000000000000000", $a5_1289);
		bufTest( i128ToStr,100_000_000_000_000_000_000_000_000_000_000_000_000,"100000000000000000000000000000000000000", $6_1281);
		bufTest( i128ToStr,-100_000_000_000_000_000_000_000_000_000_000_000_000,"-100000000000000000000000000000000000000", $a6_1281);

		
		readonly
			i128Test_a	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr( "0", ' ', i ),
								
							#endfor
							mkStr( "0", ' ', 63 )
						];
						
			i128Test_b	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "127", '.', i ),
								
							#endfor
							mkStr2( "127", '.', 63 )
						];
						
			i128Test_c	:string[64] :=
						[
							#for( i := 0 to 62 )
							
								mkStr2( "-128", '*', i ),
								
							#endfor
							mkStr2( "-128", '*', 63 )
						];
						
		endreadonly;
		strTest( i128ToStr, 0, i128Test_a, $a0F0A0, 63, ' ' );				
		strTest2( i128ToStr, 127, i128Test_b, $a0F0A1, 63, '.' );				
		strTest2( i128ToStr, -128, i128Test_c, $a0F0A2, 63, '*' );				

		stderr.put( "conv.i128ToStr succeeded!" nl );
		
	  anyexception
	  
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"conv.i128ToStr failed! eax=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;



end convitostr_test;

													