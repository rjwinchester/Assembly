program bitcnt_test;
#include( "stdlib.hhf" )

type
	bc_t:
		record
			bits2cnt	:dword;
			cnt			:dword;
		endrecord;
		
const
	initb	:dword [31] :=
			[
				1,3,7,$f,$1f,$3f,$7f,$ff,
				$1ff,$3ff,$7ff,$fff,
				$1fff,$3fff,$7fff,$ffff,
				$1_ffff,$3_ffff,$7_ffff,$f_ffff,
				$1f_ffff,$3f_ffff,$7f_ffff,$ff_ffff,
				$1ff_ffff,$3ff_ffff,$7ff_ffff,$fff_ffff,
				$1fff_ffff,$3fff_ffff,$7fff_ffff
			];
			
	bc_c :bc_t[] :=
		[
			bc_t:[0,0],
			#for( j := 0 to 30 )
				?b := initb[j]; 
				#for( i:= j to 31 )
				
					bc_t:[b,j+1],
					?b := b * 2;
					
				#endfor
			#endfor
			bc_t:[$ffff_ffff, 32]
		];
		
		
static
	bc : bc_t[ @elements( bc_c ) ] := bc_c;
	
begin bitcnt_test;

	
		for( mov( 0, ecx ); ecx<32; inc(ecx) )do
		
			mov( bc.bits2cnt[ecx*8], eax );
			bits.cnt( eax );
			if( eax <> bc.cnt[ecx*8] ) then
			
				stderr.put
				( 
					nl nl 
					"***************************************************" nl
					"bitcnt failed! eax=", eax, " ecx=", ecx, nl
					"***************************************************" nl
					nl 
				);
				stdout.put( "Press Enter to Continue: " );
				stdin.readLn();
				os.exitProcess(1);
				
			endif;
			
		endfor;
		os.exitProcess(0);
		
end bitcnt_test;

													