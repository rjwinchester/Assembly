program peekc_test;
#include( "stdlib.hhf" )

// Input test file:
//
//  1st line:  abc #$d #$a
//  2nd line:  asdf #$0d #$0a
//  3rd line:  #$0d #$0a
//
// Note, however, that the stdin routines throw away the carriage return
// characters that appear immediately before a linefeed character.
					 
begin peekc_test;

	try

		// First call should return 0 because we've not
		// read any data from the first line yet.

		stdin.peekc();
		if( al <> #0 ) then

			stderr.put
			( 
				"(1) stdin.peekc should return 0 at BOF" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;

		// Read the first line into the buffer:

		stdin.readLn();

		// Now a peek should return 'a'

		stdin.peekc();
		if( al <> 'a' ) then

			stderr.put
			( 
				"(2) stdin.peekc should return 'a'" nl
			);
			os.exitProcess( 2 );

		endif;

		stdin.getc();
		if( al <> 'a' ) then

			stderr.put
			( 
				"(3) stdin.getc should return 'a'" nl
			);
			os.exitProcess( 3 );

		endif;

		// Now a peek should return 'b'

		stdin.peekc();
		if( al <> 'b' ) then

			stderr.put
			( 
				"(4) stdin.peekc should return 'b'" nl
			);
			os.exitProcess( 4 );

		endif;

		stdin.getc();
		if( al <> 'b' ) then

			stderr.put
			( 
				"(5) stdin.getc should return 'b'" nl
			);
			os.exitProcess( 5 );

		endif;

		// Now a peek should return 'c'

		stdin.peekc();
		if( al <> 'c' ) then

			stderr.put
			( 
				"(6) stdin.peekc should return 'c'" nl
			);
			os.exitProcess( 6 );

		endif;

		stdin.getc();
		if( al <> 'c' ) then

			stderr.put
			( 
				"(7) stdin.getc should return 'c'" nl
			);
			os.exitProcess( 7 );

		endif;

		// Now a peekc should return 0

		stdin.peekc();
		if( al <> #0 ) then

			stderr.put
			( 
				"(8) stdin.peekc should return #0 at EOLN "
				"(was $", al, ")" nl
			);
			os.exitProcess( 8 );

		endif;

		stdin.getc();
		if( al <> stdio.lf ) then

			stderr.put
			( 
				"(9) stdin.getc should return LF" nl
			);
			os.exitProcess( 9 );

		endif;

		// Process the second line:

		stdin.readLn();

		// Now a peek should return 'a'

		stdin.peekc();
		if( al <> 'a' ) then

			stderr.put
			( 
				"(10) stdin.peekc should return 'a'" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;

		stdin.getc();
		if( al <> 'a' ) then

			stderr.put
			( 
				"(11) stdin.getc should return 'a'" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;

		// Now a peekc should return 's'

		stdin.peekc();
		if( al <> 's' ) then

			stderr.put
			( 
				"(12) stdin.peekc should return 's'" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;

		stdin.getc();
		if( al <> 's' ) then

			stderr.put
			( 
				"(13) stdin.getc should return 's'" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;

		// Now a peekc should return 'd'

		stdin.peekc();
		if( al <> 'd' ) then

			stderr.put
			( 
				"(14) stdin.peekc should return 'd'" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;

		stdin.getc();
		if( al <> 'd' ) then

			stderr.put
			( 
				"(15) stdin.getc should return 'd'" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;

		// Now a peekc should return 'f'

		stdin.peekc();
		if( al <> 'f' ) then

			stderr.put
			( 
				"(16) stdin.peekc should return 'g'" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;

		stdin.getc();
		if( al <> 'f' ) then

			stderr.put
			( 
				"(17) stdin.getc should return 'f'" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;


		// Now a peekc should return 0

		stdin.peekc();
		if( al <> #0 ) then

			stderr.put
			( 
				"(18) stdin.peekc should return #0 at EOLN "
				"(was $", al, ")" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;

		stdin.getc();
		if( al <> stdio.lf ) then

			stderr.put
			( 
				"(19) stdin.getc should return LF" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);

		endif;


		
	  anyexception

		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"stdin.peekc failed! Exception = ", eax,  nl
			"***************************************************" nl
			nl 
		);
		os.exitProcess(3);
		
	endtry;

	stderr.put( "peekc succeeded!" nl );
			
end peekc_test;

													