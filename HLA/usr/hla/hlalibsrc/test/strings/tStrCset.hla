program strcset_test;
#include( "stdlib.hhf" )

	
type
	brk2Exp:
		record
			src		:string;
			cst		:cset;
			index	:dword;
			align(4);
		endrecord;
	
	brk3Exp:
		record
			src		:string;
			offset	:dword;
			cst		:cset;
			index	:int32;
			align(4);
		endrecord;
	
const
	span2Exp :text := "brk2Exp";
	span3Exp :text := "brk3Exp";
		
	exCset	:= $8000;
	 
	brk2ESI		:text := "(type brk2Exp [esi])";
	brk3ESI		:text := "(type brk3Exp [esi])";
	span2ESI	:text := "(type brk2Exp [esi])";
	span3ESI	:text := "(type brk3Exp [esi])";

	
	brkTest2_c	
		:brk2Exp[] :=
			[
				brk2Exp:[ "abcdefg0123456", {'a'..'z'}, 0 ],
				brk2Exp:[ "0123456abcdefg", {'a'..'z'}, 7 ],
				brk2Exp:[ "0123456", {'a'..'z'}, -1 ],
				brk2Exp:[ "", {'a'..'z'}, -1 ],
				
				brk2Exp:[ "abcdefg0123456", {}, -1 ],
				brk2Exp:[ "", {}, -1 ],

				brk2Exp:[ "abcdefg0123456", {'0'..'9'}, 7 ],
				brk2Exp:[ "0123456abcdefg", {'0'..'9'}, 0 ],
				brk2Exp:[ "", {'0'..'9'}, -1 ],
			];
		
	brkTest3_c	
		:brk3Exp[] :=
			[
				brk3Exp:[ "abcdefg0123456", 0, {'a'..'z'}, 0 ],
				brk3Exp:[ "abcdefg0123456", 7, {'a'..'z'}, -1 ],
				brk3Exp:[ "", 0, {'a'..'z'}, -1 ],
				brk3Exp:[ "abcdefg0123456", 0, {}, -1 ],

				brk3Exp:[ "abcdefg0123456", 0, {'0'..'9'}, 7 ],
				brk3Exp:[ "", 0, {'0'..'9'}, -1 ],
			];
		
	
	rbrkTest2_c	
		:brk2Exp[] :=
			[
				brk2Exp:[ "abcdefg0123456", {'a'..'z'}, 6 ],
				brk2Exp:[ "0123456abcdefg", {'a'..'z'}, 13 ],
				brk2Exp:[ "0123456", {'a'..'z'}, -1 ],
				brk2Exp:[ "", {'a'..'z'}, -1 ],
				
				brk2Exp:[ "abcdefg0123456", {}, -1 ],
				brk2Exp:[ "", {}, -1 ],

				brk2Exp:[ "abcdefg0123456", {'0'..'9'}, 13 ],
				brk2Exp:[ "0123456abcdefg", {'0'..'9'}, 6 ],
				brk2Exp:[ "", {'0'..'9'}, -1 ],
			];
		
	rbrkTest3_c	
		:brk3Exp[] :=
			[
				brk3Exp:[ "abcdefg0123456", 13, {'a'..'z'}, 6 ],
				brk3Exp:[ "abcdefg0123456", 7, {'a'..'z'}, 6 ],
				brk3Exp:[ "", 0, {'a'..'z'}, -1 ],
				brk3Exp:[ "abcdefg0123456", 13, {}, -1 ],

				brk3Exp:[ "abcdefg0123456", 13, {'0'..'9'}, 13 ],
				brk3Exp:[ "", 0, {'0'..'9'}, -1 ],
			];
		

	///////////
	
	spanTest2_c	
		:span2Exp[] :=
			[
				span2Exp:[ "abcdefg0123456", {'a'..'z'}, 7 ],
				span2Exp:[ "0123456abcdefg", {'a'..'z'}, 0 ],
				span2Exp:[ "0123456", {'a'..'z'}, 0 ],
				span2Exp:[ "", {'a'..'z'}, -1 ],
				
				span2Exp:[ "abcdefg0123456", {}, 0 ],
				span2Exp:[ "", {}, -1 ],

				span2Exp:[ "abcdefg0123456", {'0'..'9'}, 0 ],
				span2Exp:[ "0123456abcdefg", {'0'..'9'}, 7 ],
				span2Exp:[ "", {'0'..'9'}, -1 ],
			];
		
	spanTest3_c	
		:span3Exp[] :=
			[
				span3Exp:[ "abcdefg0123456", 6, {'a'..'z'}, 7 ],
				span3Exp:[ "abcdefg0123456", 0, {'a'..'z'}, 7 ],
				span3Exp:[ "abcdefg0123456", 7, {'a'..'z'}, 7 ],
				span3Exp:[ "", 0, {'a'..'z'}, -1 ],
				span3Exp:[ "abcdefg0123456", 0, {}, 0 ],

				span3Exp:[ "abcdefg0123456", 7, {'0'..'9'}, -1 ],
				span3Exp:[ "", 0, {'0'..'9'}, -1 ],
			];
		
	
	rspanTest2_c	
		:span2Exp[] :=
			[
				span2Exp:[ "abcdefg0123456", {'a'..'z'}, 13 ],
				span2Exp:[ "0123456abcdefg", {'a'..'z'}, 6 ],
				span2Exp:[ "0123456", {'a'..'z'}, 6 ],
				span2Exp:[ "", {'a'..'z'}, -1 ],
				
				span2Exp:[ "abcdefg0123456", {}, 13 ],
				span2Exp:[ "", {}, -1 ],

				span2Exp:[ "abcdefg0123456", {'0'..'9'}, 6 ],
				span2Exp:[ "0123456abcdefg", {'0'..'9'}, 13 ],
				span2Exp:[ "", {'0'..'9'}, -1 ],
			];
		
	rspanTest3_c	
		:span3Exp[] :=
			[
				span3Exp:[ "abcdefg0123456", 13, {'a'..'z'}, 13 ],
				span3Exp:[ "abcdefg0123456", 6, {'a'..'z'}, -1 ],
				span3Exp:[ "", 0, {'a'..'z'}, -1 ],
				span3Exp:[ "abcdefg0123456", 13, {}, 13 ],

				span3Exp:[ "abcdefg0123456", 13, {'0'..'9'}, 6 ],
				span3Exp:[ "", 0, {'0'..'9'}, -1 ],
			];
		
static
	index	:int32;
	rslt	:int32;
	
	
	brk2Experiment : 
		brk2Exp[ @elements( brkTest2_c )] := brkTest2_c;	
	
	brk3Experiment : 
		brk3Exp[ @elements( brkTest3_c )] := brkTest3_c;	
	
	rbrk2Experiment : 
		brk2Exp[ @elements( rbrkTest2_c )] := rbrkTest2_c;	
	
	rbrk3Experiment : 
		brk3Exp[ @elements( rbrkTest3_c )] := rbrkTest3_c;	
	

	
	
	span2Experiment : 
		span2Exp[ @elements( spanTest2_c )] := spanTest2_c;	
	
	span3Experiment : 
		span3Exp[ @elements( spanTest3_c )] := spanTest3_c;	
	
	rspan2Experiment : 
		span2Exp[ @elements( rspanTest2_c )] := rspanTest2_c;	
	
	rspan3Experiment : 
		span3Exp[ @elements( rspanTest3_c )] := rspanTest3_c;	
	

	
#macro checkFailure( exp );
	mov( ecx, index );
	mov( eax, rslt );
	if( eax <> exp.index[edx] ) then
		raise( exCset );
	endif
#endmacro

begin strcset_test;

	// Testing str.brk2:
	
	try
	
		lea( esi, brk2Experiment );
		for( mov( 0, ecx ); ecx < @elements( brk2Experiment ); inc( ecx )) do
		
			intmul(@size( brk2Exp ), ecx, edx );
			
			str.brk( brk2ESI.src[edx], brk2ESI.cst[edx] );
			checkFailure( brk2ESI );
			str.brk2( brk2ESI.src[edx], brk2ESI.cst[edx] );
			checkFailure( brk2ESI );
						
			
		endfor;  
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk2(a) result failure!  EAX=", eax, nl
			"Result = ", rslt, nl
			"index=", index, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk2(b) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.brk2( NULL, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk2(c) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk2(d) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.brk2( NULL, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk2(e) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk2(f) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	stderr.put( "str.brk2 succeeded!" nl );
	
		
	//////////////////////////////////////////////////////////////////////////////		

	// Testing str.rbrk2:
	
	try
	
		lea( esi, rbrk2Experiment );
		for( mov( 0, ecx ); ecx < @elements( rbrk2Experiment ); inc( ecx )) do
		
			intmul(@size( brk2Exp ), ecx, edx );
			
			str.rbrk( brk2ESI.src[edx], brk2ESI.cst[edx] );
			checkFailure( brk2ESI );
			str.rbrk2( brk2ESI.src[edx], brk2ESI.cst[edx] );
			checkFailure( brk2ESI );
						
			
		endfor;  
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk2(a) result failure!  EAX=", eax, nl
			"Result = ", rslt, nl
			"index=", index, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk2(b) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.rbrk2( NULL, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk2(c) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk2(d) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.brk2( NULL, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk2(e) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk2(f) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	stderr.put( "str.rbrk2 succeeded!" nl );
	
		
	//////////////////////////////////////////////////////////////////////////////		

	// Testing str.brk3:
	
	try
	
		lea( esi, brk3Experiment );
		for( mov( 0, ecx ); ecx < @elements( brk3Experiment ); inc( ecx )) do
		
			intmul(@size( brk3Exp ), ecx, edx );
			
			str.brk( brk3ESI.src[edx], brk3ESI.offset[edx], brk3ESI.cst[edx] );
			checkFailure( brk3ESI );
			str.brk3( brk3ESI.src[edx], brk3ESI.offset[edx], brk3ESI.cst[edx] );
			checkFailure( brk3ESI );
						
			
		endfor;  
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk3(a) result failure!  EAX=", eax, nl
			"Result = ", rslt, nl
			"index=", index, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk3(b) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.brk3( NULL, 0, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk3(c) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk3(d) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.brk3( NULL, 0, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk3(e) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.brk3(f) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	stderr.put( "str.brk3 succeeded!" nl );
	
		
			
	//////////////////////////////////////////////////////////////////////////////		

	// Testing str.rbrk3:
	
	try
	
		lea( esi, rbrk3Experiment );
		for( mov( 0, ecx ); ecx < @elements( rbrk3Experiment ); inc( ecx )) do
		
			intmul(@size( brk3Exp ), ecx, edx );
			
			str.rbrk( brk3ESI.src[edx], brk3ESI.offset[edx], brk3ESI.cst[edx] );
			checkFailure( brk3ESI );
			str.rbrk3( brk3ESI.src[edx], brk3ESI.offset[edx], brk3ESI.cst[edx] );
			checkFailure( brk3ESI );
						
			
		endfor;  
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk3(a) result failure!  EAX=", eax, nl
			"Result = ", rslt, nl
			"index=", index, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk3(b) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.rbrk3( NULL, 0, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk3(c) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk3(d) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.rbrk3( NULL, 0, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk3(e) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rbrk3(f) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	stderr.put( "str.rbrk3 succeeded!" nl );
	
	
	/////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////
	
		

	// Testing str.span2:
	
	try
	
		lea( esi, span2Experiment );
		for( mov( 0, ecx ); ecx < @elements( span2Experiment ); inc( ecx )) do
		
			intmul(@size( span2Exp ), ecx, edx );
			
			str.span( span2ESI.src[edx], span2ESI.cst[edx] );
			checkFailure( span2ESI );
			str.span2( span2ESI.src[edx], span2ESI.cst[edx] );
			checkFailure( span2ESI );
						
			
		endfor;  
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span2(a) result failure!  EAX=", eax, nl
			"Result = ", rslt, nl
			"index=", index, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span2(b) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.span2( NULL, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span2(c) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span2(d) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.span2( NULL, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span2(e) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span2(f) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	stderr.put( "str.span2 succeeded!" nl );
	
		
	//////////////////////////////////////////////////////////////////////////////		

	// Testing str.rspan2:
	
	try
	
		lea( esi, rspan2Experiment );
		for( mov( 0, ecx ); ecx < @elements( rspan2Experiment ); inc( ecx )) do
		
			intmul(@size( span2Exp ), ecx, edx );
			
			str.rspan( span2ESI.src[edx], span2ESI.cst[edx] );
			checkFailure( span2ESI );
			str.rspan2( span2ESI.src[edx], span2ESI.cst[edx] );
			checkFailure( span2ESI );
						
			
		endfor;  
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan2(a) result failure!  EAX=", eax, nl
			"Result = ", rslt, nl
			"index=", index, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan2(b) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.rspan2( NULL, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan2(c) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan2(d) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.span2( NULL, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan2(e) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan2(f) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	stderr.put( "str.rspan2 succeeded!" nl );
	
		
	//////////////////////////////////////////////////////////////////////////////		

	// Testing str.span3:
	
	try
	
		lea( esi, span3Experiment );
		for( mov( 0, ecx ); ecx < @elements( span3Experiment ); inc( ecx )) do
		
			mov( ecx, index );
			intmul(@size( span3Exp ), ecx, edx );
			
			str.span( span3ESI.src[edx], span3ESI.offset[edx], span3ESI.cst[edx] );
			checkFailure( span3ESI );
			str.span3( span3ESI.src[edx], span3ESI.offset[edx], span3ESI.cst[edx] );
			checkFailure( span3ESI );
						
			
		endfor;  
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span3(a) result failure!  EAX=", eax, nl
			"Result = ", rslt, nl
			"index=", index, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span3(b) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.span3( NULL, 0, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span3(c) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span3(d) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.span3( NULL, 0, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span3(e) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.span3(f) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	stderr.put( "str.span3 succeeded!" nl );
	
		
			
	//////////////////////////////////////////////////////////////////////////////		

	// Testing str.rspan3:
	
	try
	
		lea( esi, rspan3Experiment );
		for( mov( 0, ecx ); ecx < @elements( rspan3Experiment ); inc( ecx )) do
		
			mov( ecx, index );
			intmul(@size( span3Exp ), ecx, edx );
			
			str.rspan( span3ESI.src[edx], span3ESI.offset[edx], span3ESI.cst[edx] );
			checkFailure( span3ESI );
			str.rspan3( span3ESI.src[edx], span3ESI.offset[edx], span3ESI.cst[edx] );
			checkFailure( span3ESI );
						
			
		endfor;  
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan3(a) result failure!  EAX=", eax, nl
			"Result = ", rslt, nl
			"index=", index, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan3(b) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.rspan3( NULL, 0, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan3(c) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan3(d) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	
	try
	
		str.rspan3( NULL, 0, {} );
		raise( exCset );
		
	  exception( ex.AttemptToDerefNULL )
	  
	  	// Success if we get here.
		
	  exception( exCset )
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan3(e) result failure!  EAX=", eax, nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
			  
	  anyexception
	  
	  	mov( index, ecx );
		stderr.put
		( 
			nl nl 
			"***************************************************" nl
			"str.rspan3(f) unknown failure!  EAX=", eax, nl,
			"index=", (type uns32 ecx), nl
			"***************************************************" nl
			nl 
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endtry;
	stderr.put( "str.rspan3 succeeded!" nl );
	
	
			
end strcset_test;

													