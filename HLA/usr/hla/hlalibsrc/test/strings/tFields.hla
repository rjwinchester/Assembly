program fieldsTest;


	// returns 0 on successful run
	// returns 1 and displays error otherwise

	#include("strings.hhf")
	#include("stdlib.hhf")

	// test code below
	static
		s0	:string := "zero,one,two,three,four,five,,seven";
		s1	:string	:= "1,12,123,1234,12345";
		
		buf	:str.strvar (100);

		set0	:string[] := 
			[	"zero",
				"one",
				"two",
				"three",
				"four",
				"five",
				"",
				"seven"
			];
			
		set1	:string := "1234";


begin fieldsTest;

	xor (ecx, ecx);
	forever
	
		str.a_getField2 (s0, ecx);
		breakif (@nc);
		mov( eax, edx );
		if( str.ne ( (type string edx), set0[ecx*4] ) ) then
		
			stderr.put 
			(	
				"Failure in str.a_getField2" nl
				"should be	:", set0[ecx*4], nl
				"returned	:", (type string edx), nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		str.free( edx );
		inc (ecx);
		
	endfor;
	if( ecx <> 8 ) then
	
		stderr.put
		(
			"Error in str.a_getField2: ECX=", (type uns32 ecx),
			" should be 8" nl
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endif;
	
	if( str.a_getField2( s0, @elements( set0 )) ) then
	
		stderr.put
		(
			"Error in str.a_getField2: should have failed" nl
		);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endif;
	
	

	for( mov( 0, ecx ); ecx < @elements( set0 ); inc( ecx )) do
	
		str.getField3( s0, ecx, buf );
		if( @c ) then
		
			if( str.ne( buf, set0[ecx*4] ) ) then
				stderr.put 
				(	
					"Failure in str.getField3" nl
					"should be	:", set0[ecx*4], nl
					"returned	:", buf, nl
				);
				stdout.put( "Press Enter to Continue: " );
				stdin.readLn();
				os.exitProcess(1);
							
			endif;
			
		else
		
			stderr.put
			( 
				"Failure in str.getField3" nl
				"should be	: carry = set" nl
				"returned	: carry = clear" nl
			);
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
			
		endif;
		
	endfor;
	
	if( str.getField3 (s1, 3, buf) )  then
	
		if( str.ne( buf, set1 ) ) then
			stderr.put (	"Failure in str.getField3" nl
							"should be	:", set1, nl
							"returned	:", buf, nl);
			
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);			
		endif;
		
	else
	
		stderr.put( "Failure in str.getField3" nl
					"should be	: carry = set" nl
					"returned	: carry = clear" nl);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);
		
	endif;
	
	if( str.getField4( s1, 3, str.CmdLnDelimiters, buf )) then
		if( str.ne( buf, set1 ) ) then
			stderr.put (	"Failure in str.getField4" nl
							"should be	:", set1, nl
							"returned	:", buf, nl);
			
			stdout.put( "Press Enter to Continue: " );
			stdin.readLn();
			os.exitProcess(1);
		endif;
	else

		stderr.put( "Failure in str.getField4" nl
					"should be	: carry = set" nl
					"returned	: carry = clear" nl);
		stdout.put( "Press Enter to Continue: " );
		stdin.readLn();
		os.exitProcess(1);

	endif;
	stderr.put( "tFields succeeded!" nl );

end fieldsTest;
