program dirents_test;
#include( "stdlib.hhf" )
#include( "mac.hhf" )

const
	maxBufSize	:= 256*1024;
	
static
	basep	:dword;
	fd		:dword;
	size	:dword;
	dirbuf	:dword;
	maxBuf	:dword;

	procedure searchDir( searchName:string; buffer: dword; maxbuf:dword );
	var
		filename	:string;
		fnamebuf	:byte[mac.MAXNAMLEN+32];
		found		:boolean;
		
	begin searchDir;
	
stdout.put( "Searching for ", searchName, nl );
		cld();
		str.init( fnamebuf, mac.MAXNAMLEN+32 );
		mov( eax, filename );
		mov( false, found );
		mov( buffer, ebx );
		while( ebx < maxbuf ) do
		
			movzx( (type mac.dirent [ebx]).d_namlen, ecx );
			lea( esi, (type mac.dirent [ebx]).d_name );
			mov( filename, edi );
			mov( ecx, (type str.strRec [edi]).length );
			rep.movsb();
			mov( 0, (type byte [edi]) );
			breakif( str.eq( filename, searchName ));
			movzx( (type mac.dirent [ebx]).d_reclen, edx );
			add( edx, ebx );
			
		welse
		
			stdout.put( "Failed to find file ", searchName, " in directory" nl );
			os.exitProcess( 1 );
			
		endwhile;

	end searchDir;
	
begin dirents_test;

	// Allocate storage for the directory buffer on the stack:
	
	mem.talloc( maxBufSize );
	mov( eax, dirbuf );

	mac.open2( ".", mac.O_RDONLY );
	if( @c ) then
	
		stdout.put( "Error (", (type uns32 eax), ") opening the directory" nl );
		os.exitProcess( 1 );
		
	endif;
	mov( eax, fd );
	
	mov( 0, basep );	
	mac.getdirentries( fd, val dirbuf, maxBufSize, basep );
	if( @c ) then
	
		stdout.put( "Error (", (type uns32 eax), ") reading the directory" nl );
		os.exitProcess( 1 );
		
	endif;
	mov( eax, size );
	if( eax >= maxBufSize ) then
	
		stdout.put( "Warning: large directory, did not read all data" nl );
		
	endif;
	add( dirbuf, eax );
	mov( eax, maxBuf );
	
	mac.close( fd );
	if( @c ) then
	
		stdout.put( "Error (", (type uns32 eax), ") closing the directory" nl );
		os.exitProcess( 1 );
		
	endif;
	

	// Search for known entries in the directory:
	
	searchDir( ".", dirbuf, maxBuf );
	searchDir( "..", dirbuf, maxBuf );
	searchDir( "dirents.hla", dirbuf, maxBuf );
	stdout.put( "dirents succeeded!" nl );
		
	
end dirents_test;

													