program cscpy_test;
#include( "stdlib.hhf" )

		
const
	cs_c :cset[] :=
		[
			#for( i := 0 to 127 )
				 {char(0)..char(i)},
			#endfor
			#for( i := 0 to 126 )
				{@char(i)..@char(127)},
			#endfor
			{ #$7f }
		];
		
		
static
	csresult	:cset;
	ccs 		:cset[ @elements( cs_c ) ] := cs_c;
	
begin cscpy_test;

	
		for( mov( 0, ecx ); ecx<@elements( cs_c ); inc(ecx) )do

			intmul( @size( cset ), ecx, edx );
		
			cs.cpy( ccs[edx], csresult );
			if( cs.ne( csresult, ccs[edx]) ) then
			
				stderr.put
				( 
					nl nl 
					"***************************************************" nl
					"cs.cpy failed!  ecx=", ecx, nl,
					(type dword csresult[12]), '_',
					(type dword csresult[8]), '_',
					(type dword csresult[4]), '_',
					(type dword csresult), nl,
					
					(type dword ccs[edx+12]), '_',
					(type dword ccs[edx+8]), '_',
					(type dword ccs[edx+4]), '_',
					(type dword ccs[edx]), nl,
										
					"***************************************************" nl
					nl 
				);
				stdout.put( "Press Enter to Continue: " );
				stdin.readLn();
				os.exitProcess(1);

			endif;
			
			
		endfor;
		stderr.put( "cs.cpy succeeded!" nl );
		os.exitProcess(0);
		
end cscpy_test;

													