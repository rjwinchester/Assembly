
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit StdOutput;



#include( "../include/stdoutunit.hhf" );


/***************************************************************/
/*                                                             */
/* stdout.putr32-                                              */
/*                                                             */
/* Writes a 32-bit floating-point value to the standard output */
/* as a decimal string.                                        */
/*                                                             */
/* Inputs-                                                     */
/* 	r		:32-bit value to print.                            */
/* 	width	:print field width.                                */
/* 	decpts	:# of positions to the right of the decimal pt.    */
/* 	fill	:fill character if width is larger than the        */
/* 			 minimum necessary.                                */
/* 			                                                   */
/***************************************************************/



procedure stdout.putr32
( 
	r		:real32; 
	width	:uns32; 
	decpts	:uns32; 
	fill	:char 
); 
	@noframe;
	@nodisplay;
	@nostackalign; 

var
	r80:real80;
	
begin putr32;

	push( ebp );
	mov( esp, ebp );
	sub( _vars_, esp );
	fld( r );
	fstp( r80 );
	stdout.putr80( r80, width, decpts, #{push((type dword fill));}# );
	leave();
	ret( _parms_ );
	
end putr32;


end StdOutput;




	

