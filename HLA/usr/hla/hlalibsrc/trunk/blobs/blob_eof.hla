
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit blobUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "blobs.hhf" )
#include( "excepts.hhf" )
#includeOnce( "threads.hhf" )

// blob.eof:
//
//	Returns carry set and AL=1 if and end of blob (rcursor >= length).




procedure blob.eof( b:blob.blob ); 
	@nodisplay;
	@noframe;
begin eof;

	push( ebp );
	mov( esp, ebp );
	push( ebx );
	mov( b, ebx );
	test( ebx, ebx );
	jz AttemptToDerefNULL;
	
	#if( @thread )
	try
	
		thread.enterCriticalSection( (type blob.blobRec [ebx]).criticalSection );
	
	#endif
	
		mov( (type blob.blobRec [ebx]).rcursor, eax );
		cmp( eax, (type blob.blobRec [ebx]).length );
		mov( 0, eax );
		setae( al );
		
		
	#if( @thread )
	
	  anyexception
	  
	  	mov( b, edx );
		thread.leaveCriticalSection( (type blob.blobRec [edx]).criticalSection );
	  	reraise( eax );
		
	endtry;
	thread.leaveCriticalSection( (type blob.blobRec [ebx]).criticalSection );
		
	#endif
	cmp( al, 1 );
	cmc();
	pop( ebx );
	pop( ebp );	
	ret( _parms_ );
	
AttemptToDerefNULL:
	raise( ex.AttemptToDerefNULL );

end eof;
	
end blobUnit;




	

