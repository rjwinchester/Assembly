
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit blobUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "blobs.hhf" );
#include( "strings.hhf" );
#include( "excepts.hhf" );
#includeOnce( "threads.hhf" );

// catsub4-                                                
// catsub5-                                                
// a_catsub-                                               
//                                                         
// Extracts a substring from the first string operand and  
// concatentates it to the end of the blob specified by  
// the second blob operand.                              

 
procedure blob.catsub4
(
	src		:string; 
	start	:dword; 
	len		:dword; 
	dest	:blob.blob 
); @noframe;
begin catsub4;

	push( ebp );
	mov( esp, ebp );
	
	#if( @thread )
	push( ecx );
	try
	
		mov( dest, ecx );
		thread.enterCriticalSection( (type blob.blobRec [ecx]).criticalSection );
		
	#endif
	
		blob._catsub( src, start, len, dest );
		
	#if( @thread )
		
	  anyexception

		mov( dest, edx );
		thread.leaveCriticalSection( (type blob.blobRec [edx]).criticalSection );
		reraise( eax );
		
	endtry;
	mov( dest, ecx );
	thread.leaveCriticalSection( (type blob.blobRec [ecx]).criticalSection );
	pop( ecx );
		
	#endif
	pop( ebp );
	ret( _parms_ );
	

end catsub4;

end blobUnit;




	

