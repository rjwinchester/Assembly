
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit blobUnit;
?@nodisplay := true;
?@nostackalign := true;

#includeOnce( "blobs.hhf" );
#includeOnce( "fileio.hhf" );
#includeOnce( "excepts.hhf" );
#includeOnce( "memory.hhf" );
#includeOnce( "threads.hhf" );



// blob.save-
//
//	Loads a file into a blob.

procedure blob.save( filename:string; b:blob.blob ); @noframe;
var
	f		:dword;
	
begin save;

	push( ebp );
	mov( esp, ebp );
	sub( _vars_, esp );
	push( eax );
	push( ebx );
		
	mov( b, ebx );
	#if( @thread )
	try
	
		thread.enterCriticalSection
		( 
			(type blob.blobRec [ebx]).criticalSection 
		);
	
	#endif

		fileio.openNew( filename );
		mov( eax, f );
		fileio.write( eax, [ebx], (type blob.blobRec [ebx]).length );
		fileio.close( f );
	
	#if( @thread )
	
	  anyexception
	
		mov( b, edx );
		thread.leaveCriticalSection( (type blob.blobRec [edx]).criticalSection );
		reraise( eax );
		
	endtry;
	thread.leaveCriticalSection( (type blob.blobRec [ebx]).criticalSection );
		
	#endif
	pop( ebx );
	pop( eax );
	leave();
	ret( _parms_ );

end save;



end blobUnit;




	

