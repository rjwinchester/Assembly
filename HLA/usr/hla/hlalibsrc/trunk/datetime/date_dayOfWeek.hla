
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit DateTime;
#include( "datetime.hhf" );

	
// date._dayOfWeek-
//	Computes the day of the week. Note that 0=Sunday and 6=Saturday.
	
procedure date._dayOfWeek( dr:date.daterec ); 
	@nodisplay; 
	@noframe;
begin _dayOfWeek;

	push( ebp );
	mov( esp, ebp );
	push( edx );

	// date.validate( dr );	 // Note: date._Julian validates date.	
		
	date._toJulian( dr );
	inc( eax );		// Because Julian days start at noon.
	
	// Because the Julian Day number scheme began on a Sunday,
	// all we need do is take the remainder of the Julian day
	// number divided by seven.
	
	xor( edx, edx );
	mod( 7, edx:eax );
	mov( edx, eax );
	
	pop( edx );
	pop( ebp );
	ret( _parms_ );
					
end _dayOfWeek;
	
end DateTime;			
