
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit DateTime;
#includeOnce( "datetime.hhf" )
#includeOnce( "dtClass.hhf" )
#includeOnce( "excepts.hhf" )
#includeOnce( "../include/datetime_private.hhf" )

?@noframe := true;
?@nodisplay := true;


// virtualDateClass_t.toString-
//
//	Converts the object's date to a string
// and stores it in the specified destination string.
		
method virtualDateClass_t.toString( dest:string );
begin toString;

	push( ebp );
	mov( esp, ebp );
	push( eax );
	push( ecx );
	test( esi, esi );
	jz badObj;
	
	// Save the global formatting information
	// and copy the object's formats to the
	// global values prior to the conversion:
	
	_hla.get_DateSeparator();
	mov( al, ch );
	_hla.set_DateSeparator( this.Separator );
	
	_hla.get_DateFormat();
	mov( al, cl );
	_hla.set_DateFormat( this.OutFmt );
	
	date._toString( this.theDate, dest );
	
	// Restore the original format values:
	
	_hla.set_DateSeparator( ch );
	_hla.set_DateFormat( cl );

	pop( ecx );
	pop( eax );
	pop( ebp );
	ret( _parms_ );
	
badObj:
	raise( ex.BadObjPtr );

end toString;
	
	
	
end DateTime;			
