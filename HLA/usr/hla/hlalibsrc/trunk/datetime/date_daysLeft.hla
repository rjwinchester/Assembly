
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit DateTime;
#include( "datetime.hhf" );

	// date._daysLeft-
	//	Computes the number of days left in the year starting
	// on the date specified. Note that Dec 31st has one day left.
	
	procedure date._daysLeft( dr:date.daterec ); 
		@nodisplay; 
		@noframe;
	begin _daysLeft;
	
		push( ebp );
		mov( esp, ebp );
		
		date.validate( dr );
		
		push( ebx );
		
		// Set EAX to 1 if this is a leap year and
		// the month is greater than two.
		
		xor( eax, eax );
		pushw( 0 );
		pushw( dr.year );		
		call date._isLeapYear;
		cmp( dr.month, 2 );
		setbe( bl );
		and( bl, al );
		
		// Add in the number of days to the end of
		// the previous month.  Then sub the day in
		// the month.
		
		movzx( dr.month, ebx );
		add( date.DaysFromMonth[ ebx*4 - 4 ], eax );
		movzx( dr.day, ebx );
		sub( ebx, eax );
		
		pop( ebx );	
		pop( ebp );
		ret( _parms_ );
				
	end _daysLeft;
	
end DateTime;			
