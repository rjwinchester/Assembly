
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit DateTime;
#include( "dtClass.hhf" )
#include( "excepts.hhf" )

?@noframe := true;
?@nodisplay := true;

		
// timeClass_t.difference-
//
// Computes the number of seconds between
// some other time object and the current object.

procedure timeClass_t.difference( var time2:timeClass_t );
begin difference;

	push( ebp );
	mov( esp, ebp );
	
	test( esi, esi );
	jz badObj;
	
	mov( time2, eax );
	or( eax, eax );
	jz badObj;
	
	time.secsBetweenTimes( this.theTime, (type timeClass_t [eax]).theTime );
	
	pop( ebp );
	ret( _parms_ );
	
badObj:
	raise( ex.BadObjPtr );
	
end difference;

end DateTime;			
