
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit DateTime;
#include( "datetime.hhf" );


// _dayNumber-
//
//	This function computes the number of days into the
//  current year.  Jan 1 is day #1, Feb 1 is day #32,
//	Mar 1 is day #60 or #61 (leap year depending), etc.

procedure date._dayNumber( dr:date.daterec ); 
	@nodisplay; 
	@noframe;
begin _dayNumber;

	push( ebp );
	mov( esp, ebp );
	push( ebx );

	date.validate( dr );
			
	// Set EAX to 1 if this is a leap year and
	// the month is greater than two.
	
	pushw(0);
	pushw( dr.year );
	call date._isLeapYear;
	cmp( dr.month, 2 );
	seta( ah );
	and( ah, al );
	and( 1, eax );
	
	// Add in the number of days to the start of
	// the specified month.  Then add in the number
	// of days in the current month.
	
	movzx( dr.month, ebx );
	add( date.DaysToMonth[ ebx*4 ], eax );
	movzx( dr.day, ebx );
	add( ebx, eax );
	pop( ebx );
	pop( ebp );
	ret( _parms_ );	
			
end _dayNumber;
	
end DateTime;			
