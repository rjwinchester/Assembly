
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit bitsUnit;

#include( "bits.hhf" );

/*******************************************************************/
/*                                                                 */
/* reverse8-                                                       */
/*                                                                 */
/* Reverses the 8 bits in a byte (i.e., bit 7 winds up in bit 0,   */
/* bit 6 winds up in bit 1, ..., bit 1 winds up in bit 6, and      */
/* bit 0 winds up in bit 7).  Returns the result zero-extended     */
/* in EAX.                                                         */
/*                                                                 */
/*******************************************************************/


procedure bits.reverse8( BitsToReverse:byte in al ); @nodisplay; @noframe; 
begin reverse8;

	movzx( al, eax );
	movzx( bits.reversedBits[eax], eax );
	ret();
	
end reverse8;

	
end bitsUnit;	
