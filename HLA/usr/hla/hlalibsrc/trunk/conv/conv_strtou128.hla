
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit ConvUnit;

#includeOnce( "../include/conversions.hhf" )
#includeOnce( "conv.hhf" )
#includeOnce( "excepts.hhf" )
#includeOnce( "strings.hhf" )

/**************************************************************/
/*                                                            */
/* StrToi128-                                                 */
/*                                                            */
/* This function converts a sequence of characters to the     */
/* corresponding numeric value.  This routine is separate     */
/* from the others (atoi/StrTou8/StrTou16/StrTou32/StrTou64)  */
/* for performance reasons (no reason to slow them down by    */
/* making them support 128-bit input).                        */
/*                                                            */
/* On Entry:                                                  */
/*                                                            */
/* 	"s" points at the string containing the sequence of       */
/* 	decimal digits to convert.                                */
/* 	"index" contains an index into the string where the       */
/* 	sequence of decimal digits begins.                        */
/* 	                                                          */
/* On Exit:                                                   */
/*                                                            */
/* 	StrTou128 returns the                                     */
/* 	converted integer in the dest operand.                    */
/* 	                                                          */
/* Exceptions:                                                */
/*                                                            */
/* 	This routine raises an exception if:                      */
/* 	                                                          */
/* 		(a) A conversion error occurs (see atou/atoi).        */
/* 		(b) The resulting value is not within range.          */
/* 		(c) The supplied string index is out of range.        */
/* 		(d) "s" contains a NULL pointer.                      */
/* 		(e) "dest" contains a NULL pointer.                   */
/*                                                            */
/**************************************************************/


procedure conv.strTou128( s:string; index:dword; var dest:lword );   
	@nodisplay;
	@noframe; 
	@noalignstack;
	
begin strTou128;

	push( ebp );
	mov( esp, ebp );
	push( eax );
	push( ebx );
	push( ecx );
	push( edx );
	push( esi );
	push( edi );
	
	mov( _hla.get_Delimiters(), edi );
	
	// Get the string pointer and make sure it's valid.
	
	mov( s, esi );
	test( esi, esi );
	jz refNULL;
	cmp( dest, NULL );
	jz refNULL;
	
	// Get the starting index and make sure it does not
	// exceed the string length.
	
	mov( index, eax );
	cmp( eax, (type str.strRec [esi]).length );
	ja strIndexErr;

	add( eax, esi );		// Point at start of integer string.
	dec( esi );
	whileDelimLoop:
	
		NextChar;
		cmp( eax, $80 );
		jae IllegalChar;
		bt( eax, (type dword [edi] ));	// Delimiters
		jc whileDelimLoop;

	
	_atou128();

	// Store result into the dest parameter:

	mov( dest, edi );
	mov( eax, [edi] );
	mov( ebx, [edi+4] );
	mov( ecx, [edi+8] );
	mov( edx, [edi+12] );
		
	pop( edi );
	pop( esi );
	pop( edx );
	pop( ecx );
	pop( ebx );
	pop( eax );
	pop( ebp );
	ret( _parms_ );


refNULL:
	raise( ex.AttemptToDerefNULL );

strIndexErr:
	raise( ex.StringIndexError );

IllegalChar:
	raise( ex.IllegalChar );
	
end strTou128;


end ConvUnit;
