
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit ConvUnit;

#includeOnce( "../include/conversions.hhf" )
#includeOnce( "conv.hhf" )



/*********************************************************/
/*                                                       */
/* h16ToStr-                                             */
/*                                                       */
/* Converts a word value to a string of four hexadecimal */
/* digits.                                               */
/*                                                       */
/* "w" contains the word to convert.                     */
/* "buffer" points at an HLA string that will hold       */
/* the converted result.                                 */
/*                                                       */
/*********************************************************/


procedure conv.h16ToStr( w:word; size:dword; fill:char; buffer:string ); 
	 @nodisplay;
	 @noframe;
	 @noalignstack;
	
begin h16ToStr;

	// Parameters are always multiples of 32 bits. Zero out the
	// H.O. (indeterminate) value of w and then call dToStr
	// to do the real work.
	//
	// stk+16:	w
	// stk+12:	size
	// stk+8:	fill
	// stk+4:	buffer
	// stk+0:	return address

	mov( 0, (type word [esp+18]));
	jmp conv.h32ToStr;

	
end h16ToStr;

end ConvUnit;
