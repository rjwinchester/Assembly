
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit ConvUnit;

#includeOnce( "../include/conversions.hhf" )
#includeOnce( "conv.hhf" )


 
/**************************************************/
/*                                                */
/* r64ToStr-                                      */
/*                                                */
/* Just like r80ToStr above, except this routine  */
/* translates 64-bit FP numbers into a string.    */
/* This routine just converts the 64-bit value    */
/* to an 80-bit value and then calls the r80ToStr */
/* routine to do the real work.                   */
/*                                                */
/**************************************************/

procedure conv.r64ToStr
( 
	r64:		real64;	
	width:		uns32; 
	decimalpts:	uns32; 
	fill:		char; 
	buffer:		string
);  
	@nodisplay; 
	@noframe;
	@noalignstack;

var
	r80: real80;
	
begin r64ToStr;

	push( ebp );
	mov( esp, ebp );
	sub( _vars_, esp );

	fld( r64 );
	fstp( r80 );
	conv.r80ToStr( r80, width, decimalpts, fill, buffer );

	leave();
	ret( _parms_ );
	
end r64ToStr;







end ConvUnit;
