
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit ConvUnit;

#includeOnce( "stdlibdata.hhf" )
#includeOnce( "../include/conversions.hhf" )
#includeOnce( "conv.hhf" )
#includeOnce( "excepts.hhf" )
#includeOnce( "strings.hhf" )

/*************************************************************/
/*                                                           */
/* strToh80-                                                 */
/*                                                           */
/* Converts a string of hexadecimal digits to a tbyte        */
/* value and stores the lword value into the destination     */
/* operand.                                                  */
/*                                                           */
/* 	s-		pointer to string of digits.                     */
/* 	index-	index into string where conversion should begin. */
/* 	dest-	Target location for converted value.             */
/*                                                           */
/*************************************************************/

procedure conv.strToh80( s:string; index:dword; var dest:tbyte ); 
	@nodisplay;
	@noframe;
	@noalignstack;
	
begin strToh80;

	push( ebp );
	mov( esp, ebp );
	push( eax );
	push( esi );

	mov( s, esi );
	
	// Get the starting index and make sure it does not
	// exceed the string length.
	
	mov( index, eax );
	cmp( eax, (type str.strRec [esi]).length );
	ja strIndexErr;

	add( eax, esi );	// Point at start of hex string.
	
	
	add( eax, esi );				// Point at start of hex string.
	conv.atoh80( [esi], dest );		// Convert to a numeric value.
	
	pop( esi );
	pop( eax );
	pop( ebp );
	ret( _parms_ );


strIndexErr:
	raise( ex.StringIndexError );

end strToh80;


end ConvUnit;
