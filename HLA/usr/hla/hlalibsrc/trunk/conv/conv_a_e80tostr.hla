
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit ConvUnit;

#includeOnce( "../include/conversions.hhf" )
#includeOnce( "stdlibdata.hhf" )
#includeOnce( "conv.hhf" )
#includeOnce( "strings.hhf" )
#includeOnce( "memory.hhf" )


/*******************************************************************/
/*                                                                 */
/* a_e80ToStr-                                                     */
/*                                                                 */
/* Just like e80ToStr except this function automatically allocates */
/* storage for the string on the heap.                             */
/*                                                                 */
/*                                                                 */
/*  On Entry:                                                      */
/*                                                                 */
/*  r80-		Real80 value to convert.                           */
/*                                                                 */
/*  width-		Field width for the number (note that this         */
/*  			is an *exact* field width, not a minimum           */
/*  			field width).                                      */
/*                                                                 */
/*  fill-		Padding character if the number is smaller         */
/*  			than the specified field width.                    */
/*  			                                                   */
/*  			                                                   */
/*  On Exit:                                                       */
/*                                                                 */
/*  EAX points at the string allocated on the heap.                */
/*                                                                 */
/*******************************************************************/
                                                
                                                        

procedure conv.a_e80ToStr
(
	r80: 		real80;
	width:		uns32
);  
	@nodisplay; 
	@noalignstack;
	@noframe;


begin a_e80ToStr;

	push( ebp );
	mov( esp, ebp );
	push( edi );
	
	mov( width, eax );
	str.alloc( eax );
	push( eax );	// Save ptr to string
	mov( eax, edi );
	mov( width, eax );
	mov( eax, (type str.strRec [edi]).length );	// Set the string's length
	mov( 0, (type byte [edi+eax]));				// Zero-terminate the string
	conv.e80ToBuf( r80, eax, [edi] );			// Produce the string data
	
	pop( eax );		// Retrieve ptr to the string
	pop( edi );
	pop( ebp );
	ret( _parms_ );


end a_e80ToStr;


end ConvUnit;
