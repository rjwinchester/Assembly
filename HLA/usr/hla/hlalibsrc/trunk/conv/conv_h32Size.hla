
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit ConvUnit;

#includeOnce( "../include/conversions.hhf" )
#includeOnce( "conv.hhf" )


/***********************************************************/
/*                                                         */
/* h32Size                                                 */
/*                                                         */
/* This routine computes the minimum number of print       */
/* positions needed to display a dword value.              */
/* The size, in digits, is returned in the EAX register.   */
/*                                                         */
/* Input (dsize):                                          */
/* 	EAX-		Contains the value to compute the size of. */
/* 	                                                       */
/* Returns:                                                */
/* 	EAX-	1..8 depending on the number of hexadecimal    */
/* 			digits needed to represent the dword value.    */
/*                                                         */
/***********************************************************/

procedure conv.h32Size( dValue:dword in eax ); @nodisplay; @noframe;
begin h32Size;

	test( eax, eax );
	jz onlyOneDigit;
	
		// There are four bits for each digit,
		// so divide the number of bits by four
		// (and add one) to compute the number
		// of digits we need.
		
		bsr( eax, eax );
		shr( 2, eax );
		
	onlyOneDigit:
	add( 1, eax );		// Note: even zero requires one digit.

	// If OutputUnderscores is true, then we need to bump up the
	// number of print positions if we have more than 4 digits.

	push( eax );
	cmp( _hla.get_OutputUnderscores(), false );
	pop( eax );
	je noExtraCharPositions;

		cmp( eax, 4 );
		jbe noExtraCharPositions;
			add( 1, eax );

	noExtraCharPositions:
	ret();

end h32Size;

end ConvUnit;
