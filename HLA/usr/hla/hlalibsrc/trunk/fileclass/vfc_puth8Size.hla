
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit FileClass;

#includeonce( "fileclass.hhf" )
#includeonce( "conv.hhf" )

?@NoStackAlign := true;
?@NoDisplay := true;
?@NoFrame := true;		
		




method virtualFile_t.puth8Size( b:byte; width:int32; fill:char );
var
	numWidth	:dword;
	eaxSave		:dword;
	ecxSave		:dword;
	edxSave		:dword;
	ediSave		:dword;
	buffer		:char[4096];

begin puth8Size;

	push( ebp );
	mov( esp, ebp );
	sub( _vars_, esp );
	mov( eax, eaxSave );
	mov( ecx, ecxSave );
	mov( edx, edxSave );
	mov( edi, ediSave );

	// Zero extend the byte value to 32 bits and call
	// conv._hexToBuf32Size to convert it to a string:

	conv.h8Size( b );
	mov( eax, numWidth );

	mov( fill, dl );
	mov( width, eax );
	movzx( b, ecx );
	lea( edi, buffer );
	conv._hexToBuf32Size( ecx, eax, numWidth, dl, [edi], @size( buffer) -1 );	
	this.write( [edi], ecx );
	
	mov( eaxSave, eax );
	mov( ecxSave, ecx );
	mov( edxSave, edx );
	mov( ediSave, edi );
	leave();
	ret( _parms_ );
	
end puth8Size;

end FileClass;
