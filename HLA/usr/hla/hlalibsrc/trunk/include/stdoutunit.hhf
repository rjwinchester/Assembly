
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



#if( ! @defined( stdoutUnit_hhf ))
?stdoutUnit_hhf := true;
?@nodisplay := true;
?@nostackalign := true;

	#include( "hla.hhf" )
	#include( "stdio.hhf" )
	#include( "stdout.hhf" )
	#include( "fileio.hhf" )
	#include( "strings.hhf" )
	#include( "conv.hhf" )
	#include( "memory.hhf" )
	#include( "excepts.hhf" )

		
	#macro ChkStdOut;
		
		#if( os.win32 )
		
			if( HasStdOutHandle = false ) then
			
				push( eax );
				stdout.handle();
				mov( eax, StdOutHandle );
				pop( eax );
				
			endif;
			
		#endif
		
	#endmacro;
		


	static

		align(4);
		StdOutHandle	:dword;		@global:_hla._ext( "STDOUTUNIT_STDOUTHANDLE" );
		HasStdOutHandle	:boolean;	@global:_hla._ext( "STDOUTUNIT_HASSTDOUTHANDLE" );


	procedure GetStdOutHandle; @returns( "eax" );  
		@global:_hla._ext( "STDOUT_GETSTDOUTHANDLE" );



#endif