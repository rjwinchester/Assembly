
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde




unit argsUnit;

#include( "../include/osargs.hhf" )
#include( "../include/pat.hhf" )



	
static

	
// Some important pattern globals:
//
//	FailTo contains the address and environment of the
//  code to jump to if a given pattern matching routine
//	fails.
//
//	CleanESP contain2 the "pattern matching
//	global" values of the stack pointer register (i.e.,
//	the main program's values for esp).
//
//	StrStart- Points at the first byte of a string
//	processed by the current MATCH macro.
//
//	WordDelims- Set of characters that legally end a "word".
//	Used by MatchWord and MatchiWord.
//
//	WhiteSpace- Set of delimiters that the pattern matching
//	code considers to be whitespace.

	pat.WordDelims:			cset := -{ 'a'..'z', 'A'..'Z', '0'..'9', '_' };
	pat.FailTo:				pat.FailRec;
	pat.CleanESP:			dword;
	pat.StrStart:			dword;
	pat.onePatBase:			dword;
	pat.zeroOrOnePatBase:	dword;
	pat.zeroOrMorePatBase:	dword;
	pat.oneOrMorePatBase:	dword;
		

end argsUnit;
