
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit bitsUnit;

#include( "bits.hhf" );

namespace bits;


// Lookup tables that have an 8-bit index and produce (that is,
// whose entry at the specified index) consists of those eight
// bits reversed.
//
// Examples:
//
// reversedBits[ %0000_1111 ] = %1111_0000
// reversedBits[ %1010_1111 ] = %1111_0101


#macro reverse8bits( b ):reversed,j, k;

	?k := b;
	?reversed := 0;
	#for( j := 0 to 7 )
	
		?reversed := (reversed << 1 ) | (k & 1 );
		?k := k >> 1;
		
	#endfor
	reversed
 
#endmacro

readonly

	reversedBits:byte[256] :=
		[
			#for( i := 0 to 254 )
			
				reverse8bits( i ),
				
			#endfor
			%1111_1111
		];
		
end bits;

		
end bitsUnit;
