// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/7/2008, by Randall Hyde


unit sockets;
?@nostackalign := true;
?@noframe := true;
?@nodisplay := true;

#includeOnce( "sockets.hhf" )
#includeOnce( "strings.hhf" )


// socket_t.adrsToStr-
//
//	Converts a dword containing a network address (in Big Endian format)
// to a string of the form "ddd.ddd.ddd.ddd".

procedure sock.a_adrsToStr( a:dword );
var
	s	:string;
	sbuf:char[32];
	
begin a_adrsToStr;

	push( ebp );
	mov( esp, ebp );
	sub( _vars_, esp );
	
	lea( eax, sbuf );
	str.init( [eax], 32 );
	mov( eax, s );
	
	str.put
	( 
		s, 
		(type uns8 a[0]), 
		'.',  
		(type uns8 a[1]), 
		'.',  
		(type uns8 a[2]), 
		'.',  
		(type uns8 a[3])
	);
	str.a_cpy( s );  
	leave();
	ret( _parms_ );	
	
	
end a_adrsToStr;


end sockets;
