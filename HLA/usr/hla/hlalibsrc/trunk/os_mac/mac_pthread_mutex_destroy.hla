
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit macUnit;
#include( "mac.hhf" )

procedure _mutex_destroy( mutex:dword );
	@cdecl;
	@forward;
	
	

// mac.pthread_mutex_destroy- Releases resources assocated with a mutex.

procedure mac.pthread_mutex_destroy( var mutex:mac.pthread_mutex_t );
	@nodisplay; @noframe;
var
	ebxSave	:dword;
	ecxSave	:dword;
	edxSave	:dword;
	esiSave	:dword;
	ediSave	:dword;
	
begin pthread_mutex_destroy;

	push( ebp );
	mov( esp, ebp );
	sub( _vars_, esp );
	mac.saveregs;

	and( $FFFF_FFF0, esp );		// Align call below to 16 bytes.
	sub( 12, esp );
	_mutex_destroy( (type dword mutex) );

	mac.restoreregs;
	test( eax, eax );
	jnz badPthread_mutex_destroy;
	clc();
	leave();
	ret( _parms_ );
	
badPthread_mutex_destroy:
	mac.errno();
	stc();
	leave();
	ret( _parms_ );
	
end pthread_mutex_destroy;




#asm
	.section __IMPORT__, __jump_table, symbol_stubs, self_modifying_code+pure_instructions, 5
#endasm
procedure _mutex_destroy( mutex:dword );
	@noframe;
	@nodisplay;
begin _mutex_destroy;
#asm
	.indirect_symbol _pthread_mutex_destroy
	hlt ; hlt ; hlt;  hlt; hlt
	.subsections_via_symbols
#endasm
end _mutex_destroy;


end macUnit;
