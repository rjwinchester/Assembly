
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit StdInput;
#include( "../include/stdinunit.hhf" )

/**********************************************************/
/*                                                        */
/* geti64-                                                */
/*                                                        */
/* This routine reads a 64-bit integer                    */
/* and returns that value in the EDX:EAX register pair.   */
/*                                                        */
/* This routine will generate an appropriate exception    */
/* if there is a conversion error, overflow, or other     */
/* problem with reading the integer from the standard     */
/* input device.                                          */
/*                                                        */
/* Note that This routine will skip over any leading      */
/* delimiter characters (see the Delimiters cset in       */
/* conv.hla).  Furthermore, the value must end with       */
/* a valid delimiter character or an exception occurs.    */
/*                                                        */
/**********************************************************/


procedure geti64; @noframe;
begin geti64;

	push( ebx );
	
	_geti_();
	
	pop( ebx );
	ret();	

end geti64;


end StdInput;




	

