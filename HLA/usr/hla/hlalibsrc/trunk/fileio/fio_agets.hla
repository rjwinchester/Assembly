
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit FileIOUnit;
#include( "../include/fileiounit.hhf" )


/************************************************************/
/*                                                          */
/* fgets-                                                   */
/* a_fgets-                                                 */
/*                                                          */
/* These routines read a line of text from the specified    */
/* file and store the text into a string.  The a_fgets      */
/* routine allocates storage for the string on the heap     */
/* and returns a pointer to the string in the EAX register. */
/*                                                          */
/************************************************************/


procedure fileio.a_gets( Handle:dword in eax ); @noframe; @nodisplay; 
begin a_gets;

	push( ebp );
	mov( esp, ebp );
	push( eax );	// Save handle at ebp-4

	// Create a temporary string on the stack that we can
	// use to read the data from the file:

	tstralloc( 4096 );	// 4096 bytes, max, for this object

	// Read the data from the file ([ebp+4] is Handle value):

	fileio.gets( (type dword [ebp-4]), eax );

	// Now copy that string onto the heap and return a pointer
	// to the newly allocated string:

	str.a_cpy( eax );
	
	leave();
	ret();
	
end a_gets;

	
end FileIOUnit;

