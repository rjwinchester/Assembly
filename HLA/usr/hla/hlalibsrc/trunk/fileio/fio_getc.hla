
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit FileIOUnit;
		

#include( "../include/fileiounit.hhf" )


/******************************************************/
/*                                                    */
/* fgetc-                                             */
/*                                                    */
/* This routine reads a single character from the     */
/* file whose file handle is passed as a parameter.   */
/* This function returns the char in AL.			  */
/*                                                    */
/******************************************************/

procedure fileio.getc( Handle:dword in eax );
	@nodisplay; @noframe;
	
begin getc;

	sub( 4, esp );		// Make room for result.
	push( eax );		// Handle
	lea( eax, [esp+4]);	// Push address of buffer.
	push( eax );
	pushd( 1 );			// # of bytes to read.
	call fileio.read;	// Returns bytes read in EAX.
	
	test( eax, eax );	// If zero bytes read, it's EOF.
	jz wasEOF;
	
	pop( eax );			// Get character read by fileio.read
	movzx( al, eax );	// zero extend char to 32 bits.
	ret();
	
wasEOF:
	raise( ex.EndOfFile );
	 
end getc;


end FileIOUnit;

