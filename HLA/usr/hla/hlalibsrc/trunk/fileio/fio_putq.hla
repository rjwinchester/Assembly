
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit FileIOUnit;
		

#include( "../include/fileiounit.hhf" )
#include( "../include/conversions.hhf" )

/*********************************************************/
/*                                                       */
/* fileio.putq-                                          */
/* 	Converts a 64-bit number to hexadecimal form and     */
/* 	writes the resultant string to the file specified by */
/* 	the Handle parameter.                                */
/*                                                       */
/*********************************************************/


procedure fileio.putq( Handle:dword;  qw:qword ); @noframe; @nodisplay;

var
	eaxSave	:dword;
	ecxSave	:dword;
	edxSave	:dword;
	ediSave	:dword;
	buffer	:byte[ 64 ];

begin putq;

	push( ebp );
	mov( esp, ebp );
	sub( _vars_, esp );
	mov( eax, eaxSave );
	mov( edi, ediSave );

	// Convert qw to a string of characters:
	
	lea( edi, buffer );
	conv.qToBuf( qw, [edi] );
	
	// Compute the length of the string (depends on underscores
	// setting) and output to the file:
	
	lea( eax, buffer );
	sub( eax, edi );	
	fileio.write( Handle, [eax], edi );
	
	mov( eaxSave, eax );
	mov( ediSave, edi );
	leave();
	ret( _parms_ );
	
end putq;

		

	
end FileIOUnit;

