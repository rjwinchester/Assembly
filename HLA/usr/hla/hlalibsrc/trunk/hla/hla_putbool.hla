
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit hlaUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "hla.hhf" );
#include( "excepts.hhf" );



// blob.putbool-                                                  
//                                                           
// Appends true or false to the end of the destination blob
// depending on the value of the boolean parameter.          



procedure hla.putbool( putstr:thunk; b:boolean ); @noframe;
readonly
	tf	:string[2] := ["false", "true" ];
begin putbool;

	push( ebp );
	mov( esp, ebp );
	push( eax );
	movzx( b, eax );
	cmp( eax, true );
	ja ValueOutOfRange;
	mov( tf[eax*4], eax );
	putstr();
	pop( eax );
	pop( ebp );
	ret( _parms_ );	
	
ValueOutOfRange:
	raise( ex.ValueOutOfRange );
	
end putbool;

end hlaUnit;




	

