
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit stringUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "strings.hhf" );
#include( "excepts.hhf" );


/************************************************************/
/*                                                          */
/* ichpos2-                                                 */
/*                                                          */
/* Just like chpos2 except this guy does a case insensitive */
/* comparison.                                              */
/*                                                          */
/* This procedure searches for the first occurrence of a    */
/* *character* within a string.  Returns the index in       */
/* EAX (carry=0 if not found, carry=1 if found).            */
/*                                                          */
/************************************************************/

procedure str.ichpos2( src1:string; src2:char ); @noframe;
begin ichpos2;

	push( ebp );
	mov( esp, ebp );
	
	push( ecx );
	push( edi );
	
	mov( src1, edi );
	test( edi, edi );
	jz AttemptToDerefNULL;	
	
		mov( (type str.strRec [edi]).length, ecx );
		test( ecx, ecx );
		jz NotFound;

			mov( src2, al );
			sub( 1, edi );
			add( 1, ecx );
			scasbLoop:
				add( 1, edi );
				sub( 1, ecx );
				jz NotFound;
				
				cmp( al, [edi] );
				je foundIt;
					
					// If the chars did not match, try
					// swapping the case of one of the chars
					// and try again:
					
					mov( [edi], ah );
					cmp( ah, 'a' );
					jb scasbLoop;
					cmp( ah, 'z' );
					ja scasbLoop;
					
					and( $5f, ah );
					cmp( al, ah );
					jne scasbLoop;
				
				foundIt:
				sub( src1, edi );		// Compute index+1 (edi was inc'd!).
				mov( edi, eax );	// Return index in eax.
				jmp Found;

		NotFound:		
		mov( -1, eax );		// Deprecated!
		
	Found:
	pop( edi );
	pop( ecx );
	pop( ebp );
	cmp( eax, -1 );		// Set carry if success, clear if no match.
	ret( _parms_ );	
	
AttemptToDerefNULL:	
	raise( ex.AttemptToDerefNULL );

end ichpos2;

end stringUnit;




	

