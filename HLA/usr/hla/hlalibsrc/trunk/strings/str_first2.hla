
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit stringUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "strings.hhf" );
#include( "excepts.hhf" );


/***************************************************************/
/*                                                             */
/* first2,                                                     */
/* first3,                                                     */
/* a_first-                                                    */
/*                                                             */
/* These routines remove characters from the end of a string.  */
/* (that is, they return the characters at the start of the    */
/* string). The first2 routine destructively removes characters*/
/* from a specified string variable.  The a_start routine      */
/* allocates storage for a new string and copies the string,   */
/* minus the deleted portion, to the newly allocated storage.  */
/* The original string is left unchanged by a_start.           */
/* The first3 copies the substring to a destination string.	   */
/*                                                             */
/* Inputs-                                                     */
/*                                                             */
/* dest-   Pointer to string to remove characters from.        */
/* length- Number of characters to delete from the end         */
/*         of the string.                                      */
/*                                                             */
/***************************************************************/

// Written by Sevag Krikorian  -=[Kain]=-
// Renamed str.first2 and rewritten by R Hyde


procedure str.first2
(
      s		:string;
      len	:dword
); 
	@noframe;
begin first2;
      
	push( ebp );
	mov( esp, ebp );
	push(ecx);
	push(esi);

	// verify that s is non-NULL

	mov( s, esi );
	test( esi, esi );
	jz AttemptToDerefNULL;

	mov( len, ecx);
	cmp( ecx, (type str.strRec [esi]).length );
	jae noTruncate;		// Note: same as jnc

		// Keep the first len characters of the string

		mov( 0, (type byte [esi+ecx]) );      		// zero terminate
		mov( ecx, (type str.strRec[esi]).length );	// adjust length
		stc();										// Note successful truncation.
			                    
	noTruncate:
	pop(esi);
	pop(ecx);
	pop( ebp );
	ret( _parms_ );

AttemptToDerefNULL:
	raise(ex.AttemptToDerefNULL);

end first2;
end stringUnit;




	

