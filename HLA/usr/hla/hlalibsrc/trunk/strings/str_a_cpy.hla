
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit stringUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "strings.hhf" );
#include( "excepts.hhf" );
#include( "memory.hhf" );



/*****************************************************************/
/*                                                               */
/* a_cpy-                                                        */
/*                                                               */
/* Allocates enough storage to hold a copy of the source string  */
/* and then copies the source string to the allocated storage.   */
/* Returns a pointer to the allocated storage in eax (note: must */
/* use "strfree" to free up the string allocated via acpy).      */
/*                                                               */
/*****************************************************************/


procedure str.a_cpy( src:string ); @noframe;
begin a_cpy;

	push( ebp );
	mov( esp, ebp );
	// Get the current length of the source string and allocate
	// storage for a string that will be this length.

	mov( src, eax );
	test( eax, eax );
	jz attemptToDerefNULL;
	
	mov( (type str.strRec [eax]).length, eax );
	stralloc( eax );
	
	// Copy the source string to this newly allocated storage.
	
	str.cpy( src, eax );
	pop( ebp );
	ret( _parms_ );
	
attemptToDerefNULL:
	raise( ex.AttemptToDerefNULL );
	
end a_cpy;


end stringUnit;




	

