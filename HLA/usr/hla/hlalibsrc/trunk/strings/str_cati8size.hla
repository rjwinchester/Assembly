
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit stringUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "strings.hhf" );
#include( "excepts.hhf" );
#include( "memory.hhf" );

#include( "stdio.hhf" );

/******************************************************/
/*                                                    */
/* str.cati8size-                                     */
/*                                                    */
/* Appends the decimal equivalent of the i8 parameter */
/* to the end of the dest string.                     */
/*                                                    */
/******************************************************/
 
procedure str.cati8Size
( 
	dest:string; 
	i8:byte; 
	width:int32;
	fill:char 
);  @noframe;
begin cati8Size;

	push( ebp );
	mov( esp, ebp );

	push( edx );			// Sign extend to 64 bits.
	push( eax );

	push( dest );
	movsx( i8, eax );
	cdq();
	push( edx );
	push( eax );
	
	push( width );
	push( (type dword fill ));
	call( str.cati64Size );
	pop( eax );
	pop( edx );
	pop( ebp );
	ret( _parms_ );

end cati8Size;

end stringUnit;




	

