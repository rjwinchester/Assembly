
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit stringUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "strings.hhf" );
#include( "excepts.hhf" );
#include( "conv.hhf" );

/******************************************************/
/*                                                    */
/* str.cath80Size-                                    */
/*                                                    */
/* Converts tb to a string holding it's hexadecimal   */
/* representation using the specified minimum field   */
/* width (size) and padding character (fill) and then */
/* concatenates this string to the end of dest.       */
/*                                                    */
/* Inputs:                                            */
/* 	tb-                                               */
/* 		TByte value to convert to a string.           */
/* 		                                              */
/* 	size-                                             */
/* 		Minimum field width specification.            */
/* 		                                              */
/* 	fill-                                             */
/* 		Padding character                             */
/* 		                                              */
/* 	dest-                                             */
/* 		String to concatenate result to.              */
/* 		                                              */
/* Outputs:                                           */
/* 	dest-                                             */
/* 		Holds concatenated result.                    */
/* 		                                              */
/******************************************************/

procedure str.cath80Size( dest:string; tb:tbyte; size:dword; fill:char ); 
	@noframe;
	
const
	MaxByteStrLen := 128;
	chars: text := "(type str.strRec chrs[8])";

var
	chrs:	byte[ MaxByteStrLen + 8];

begin cath80Size;

	push( ebp );
	mov( esp, ebp );
	sub( _vars_, esp );
	push( eax );

	// Initialize maximum string length

	mov( MaxByteStrLen, chars.maxlen );

	// Convert the byte to a string of hex digits and 
	// print the string.

	pushw( 0 );							// Pad tbyte to 12 bytes
	push( (type word tb[8]));
	push( (type dword tb[4]));
	push( (type dword tb));
	push( size );                       // The length.
	push( (type dword fill));           // The fill char.
	lea( eax, chars );					// create pointer to string 'chars'
	push( eax ); 
	call( conv.h80ToStr );
	str.cat( (type string eax), dest );
	pop( eax );
	leave();
	ret( _parms_ );
	
end cath80Size;



end stringUnit;




	

