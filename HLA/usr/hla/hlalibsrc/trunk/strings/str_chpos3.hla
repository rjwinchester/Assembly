
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit stringUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "strings.hhf" );
#include( "excepts.hhf" );

/*************************************************************/
/*                                                           */
/* chpos3-                                                   */
/*                                                           */
/* Similar to chpos2 except this routine lets you specify a  */
/* string index into the string from which to start scanning */
/* for the character.                                        */
/*                                                           */
/*************************************************************/


procedure str.chpos3( src1:string; offs:dword; src2:char ); 
	@noframe;
begin chpos3;

	push( ebp );
	mov( esp, ebp );
	pushfd();
	cld();
	
	push( ecx );
	push( edi );
	
	mov( src1, edi );
	test( edi, edi );
	jz AttemptToDerefNULL;
		
	
		mov( (type str.strRec [edi]).length, ecx );
		test( ecx, ecx );
		jz NotFound;

			// If the specified index exceeds the string
			// length, raise an exception.  Otherwise, adjust
			// EDI and ECX by this offset value.
			
			mov( offs, eax );
			cmp( eax, ecx );
			ja StringIndexError;
			add( eax, edi );
			sub( eax, ecx );

			// Okay, scan for the specified character:
			
			mov( src2, al );
			repne.scasb();
			jne NotFound;
			
				sub( src1, edi );		// Compute index+1 (edi was inc'd!).
				lea( eax, [edi-1] );	// Return index in eax.
				jmp Found;

		NotFound:		
		mov( -1, eax );		// Deprecated!
		
	Found:
	pop( edi );
	pop( ecx );
	popfd();
	cmp( eax, -1 );			// Set carry on success, clear on failure.
	pop( ebp );
	ret( _parms_ );	
	
AttemptToDerefNULL:
	raise( ex.AttemptToDerefNULL );

StringIndexError:
	raise( ex.StringIndexError );

end chpos3;

end stringUnit;




	

