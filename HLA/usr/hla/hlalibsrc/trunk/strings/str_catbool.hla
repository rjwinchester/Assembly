
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



unit stringUnit;
?@nodisplay := true;
?@nostackalign := true;

#include( "strings.hhf" );
#include( "excepts.hhf" );



/**************************************************************/
/*                                                            */
/* putbool-                                                   */
/*                                                            */
/* Appends true or false to the end of the destination string */
/* depending on the value of the boolean parameter.           */
/*                                                            */
/**************************************************************/

procedure str.catbool( dest:string; b:boolean ); @noframe;
readonly
	tf	:string[2] := ["false", "true" ];
begin catbool;

	push( ebp );
	mov( esp, ebp );
	push( ebx );
	movzx( b, ebx );
	cmp( ebx, true );
	ja ValueOutOfRange;
	
	str.cat( tf[ebx*4], dest );
	pop( ebx );
	pop( ebp );
	ret( _parms_ );	
	
ValueOutOfRange:
	raise( ex.ValueOutOfRange );
	
end catbool;

end stringUnit;




	

