unit str_rmvchar_unit;


// synopsis
//	remove first or last character from a string
//	return result in EAX.
//	zero length strings return zero in EAX.


//	Version History:
//
//	Revision:	3
//	Author:		Sevag Krikorian
//	Date:		Oct 09, 2007
//	Note:		changed to library format, code improvement
//
//	Revision:	2
//	Author:		Sevag Krikorian
//	Date:		Sep. 06, 2007
//	Note:		updated with renamed cpyzn
//
//	Revision:	1
//	Author:		Sevag Krikorian
//	Date:		Sep. 06, 2007
//	Note:		1st release

	#includeOnce( "strings.hhf" )
	#includeOnce( "excepts.hhf" )


	procedure str.rmvLastChar2( s:string; remainder:string );
		@nodisplay; @noframe; @noalignstack;
		
		var
			saveEBX	:dword;
			saveECX	:dword;
			saveEDX	:dword;
			
	begin rmvLastChar2;
		
		push( ebp );
		mov( esp, ebp );
		sub( _vars_, esp );
		
		mov( ebx, saveEBX );
		mov( ecx, saveECX );
		mov( edx, saveEDX );
		
		mov( s, ebx );
		test( ebx, ebx );
		jz raiseDerefNULL;
		
		mov( remainder, edx );
		test( edx, edx );
		jz raiseDerefNULL;
		
		xor( eax, eax );
		cmp( (type str.strRec[ebx]).length, 0 );
		je done;
		
		mov( (type str.strRec[ebx]).length, ecx );
		sub( 1, ecx );
		cmp( ecx, (type str.strRec[edx]).maxlen );
		ja raiseStringOverflow;
		
		mov( ecx, (type str.strRec[edx]).length );
		
		add( ecx, ebx );
		mov( [ebx], al );
		
		push( eax );
		mov( s, ebx );
		zstr.cpyn( ebx, ecx, edx );
		pop( eax );

		done:
			mov( saveEBX, ebx );
			mov( saveECX, ecx );
			mov( saveEDX, edx );

		mov( ebp, esp );
		pop( ebp );
		ret( _parms_ );
		
		raiseDerefNULL:
			raise( ex.AttemptToDerefNULL );

			
		raiseStringOverflow:
			raise( ex.StringOverflow );
		
	end rmvLastChar2;


end str_rmvchar_unit;
