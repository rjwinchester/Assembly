
// I, Randall Hyde, hereby agree to waive all claim of copyright (economic
// and moral) in all content contributed by me, the user, and immediately
// place any and all contributions by me into the public domain; I grant
// anyone the right to use my work for any purpose, without any
// conditions, to be changed or destroyed in any manner whatsoever
// without any attribution or notice to the creator.  I also absolve myself
// of any responsibility for the use of this code, the user assumes all
// responsibilities for using this software in an appropriate manner.
//
// Notice of declaration of public domain, 7/12/2006, by Randall Hyde



/*
** fileExists-
**
** Provides the "fileio.exists("filename");" call that lets the caller 
** determine if a file exists.
**	
*/



unit FileIOUnit;
		

#include( "../include/fileiounit.hhf" )


/*************************************************************/
/*                                                           */
/* exists-                                                   */
/*                                                           */
/* Checks to see if the specified file exists.               */
/* Returns true in EAX if the file exists, false             */
/* if it does not exist.                                     */
/*                                                           */
/*************************************************************/




#if( os.linux )

	procedure filesys.exists( FileName:string ); @nodisplay; @noframe;
	var
		buf	:linux.stat64_t;
		
	begin exists;

		push( ebp );
		mov( esp, ebp );
		sub( _vars_, esp );
		
		lea( eax, buf );
		linux.stat( FileName, [eax] );  // Ignores third parameter
		test( eax, eax );
		setz( al );						// Assume it exists if no error.
		movzx( al, eax );
		leave();
		ret( _parms_ );
		
	end exists;

#elseif( os.freeBSD )

	procedure filesys.exists( FileName:string ); @nodisplay; @noframe;
	var
		buf	:bsd.stat_t;
		
	begin exists;

		push( ebp );
		mov( esp, ebp );
		sub( _vars_, esp );
		
		lea( eax, buf );
		bsd.stat( FileName, [eax] );  		// Ignores third parameter
		setnc( al );						// Assume it exists if no error.
		movzx( al, eax );
		leave();
		ret( _parms_ );
		
	end exists;

#elseif( os.macOS )

	procedure filesys.exists( FileName:string ); @nodisplay; @noframe;
	var
		buf	:mac.stat_t;
		
	begin exists;

		push( ebp );
		mov( esp, ebp );
		sub( _vars_, esp );
		
		lea( eax, buf );
		mac.stat( FileName, [eax] );  		// Ignores third parameter
		setnc( al );						// Assume it exists if no error.
		movzx( al, eax );
		leave();
		ret( _parms_ );
		
	end exists;

#elseif( os.win32 )

	procedure filesys.exists( FileName:string ); @nodisplay;
	begin exists;

		push( ecx );
		push( edx );
		win.GetFileAttributes( FileName );
		xor( -1, eax );
		setne( al );
		movzx( al, eax );
		pop( edx );
		pop( ecx );
		
	end exists;
	
	#else
	
		#print( "Unknown OS!" )
		
#endif
	
end FileIOUnit;

