// Assembly code emitted by HLA compiler
// Version 2.16 build 4391 (prototype)
// HLA compiler written by Randall Hyde
// GAS compatible output


        .globl     numCodeRelocs
        .globl     dataSize
        .globl     QuitMain__hla_
        .globl     numDataRelocs
        .globl     _hlabe_compile
        .globl     compileMACHO
        .globl     DfltExHndlr__hla_
        .globl     bssSize
        .globl     compileELF
        .globl     symbolTable
        .globl     codeSize
        .globl     hlabe_compile
        .globl     currentSection
        .globl     lexer
        .globl     equatesTable
        .globl     compileCOFF
        .globl     printLineNumberChain
        .globl     optimizeDisps
        .globl     InstallSignals__hla_


  .text


        .globl    MEM_FREE
        .globl    STR_CPY
        .globl    STR_INIT
        .globl    STR_CPYZ
        .globl    EX_PRINTEXCEPTIONERROR
        .globl    MEM_ALLOC1
        .globl    FILEIO_OPENNEW
        .globl    STR_A_CPY
        .globl    STDOUT_PUTSSIZE
        .globl    CONV_GETDELIMITERS
        .globl    CONV_SETDELIMITERS
        .globl    FILEIO_CLOSE
        .globl    STDERR_PUTI32
        .globl    MEM_ZALLOC
        .globl    STR_LENGTH
        .globl    STDERR_PUTS
        .globl    STDERR_PUTC
        .globl    _HLA_GET_EXCEPTIONPTREBP
        .globl    STDERR_PUTU32
        .globl    STDOUT_PUTU32
        .globl    _HLA_PUSH_EXCEPTIONPTR
        .globl    FILEIO_WRITE
        .globl    STDERR_NEWLN
        .globl    STDOUT_NEWLN
        .globl    DefaultExceptionHandler__hla_
        .globl    abstract__hla_
        .globl    STDOUT_PUTZS
        .globl    CONV_ATOH128
        .globl    STR_A_BUFTOSTR2
        .globl    _HLA_SET_EXCEPTIONPTR
        .globl    STDERR_PUTU8
        .globl    STDOUT_PUTU8
        .globl    ZSTR_CPY
        .globl    CONV_ATOU128
        .globl    TABLE_GETNODE
        .globl    TIME_UTCDATETIME
        .globl    MEM_REALLOC1
        .globl    BuildExcepts__hla_
        .globl    CONV_ATOH80
        .globl    CONV_ATOH64
        .globl    TIME_TOUNIXTIME
        .globl    CONV_ATOH32
        .globl    STDOUT_PUTS
        .globl    STDOUT_PUTD
        .globl    STDOUT_PUTC
        .globl    CONV_ATOU64
        .globl    CONV_ATOU32
        .globl    CSET_SETUNION
        .globl    Raise__hla_
        .globl    TABLE_CREATE
        .globl    shortDfltExcept__hla_
        .globl    TABLE_LOOKUP






  .text

DfltExHndlr__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
        jmp        DefaultExceptionHandler__hla_
xDfltExHndlr__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
InstallSignals__hla_:
        pushl      %ebp 
        movl       %esp, %ebp 
xInstallSignals__hla___hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
freeTableRecord__hla_3390:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      4(%ebx) 
        call       MEM_FREE
xfreeTableRecord__hla_3390__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
printLineNumberChain:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        mov        25(%ebx), %ebx 
        jmp        continue__hla_3398
while__hla_3398:
        pushl      $9 
        call       STDERR_PUTC
        pushl      4(%ebx) 
        call       STDERR_PUTS
        pushl      $58 
        call       STDERR_PUTC
        pushl      8(%ebx) 
        call       STDERR_PUTU32
        mov        (%ebx), %ebx 
        cmpl       $0, %ebx 
        je         false__hla_3400
        pushl      $str__hla_3401 
        call       STDERR_PUTS
false__hla_3400:
continue__hla_3398:
        cmpl       $0, %ebx 
        jne        while__hla_3398
exitloop__hla_3398:

        call       STDERR_NEWLN
        popl       %ebx 
xprintLineNumberChain__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
skipToEoln__hla_3417:
        jmp        continue__hla_3420
while__hla_3420:
        incl       %ebx 
continue__hla_3420:
        cmpl       end_source__hla_3413, %ebx 
        jnb        L3422__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3420
L3422__hla_:
exitloop__hla_3420:

        incl       %ebx 
        incl       lineNumber__hla_3407 
        ret
skipSpaces__hla_3428:
        decl       %ebx 

skipSpcs__hla_3431:
        incl       %ebx 
        cmpl       end_source__hla_3413, %ebx 
        jae        skippedSpaces__hla_3432
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3431
        cmpb       $9, %al 
        je         skipSpcs__hla_3431
        cmpb       $13, %al 
        je         skipSpcs__hla_3431

skippedSpaces__hla_3432:
        ret
skipSpaces2__hla_3438:
        decl       %ebx 

skipSpcs__hla_3441:
        incl       %ebx 
        cmpl       end_source__hla_3413, %ebx 
        jae        skippedSpaces__hla_3442
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3441
        cmpb       $9, %al 
        je         skipSpcs__hla_3441
        cmpb       $13, %al 
        je         skipSpcs__hla_3441
        ret

skippedSpaces__hla_3442:
        pushl      $str__hla_3443 
        call       STDOUT_PUTS
        lea        str__hla_3444, %ecx 
        mov        $568, %edi 
        mov        $20, %eax 
        call       Raise__hla_
grabID__hla_3450:
        mov        4(%esp), %ecx 
forever__hla_3455:
continue__hla_3454:
        cmpl       end_source__hla_3413, %ebx 
        jae        exitloop__hla_3454
        movzbl     (%ebx), %eax 
        btl        %eax, idSet__hla_3451 
        jnc        exitloop__hla_3454
        mov        %al, (%ecx) 
        incl       %ebx 
        incl       %ecx 
        jmp        forever__hla_3455
exitloop__hla_3454:

        movb       $0, (%ecx) 
        mov        4(%esp), %edx 
        subl       %edx, %ecx 
        mov        %ecx, -4(%edx) 
        pushl      %esi 
        pushl      %edi 
false__hla_3458:
repeat__hla_3458:
        pushl      %edx 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     8(%edi) 
        cmpl       $0, %eax 
        je         false__hla_3459
        mov        4(%eax), %eax 
        pushl      %eax 
        pushl      %edx 
        call       STR_CPY
false__hla_3459:
continue__hla_3458:
        cmpl       $0, %eax 
        jne        repeat__hla_3458
exitloop__hla_3458:

        popl       %edi 
        popl       %esi 
        cmpl       end_source__hla_3413, %ebx 
        setb       %al 
        movzbl     %al, %eax 
        ret        $4
unknownStmt__hla_3465:
        pushl      $str__hla_3468 
        call       STDOUT_PUTS
        mov        start_stmt__hla_3414, %ebx 
        jmp        continue__hla_3469
while__hla_3469:
        pushl      (%ebx) 
        call       STDOUT_PUTC
        incl       %ebx 
continue__hla_3469:
        cmpl       end_source__hla_3413, %ebx 
        jnb        L3471__hla_
        cmpb       $10, (%ebx) 
        jne        while__hla_3469
L3471__hla_:
exitloop__hla_3469:

        incl       %ebx 
        incl       lineNumber__hla_3407 
        call       STDOUT_NEWLN
        ret
getOperand__hla_3480:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %esi 
        call       skipSpaces2__hla_3438
        movzbl     (%ebx), %eax 
        cmpl       $36, %eax 
        jl         default__hla_3483
        cmpl       $122, %eax 
        jg         default__hla_3483
        jmp *      jmpTbl__hla_3483-144(,%eax,4) 
case__hla_3484:
        lea        1(%ebx), %esi 
        call       CONV_ATOH32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3483
case__hla_3485:
        lea        (%ebx), %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        xorl       %edx, %edx 
        jmp        endswitch__hla_3483
case__hla_3486:
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        pushl      -4(%ebp) 
        call       grabID__hla_3450
        pushl      -4(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3487
        movl       %eax, %edx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%edx) 
        movb       $4, 21(%eax) 
        mov        8(%edx), %ecx 
        mov        %ecx, 4(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3487
false__hla_3487:
        mov        4(%eax), %edx 
        orb        $4, 21(%edx) 
        movl       %eax, %edx 
endif__hla_3487:
        xorl       %eax, %eax 
        jmp        endswitch__hla_3483
case__hla_3488:
        addl       $1, %ebx 
        call       RelExpr__hla_3477
        pushl      %eax 
        call       skipSpaces2__hla_3438
        cmpb       $41, %al 
        je         false__hla_3489
        pushl      $str__hla_3490 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $818, %edi 
        mov        $9, %eax 
        call       Raise__hla_
false__hla_3489:
        addl       $1, %ebx 
        popl       %eax 
        jmp        endswitch__hla_3483
default__hla_3483:
        pushl      $str__hla_3491 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_3492 
        call       STDOUT_PUTS
        pushl      lineNumber__hla_3407 
        call       STDOUT_PUTU32
        call       STDOUT_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $833, %edi 
        mov        $20, %eax 
        call       Raise__hla_
endswitch__hla_3483:
        popl       %esi 
xgetOperand__hla_3480__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
RelExpr__hla_3477:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        call       getOperand__hla_3480
        mov        %eax, -4(%ebp) 
        mov        %edx, -8(%ebp) 
forever__hla_3499:
continue__hla_3498:
        movzbl     (%ebx), %eax 
        cmpl       $43, %eax 
        je         case__hla_3501
        cmpl       $45, %eax 
        je         case__hla_3504
        jmp        default__hla_3500
case__hla_3501:
        addl       $1, %ebx 
        call       getOperand__hla_3480
        cmpl       $0, %edx 
        je         false__hla_3502
        pushl      $str__hla_3503 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $714, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3502:
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3500
case__hla_3504:
        addl       $1, %ebx 
        call       getOperand__hla_3480
        cmpl       $0, %edx 
        je         false__hla_3505
        pushl      $str__hla_3503 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $714, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3505:
        negl       %eax 
        addl       %eax, -4(%ebp) 
        jmp        endswitch__hla_3500
default__hla_3500:
        jmp        exitloop__hla_3498
endswitch__hla_3500:
        jmp        forever__hla_3499
exitloop__hla_3498:

        mov        -4(%ebp), %eax 
        mov        -8(%ebp), %edx 
xRelExpr__hla_3477__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
EvalExpr__hla_3511:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       RelExpr__hla_3477
        cmpl       $0, %edx 
        je         false__hla_3514
        pushl      $str__hla_3515 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $914, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3514:
        popl       %edx 
xEvalExpr__hla_3511__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
parseBytes__hla_3521:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        call       skipSpaces2__hla_3438
        cmpb       $34, (%ebx) 
        jne        false__hla_3524
        addl       $1, %ebx 
        mov        %ebx, -4(%ebp) 
        jmp        continue__hla_3525
while__hla_3525:
        addl       $1, %ebx 
continue__hla_3525:
        cmpb       $34, (%ebx) 
        jne        while__hla_3525
exitloop__hla_3525:

        mov        %ebx, -8(%ebp) 
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        jne        false__hla_3527
        addl       $1, %ebx 
        mov        -8(%ebp), %eax 
        subl       -4(%ebp), %eax 
        addl       8(%ebp), %eax 
        pushl      %eax 
        call       parseBytes__hla_3521
        jmp        endif__hla_3527
false__hla_3527:
        mov        -8(%ebp), %ecx 
        subl       -4(%ebp), %ecx 
        addl       8(%ebp), %ecx 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3408, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3408 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3527:
        pushl      %esi 
        pushl      %edi 
        pushl      %ecx 
        cld
        mov        -4(%ebp), %esi 
        movl       %eax, %edi 
        addl       8(%ebp), %edi 
        mov        -8(%ebp), %ecx 
        subl       %esi, %ecx 
        cld
        rep movsb
        popl       %ecx 
        popl       %edi 
        popl       %esi 
        jmp        endif__hla_3524
false__hla_3524:
        call       EvalExpr__hla_3511
        cmpl       $256, %eax 
        jnae       false__hla_3528
        pushl      $str__hla_3529 
        call       STDOUT_PUTS
        lea        str__hla_3444, %ecx 
        mov        $1039, %edi 
        mov        $8, %eax 
        call       Raise__hla_
false__hla_3528:
        mov        %al, -9(%ebp) 
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        jne        false__hla_3530
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $1, %eax 
        pushl      %eax 
        call       parseBytes__hla_3521
        jmp        endif__hla_3530
false__hla_3530:
        mov        8(%ebp), %ecx 
        addl       $18, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        pushl      %edx 
        mov        tknListTail__hla_3408, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3408 
        popl       %edx 
        addl       $17, %eax 
endif__hla_3530:
        pushl      %ebx 
        pushl      %edx 
        mov        -9(%ebp), %bl 
        mov        8(%ebp), %edx 
        mov        %bl, (%eax,%edx,1) 
        popl       %edx 
        popl       %ebx 
endif__hla_3524:
xparseBytes__hla_3521__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
parseWords__hla_3536:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3438
        call       EvalExpr__hla_3511
        cmpl       $65536, %eax 
        jnae       false__hla_3539
        pushl      $str__hla_3540 
        call       STDOUT_PUTS
        lea        str__hla_3444, %ecx 
        mov        $1131, %edi 
        mov        $8, %eax 
        call       Raise__hla_
false__hla_3539:
        mov        %ax, -10(%ebp) 
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        jne        false__hla_3541
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        call       parseWords__hla_3536
        jmp        endif__hla_3541
false__hla_3541:
        mov        8(%ebp), %ecx 
        addl       $19, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3408, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3408 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -10(%ebp), %bx 
        mov        8(%ebp), %edx 
        mov        %bx, (%eax,%edx,1) 
        popl       %ebx 
endif__hla_3541:
        popl       %edx 
xparseWords__hla_3536__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
parseDwords__hla_3547:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3438
        call       RelExpr__hla_3477
        mov        %eax, -12(%ebp) 
        cmpl       $0, %edx 
        jne        false__hla_3550
        pushl      $21 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        movl       $4, 13(%eax) 
        mov        %eax, tknListTail__hla_3408 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        clc
        jmp        endif__hla_3550
false__hla_3550:
        pushl      $21 
        call       MEM_ALLOC1
        pushl      %edx 
        mov        tknListTail__hla_3408, %edx 
        movb       $5, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %eax, tknListTail__hla_3408 
        popl       %edx 
        mov        %edx, 13(%eax) 
        mov        -12(%ebp), %edx 
        mov        %edx, 17(%eax) 
        stc
endif__hla_3550:
        popl       %edx 
xparseDwords__hla_3547__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
EvalQWord__hla_3559:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3562
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        call       CONV_ATOH64
        movl       %esi, %ebx 
        jmp        endif__hla_3562
false__hla_3562:
        lea        (%ebx), %esi 
        call       CONV_ATOU64
        movl       %esi, %ebx 
endif__hla_3562:
        popl       %esi 
xEvalQWord__hla_3559__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
parseQWords__hla_3556:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $16, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3438
        call       EvalQWord__hla_3559
        mov        %eax, -16(%ebp) 
        mov        %edx, -12(%ebp) 
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        jne        false__hla_3568
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       parseQWords__hla_3556
        jmp        endif__hla_3568
false__hla_3568:
        mov        8(%ebp), %ecx 
        addl       $25, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3408, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3408 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -16(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3568:
        popl       %edx 
xparseQWords__hla_3556__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
EvalTByte__hla_3577:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3580
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH80
        movl       %esi, %ebx 
        jmp        endif__hla_3580
false__hla_3580:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
        movzwl     -14(%ebp), %eax 
        orl        -12(%ebp), %eax 
        testl      %eax, %eax 
        je         false__hla_3581
        pushl      $str__hla_3582 
        call       STDOUT_PUTS
        lea        str__hla_3444, %ecx 
        mov        $1415, %edi 
        mov        $8, %eax 
        call       Raise__hla_
false__hla_3581:
endif__hla_3580:
        popl       %esi 
        ret
parseTBytes__hla_3574:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3438
        call       EvalTByte__hla_3577
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        jne        false__hla_3588
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $10, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3574
        jmp        endif__hla_3588
false__hla_3588:
        mov        8(%ebp), %ecx 
        addl       $27, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3408, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3408 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %bx 
        mov        %bx, 8(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3588:
        popl       %edx 
xparseTBytes__hla_3574__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
EvalLWord__hla_3597:
        pushl      %esi 
        mov        (%ebx), %al 
        cmpb       $36, %al 
        jne        false__hla_3600
        addl       $1, %ebx 
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOH128
        movl       %esi, %ebx 
        jmp        endif__hla_3600
false__hla_3600:
        lea        (%ebx), %esi 
        pushl      %ebp 
        addl       $-24, (%esp) 
        call       CONV_ATOU128
        movl       %esi, %ebx 
endif__hla_3600:
        popl       %esi 
        ret
parseLWords__hla_3594:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $24, %esp 
        pushl      %edx 
        call       skipSpaces2__hla_3438
        call       EvalLWord__hla_3597
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        jne        false__hla_3606
        addl       $1, %ebx 
        mov        8(%ebp), %eax 
        addl       $16, %eax 
        pushl      %eax 
        call       parseTBytes__hla_3574
        jmp        endif__hla_3606
false__hla_3606:
        mov        8(%ebp), %ecx 
        addl       $33, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        subl       $17, %ecx 
        mov        tknListTail__hla_3408, %edx 
        movb       $2, 8(%eax) 
        movl       $0, 4(%eax) 
        mov        %edx, (%eax) 
        mov        %eax, 4(%edx) 
        mov        %ecx, 13(%eax) 
        mov        %eax, tknListTail__hla_3408 
        addl       $17, %eax 
        pushl      %ebx 
        mov        -24(%ebp), %ebx 
        mov        8(%ebp), %edx 
        mov        %ebx, (%eax,%edx,1) 
        mov        -20(%ebp), %ebx 
        mov        %ebx, 4(%eax,%edx,1) 
        mov        -16(%ebp), %ebx 
        mov        %ebx, 8(%eax,%edx,1) 
        mov        -12(%ebp), %ebx 
        mov        %ebx, 12(%eax,%edx,1) 
        popl       %ebx 
endif__hla_3606:
        popl       %edx 
xparseLWords__hla_3594__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
coalesce__hla_3612:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $32, %esp 
        mov        %eax, -16(%ebp) 
        mov        %ecx, -20(%ebp) 
        mov        %edx, -24(%ebp) 
        mov        %esi, -28(%ebp) 
        mov        %edi, -32(%ebp) 
        mov        8(%ebp), %edx 
        mov        (%edx), %esi 
        mov        %esi, -8(%ebp) 
        mov        (%esi), %eax 
        mov        %eax, -4(%ebp) 
        mov        13(%edx), %ecx 
        addl       13(%esi), %ecx 
        mov        %ecx, -12(%ebp) 
        addl       $17, %ecx 
        pushl      %ecx 
        call       MEM_ALLOC1
        mov        13(%esi), %ecx 
        addl       $17, %ecx 
        movl       %eax, %edi 
        cld
        rep movsb
        mov        -12(%ebp), %ecx 
        mov        %ecx, 13(%eax) 
        mov        8(%ebp), %esi 
        mov        13(%esi), %ecx 
        addl       $17, %esi 
        cld
        rep movsb
        mov        -4(%ebp), %edx 
        mov        %eax, 4(%edx) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, tknListTail__hla_3408 
        pushl      8(%ebp) 
        call       MEM_FREE
        pushl      -8(%ebp) 
        call       MEM_FREE
        mov        -16(%ebp), %eax 
        mov        -20(%ebp), %ecx 
        mov        -24(%ebp), %edx 
        mov        -28(%ebp), %esi 
        mov        -32(%ebp), %edi 
xcoalesce__hla_3612__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
initStmt__hla_3620:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ecx 
        pushl      8(%ebp) 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3408 
        popl       %ecx 
xinitStmt__hla_3620__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
parseSourceFileList__hla_3628:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %edx 
        call       skipSpaces2__hla_3438
        cmpb       $59, (%ebx) 
        jne        false__hla_3632
        pushl      %ecx 
        pushl      %esi 
        pushl      %edi 
        addl       $1, %ebx 
        call       skipSpaces2__hla_3438
        movl       %ebx, %ecx 
        subl       $1, %ebx 
false__hla_3633:
repeat__hla_3633:
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        btl        %eax, filenameDelims__hla_3629 
continue__hla_3633:
        jnc        repeat__hla_3633
exitloop__hla_3633:

        movl       %ebx, %eax 
        subl       %ecx, %eax 
        cmpl       $512, %eax 
        jna        false__hla_3634
        pushl      $str__hla_3635 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $1765, %edi 
        mov        $8, %eax 
        call       Raise__hla_
false__hla_3634:
        pushl      $12 
        call       MEM_ALLOC1
        mov        8(%ebp), %edx 
        mov        %eax, (%edx) 
        movl       %eax, %edx 
        pushl      %ecx 
        pushl      %ebx 
        call       STR_A_BUFTOSTR2
        addl       $1, %ebx 
        mov        %eax, 4(%edx) 
        cmpb       $44, (%ebx) 
        jne        false__hla_3636
        addl       $1, %ebx 
false__hla_3636:
        call       skipSpaces2__hla_3438
        movl       %ebx, %esi 
        call       CONV_ATOU32
        movl       %esi, %ebx 
        mov        %eax, 8(%edx) 
        movl       $0, (%edx) 
        lea        (%edx), %eax 
        popl       %edi 
        popl       %esi 
        popl       %ecx 
        pushl      %eax 
        call       parseSourceFileList__hla_3628
        jmp        endif__hla_3632
false__hla_3632:
        mov        8(%ebp), %edx 
        movl       $0, (%edx) 
endif__hla_3632:
        popl       %edx 
xparseSourceFileList__hla_3628__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $4
getDisp__hla_3642:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        call       skipSpaces__hla_3428
        call       RelExpr__hla_3477
        popl       %ecx 
        mov        %eax, 21(%ecx) 
        mov        %edx, 17(%ecx) 
        movl       $0, 13(%ecx) 
        lea        25(%ecx), %eax 
        pushl      %eax 
        call       parseSourceFileList__hla_3628
        call       skipToEoln__hla_3417
xgetDisp__hla_3642__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
emitDummy__hla_3650:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ecx 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $21, 8(%eax) 
        mov        %eax, tknListTail__hla_3408 
        popl       %ecx 
        popl       %eax 
xemitDummy__hla_3650__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret
lexer:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $5144, %esp 
        movl       $0, -12(%ebp) 
        movl       $0, -4(%ebp) 
        pushl      %ebp 
        addl       $-1036, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -8(%ebp) 
        mov        20(%ebp), %eax 
        mov        %eax, end_source__hla_3413 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5136(%ebp) 
        mov        %eax, codeListTail__hla_3410 
        mov        %eax, tknListTail__hla_3408 
        movl       $codeListTail__hla_3410, lastTailPtr__hla_3409 
        movb       $1, currentSection 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5140(%ebp) 
        mov        %eax, dataListTail__hla_3411 
        pushl      $13 
        call       MEM_ALLOC1
        movl       $0, 4(%eax) 
        movl       $0, (%eax) 
        movb       $0, 8(%eax) 
        mov        %eax, -5144(%ebp) 
        mov        %eax, bssListTail__hla_3412 
        mov        24(%ebp), %ebx 
forever__hla_3659:
continue__hla_3658:
        mov        %ebx, start_stmt__hla_3414 
        decl       %ebx 

skipSpcs__hla_3660:
        incl       %ebx 
        cmpl       end_source__hla_3413, %ebx 
        jae        exitloop__hla_3658
        mov        (%ebx), %al 
        cmpb       $32, %al 
        je         skipSpcs__hla_3660
        cmpb       $9, %al 
        je         skipSpcs__hla_3660
        cmpb       $13, %al 
        je         skipSpcs__hla_3660
        cmpb       $10, %al 
        jne        false__hla_3662
        incl       %ebx 
        incl       lineNumber__hla_3407 
        jmp        continue__hla_3658
false__hla_3662:
        cmpb       $59, %al 
        jne        false__hla_3663
        call       skipToEoln__hla_3417
        jmp        continue__hla_3658
false__hla_3663:
        cmpb       $46, %al 
        jne        false__hla_3664
        addl       $1, %ebx 
        movzbl     (%ebx), %eax 
        cmpl       $97, %eax 
        jl         default__hla_3665
        cmpl       $122, %eax 
        jg         default__hla_3665
        jmp *      jmpTbl__hla_3665-388(,%eax,4) 
case__hla_3666:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $1, 8(%eax) 
        mov        %eax, tknListTail__hla_3408 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3667:
        addl       $1, %ebx 
        pushl      $0 
        call       parseBytes__hla_3521
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e54_skipAssertion___hla_3672
        pushl      _0e55_msg___hla_3670 
        popl       AssertionStr 
        lea        str__hla_3673, %ecx 
        mov        $67, %edi 
        mov        $12, %eax 
        call       Raise__hla_

_0e54_skipAssertion___hla_3672:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3674
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3674:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3675:
        call       emitDummy__hla_3650
        movb       $1, currentSection 
        mov        lastTailPtr__hla_3409, %eax 
        mov        tknListTail__hla_3408, %ecx 
        mov        %ecx, (%eax) 
        movl       $codeListTail__hla_3410, lastTailPtr__hla_3409 
        mov        codeListTail__hla_3410, %eax 
        mov        %eax, tknListTail__hla_3408 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $10, 8(%eax) 
        mov        %eax, tknListTail__hla_3408 
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3676:
        addl       $1, %ebx 
        pushl      $0 
        call       parseDwords__hla_3547
        jc         false__hla_3677
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e5e_skipAssertion___hla_3682
        pushl      _0e5f_msg___hla_3680 
        popl       AssertionStr 
        lea        str__hla_3673, %ecx 
        mov        $67, %edi 
        mov        $12, %eax 
        call       Raise__hla_

_0e5e_skipAssertion___hla_3682:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3683
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3683:
false__hla_3677:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3684:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3438
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        movl       $equatesTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3685
        pushl      %eax 
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        je         false__hla_3686
        pushl      $str__hla_3687 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        pushl      $str__hla_3688 
        call       STDERR_PUTS
        lea        str__hla_3444, %ecx 
        mov        $2086, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3686:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3438
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        call       STR_A_CPY
        popl       %edx 
        mov        %eax, 4(%edx) 
        jmp        endif__hla_3685
false__hla_3685:
        pushl      $str__hla_3689 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $2105, %edi 
        mov        $16, %eax 
        call       Raise__hla_
endif__hla_3685:
        jmp        endswitch__hla_3665
case__hla_3690:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3438
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        je         false__hla_3691
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $4, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3408, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3408 
        jmp        endif__hla_3691
false__hla_3691:
        pushl      $str__hla_3692 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $2146, %edi 
        mov        $16, %eax 
        call       Raise__hla_
endif__hla_3691:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3693:
        addl       $1, %ebx 
        pushl      $0 
        call       parseLWords__hla_3594
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e6e_skipAssertion___hla_3698
        pushl      _0e6f_msg___hla_3696 
        popl       AssertionStr 
        lea        str__hla_3673, %ecx 
        mov        $67, %edi 
        mov        $12, %eax 
        call       Raise__hla_

_0e6e_skipAssertion___hla_3698:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3699
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3699:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3700:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3438
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3701
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $2, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        movb       $0, 20(%eax) 
        jmp        endif__hla_3701
false__hla_3701:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3702
        pushl      $str__hla_3703 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $2226, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3702:
        orb        $2, 21(%ecx) 
endif__hla_3701:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3704:
        addl       $1, %ebx 
        pushl      $0 
        call       parseQWords__hla_3556
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e79_skipAssertion___hla_3709
        pushl      _0e7a_msg___hla_3707 
        popl       AssertionStr 
        lea        str__hla_3673, %ecx 
        mov        $67, %edi 
        mov        $12, %eax 
        call       Raise__hla_

_0e79_skipAssertion___hla_3709:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3710
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3710:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3711:
        pushl      $17 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $6, 8(%eax) 
        mov        %eax, tknListTail__hla_3408 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 13(%ecx) 
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3712:
        call       emitDummy__hla_3650
        movb       $2, currentSection 
        mov        lastTailPtr__hla_3409, %eax 
        mov        tknListTail__hla_3408, %ecx 
        mov        %ecx, (%eax) 
        movl       $dataListTail__hla_3411, lastTailPtr__hla_3409 
        mov        dataListTail__hla_3411, %eax 
        mov        %eax, tknListTail__hla_3408 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $12, 8(%eax) 
        mov        %eax, tknListTail__hla_3408 
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3713:
        addl       $1, %ebx 
        pushl      $0 
        call       parseTBytes__hla_3574
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e82_skipAssertion___hla_3718
        pushl      _0e83_msg___hla_3716 
        popl       AssertionStr 
        lea        str__hla_3673, %ecx 
        mov        $67, %edi 
        mov        $12, %eax 
        call       Raise__hla_

_0e82_skipAssertion___hla_3718:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3719
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3719:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3720:
        addl       $1, %ebx 
        mov        (%ebx), %al 
        cmpb       $98, %al 
        jne        false__hla_3721
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $7, 8(%eax) 
        mov        %eax, tknListTail__hla_3408 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        je         false__hla_3722
        pushl      $str__hla_3723 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $2395, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3722:
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $1, 13(%ecx) 
        jmp        endif__hla_3721
false__hla_3721:
        cmpb       $119, %al 
        jne        false__hla_3724
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $8, 8(%eax) 
        mov        %eax, tknListTail__hla_3408 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        je         false__hla_3725
        pushl      $str__hla_3726 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $2428, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3725:
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $2, 13(%ecx) 
        jmp        endif__hla_3721
false__hla_3724:
        cmpb       $100, %al 
        jne        false__hla_3727
        pushl      $25 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $9, 8(%eax) 
        mov        %eax, tknListTail__hla_3408 
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 17(%ecx) 
        call       skipSpaces2__hla_3438
        cmpb       $44, (%ebx) 
        je         false__hla_3728
        pushl      $str__hla_3729 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $2461, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3728:
        addl       $1, %ebx 
        call       EvalExpr__hla_3511
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 21(%ecx) 
        movl       $4, 13(%ecx) 
        jmp        endif__hla_3721
false__hla_3727:
        call       unknownStmt__hla_3465
endif__hla_3721:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3730:
        call       emitDummy__hla_3650
        movb       $3, currentSection 
        mov        lastTailPtr__hla_3409, %eax 
        mov        tknListTail__hla_3408, %ecx 
        mov        %ecx, (%eax) 
        movl       $bssListTail__hla_3412, lastTailPtr__hla_3409 
        mov        bssListTail__hla_3412, %eax 
        mov        %eax, tknListTail__hla_3408 
        pushl      $13 
        call       MEM_ALLOC1
        mov        tknListTail__hla_3408, %ecx 
        mov        %eax, 4(%ecx) 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        movb       $13, 8(%eax) 
        mov        %eax, tknListTail__hla_3408 
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3731:
        addl       $1, %ebx 
        pushl      $0 
        call       parseWords__hla_3536
        subl       $17, %eax 
        mov        (%eax), %ecx 
        cmpl       $0, %ecx 
        jne        _0e94_skipAssertion___hla_3736
        pushl      _0e95_msg___hla_3734 
        popl       AssertionStr 
        lea        str__hla_3673, %ecx 
        mov        $67, %edi 
        mov        $12, %eax 
        call       Raise__hla_

_0e94_skipAssertion___hla_3736:
        cmpb       $2, 8(%ecx) 
        jne        false__hla_3737
        pushl      %eax 
        call       coalesce__hla_3612
false__hla_3737:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3738:
        addl       $1, %ebx 
        call       skipSpaces2__hla_3438
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3739
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $1, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %ecx 
        mov        %ecx, 4(%eax) 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
        jmp        endif__hla_3739
false__hla_3739:
        mov        4(%eax), %ecx 
        testb      $1, 21(%ecx) 
        jz         false__hla_3740
        mov        8(%eax), %eax 
        pushl      $str__hla_3741 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTS
        pushl      $str__hla_3742 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $2605, %edi 
        mov        $16, %eax 
        call       Raise__hla_
        jmp        endif__hla_3740
false__hla_3740:
        testb      $8, 21(%ecx) 
        jz         false__hla_3743
        orb        $2, 21(%ecx) 
        jmp        endif__hla_3743
false__hla_3743:
        orb        $1, 21(%ecx) 
endif__hla_3743:
endif__hla_3740:
        movl       %ecx, %eax 
        mov        currentSection, %cl 
        mov        %cl, 20(%eax) 
endif__hla_3739:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
case__hla_3744:
        call       skipToEoln__hla_3417
        jmp        endswitch__hla_3665
default__hla_3665:
        call       unknownStmt__hla_3465
endswitch__hla_3665:
        jmp        endif__hla_3664
false__hla_3664:
        cmpb       $58, %al 
        jne        false__hla_3745
        addl       $1, %ebx 
        call       skipSpaces2__hla_3438
        pushl      -8(%ebp) 
        call       grabID__hla_3450
        pushl      $17 
        call       MEM_ALLOC1
        movl       %eax, %edx 
        pushl      -8(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        call *     4(%edi) 
        cmpl       $0, 4(%eax) 
        jne        false__hla_3746
        movl       %eax, %ecx 
        pushl      $24 
        call       MEM_ALLOC1
        mov        %eax, 4(%ecx) 
        movb       $8, 21(%eax) 
        movl       $0, 12(%eax) 
        movl       $0, (%eax) 
        mov        8(%ecx), %edx 
        mov        %edx, 4(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        movb       $0, 22(%eax) 
        movl       $0, 16(%eax) 
        movl       %ecx, %eax 
        jmp        endif__hla_3746
false__hla_3746:
        mov        4(%eax), %ecx 
        testb      $8, 21(%ecx) 
        jz         false__hla_3747
        pushl      $str__hla_3748 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3749 
        call       STDERR_PUTS
        pushl      lineNumber__hla_3407 
        call       STDERR_PUTU32
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $2694, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3747:
        testb      $1, 21(%ecx) 
        jz         false__hla_3750
        andb       $254, 21(%ecx) 
        orb        $2, 21(%ecx) 
false__hla_3750:
        orb        $8, 21(%ecx) 
        mov        currentSection, %dl 
        mov        %dl, 20(%ecx) 
        movb       $0, 22(%ecx) 
        movl       $0, 16(%ecx) 
endif__hla_3746:
        movl       %eax, %edx 
        pushl      $17 
        call       MEM_ALLOC1
        movb       $3, 8(%eax) 
        mov        %edx, 13(%eax) 
        mov        tknListTail__hla_3408, %ecx 
        mov        %ecx, (%eax) 
        movl       $0, 4(%eax) 
        mov        %eax, 4(%ecx) 
        mov        %eax, tknListTail__hla_3408 
        call       skipToEoln__hla_3417
        jmp        endif__hla_3664
false__hla_3745:
        lea        10(%ebx), %ecx 
        cmpl       end_source__hla_3413, %ecx 
        jna        false__hla_3751
        call       unknownStmt__hla_3465
        jmp        endif__hla_3751
false__hla_3751:
        cmpb       $106, %al 
        jne        false__hla_3752
        mov        1(%ebx), %eax 
        movl       %eax, %edx 
        bswap      %edx 
        cmpb       $32, %ah 
        jne        false__hla_3753
        cmpb       $97, %al 
        je         ja_instr__hla_3754
        cmpb       $98, %al 
        je         jb_instr__hla_3755
        cmpb       $99, %al 
        je         jc_instr__hla_3756
        cmpb       $101, %al 
        je         je_instr__hla_3757
        cmpb       $103, %al 
        je         jg_instr__hla_3758
        cmpb       $108, %al 
        je         jl_instr__hla_3759
        cmpb       $111, %al 
        je         jo_instr__hla_3760
        cmpb       $112, %al 
        je         jp_instr__hla_3761
        cmpb       $115, %al 
        je         js_instr__hla_3762
        cmpb       $122, %al 
        je         jz_instr__hla_3763
        call       unknownStmt__hla_3465
        jmp        Done__hla_3764

jnbe_instr__hla_3765:
        addl       $2, %ebx 

ja_instr__hla_3754:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $119, 29(%eax) 
        movw       $34575, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jnae_instr__hla_3766:
        addl       $2, %ebx 

jb_instr__hla_3755:

jc_instr__hla_3756:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $114, 29(%eax) 
        movw       $33295, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

je_instr__hla_3757:

jz_instr__hla_3763:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $116, 29(%eax) 
        movw       $33807, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jnle_instr__hla_3767:
        addl       $2, %ebx 

jg_instr__hla_3758:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $127, 29(%eax) 
        movw       $36623, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jnge_instr__hla_3768:
        addl       $2, %ebx 

jl_instr__hla_3759:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $124, 29(%eax) 
        movw       $35855, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jo_instr__hla_3760:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $112, 29(%eax) 
        movw       $32783, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jpe_instr__hla_3769:
        addl       $1, %ebx 

jp_instr__hla_3761:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $122, 29(%eax) 
        movw       $35343, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

js_instr__hla_3762:
        addl       $2, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $120, 29(%eax) 
        movw       $34831, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764
        jmp        endif__hla_3753
false__hla_3753:
        cmpb       $32, %dh 
        jne        false__hla_3770
        cmpw       $28781, %ax 
        je         jmp_instr__hla_3771
        cmpw       $25953, %ax 
        je         jae_instr__hla_3772
        cmpw       $25954, %ax 
        je         jbe_instr__hla_3773
        cmpw       $25959, %ax 
        je         jge_instr__hla_3774
        cmpw       $25964, %ax 
        je         jle_instr__hla_3775
        cmpw       $24942, %ax 
        je         jna_instr__hla_3776
        cmpw       $25198, %ax 
        je         jnb_instr__hla_3777
        cmpw       $25454, %ax 
        je         jnc_instr__hla_3778
        cmpw       $25966, %ax 
        je         jne_instr__hla_3779
        cmpw       $26478, %ax 
        je         jng_instr__hla_3780
        cmpw       $27758, %ax 
        je         jnl_instr__hla_3781
        cmpw       $28526, %ax 
        je         jno_instr__hla_3782
        cmpw       $28782, %ax 
        je         jnp_instr__hla_3783
        cmpw       $29550, %ax 
        je         jns_instr__hla_3784
        cmpw       $31342, %ax 
        je         jnz_instr__hla_3785
        cmpw       $25968, %ax 
        je         jpe_instr__hla_3769
        cmpw       $28528, %ax 
        je         jpo_instr__hla_3786
        call       unknownStmt__hla_3465
        jmp        Done__hla_3764

jmp_instr__hla_3771:
        pushl      $32 
        call       initStmt__hla_3620
        movb       $18, 8(%eax) 
        movb       $235, 29(%eax) 
        movb       $233, 30(%eax) 
        movb       $1, 31(%eax) 
        addl       $3, %ebx 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jnc_instr__hla_3778:

jnb_instr__hla_3777:

jae_instr__hla_3772:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $115, 29(%eax) 
        movw       $33551, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jna_instr__hla_3776:

jbe_instr__hla_3773:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $118, 29(%eax) 
        movw       $34319, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jnl_instr__hla_3781:

jge_instr__hla_3774:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $125, 29(%eax) 
        movw       $36111, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jng_instr__hla_3780:

jle_instr__hla_3775:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $126, 29(%eax) 
        movw       $36367, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jne_instr__hla_3779:

jnz_instr__hla_3785:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $117, 29(%eax) 
        movw       $34063, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jno_instr__hla_3782:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $113, 29(%eax) 
        movw       $33039, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jnp_instr__hla_3783:

jpo_instr__hla_3786:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $123, 29(%eax) 
        movw       $35599, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764

jns_instr__hla_3784:
        addl       $3, %ebx 
        pushl      $33 
        call       initStmt__hla_3620
        movb       $16, 8(%eax) 
        movb       $121, 29(%eax) 
        movw       $35087, 30(%eax) 
        movb       $1, 32(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764
        jmp        endif__hla_3753
false__hla_3770:
        cmpb       $32, %dl 
        jne        false__hla_3787
        cmpl       $543514990, %eax 
        je         jnae_instr__hla_3766
        cmpl       $543515246, %eax 
        je         jnbe_instr__hla_3765
        cmpl       $543516526, %eax 
        je         jnge_instr__hla_3768
        cmpl       $543517806, %eax 
        je         jnle_instr__hla_3767
        cmpl       $544897123, %eax 
        je         jcxz_instr__hla_3788
        call       unknownStmt__hla_3465
        jmp        Done__hla_3764

jcxz_instr__hla_3788:
        addl       $4, %ebx 
        pushl      $31 
        call       initStmt__hla_3620
        movb       $15, 8(%eax) 
        movw       $58215, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764
        jmp        endif__hla_3753
false__hla_3787:
        cmpl       $2054710117, %eax 
        jne        false__hla_3789
        cmpb       $32, 5(%ebx) 
        jne        false__hla_3789
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3620
        movb       $14, 8(%eax) 
        movb       $227, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764
        jmp        endif__hla_3753
false__hla_3789:
        call       unknownStmt__hla_3465
endif__hla_3753:
        jmp        endif__hla_3751
false__hla_3752:
        cmpb       $108, %al 
        jne        false__hla_3791
        lea        7(%ebx), %ecx 
        cmpl       end_source__hla_3413, %ecx 
        jnb        false__hla_3791
        cmpb       $111, 1(%ebx) 
        jne        false__hla_3791
        cmpb       $111, 2(%ebx) 
        jne        false__hla_3791
        cmpb       $112, 3(%ebx) 
        jne        false__hla_3791
        mov        4(%ebx), %al 
        cmpb       $32, %al 
        je         L3797__hla_
        cmpb       $101, %al 
        jne        L3800__hla_
        cmpb       $32, 5(%ebx) 
        je         L3797__hla_
L3800__hla_:
        cmpb       $122, %al 
        jne        L3801__hla_
        cmpb       $32, 5(%ebx) 
        je         L3797__hla_
L3801__hla_:
        mov        5(%ebx), %ah 
        cmpb       $110, %al 
        jne        false__hla_3791
        cmpb       $101, %ah 
        jne        L3804__hla_
        cmpb       $32, 6(%ebx) 
        je         L3803__hla_
L3804__hla_:
        cmpb       $122, %ah 
        jne        false__hla_3791
        cmpb       $32, 6(%ebx) 
        jne        false__hla_3791
L3803__hla_:
L3797__hla_:
        cmpb       $32, %al 
        jne        false__hla_3806
        addl       $4, %ebx 
        pushl      $30 
        call       initStmt__hla_3620
        movb       $14, 8(%eax) 
        movb       $226, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764
        jmp        endif__hla_3806
false__hla_3806:
        cmpb       $101, %al 
        je         L3808__hla_
        cmpb       $122, %al 
        jne        false__hla_3807
L3808__hla_:
        addl       $5, %ebx 
        pushl      $30 
        call       initStmt__hla_3620
        movb       $14, 8(%eax) 
        movb       $225, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764
        jmp        endif__hla_3806
false__hla_3807:
        cmpb       $110, %al 
        jne        false__hla_3809
        cmpb       $101, %ah 
        je         L3811__hla_
        cmpb       $122, %ah 
        jne        false__hla_3809
L3811__hla_:
        addl       $6, %ebx 
        pushl      $30 
        call       initStmt__hla_3620
        movb       $14, 8(%eax) 
        movb       $224, 29(%eax) 
        call       getDisp__hla_3642
        jmp        Done__hla_3764
        jmp        endif__hla_3806
false__hla_3809:
        call       skipToEoln__hla_3417
endif__hla_3806:
        jmp        endif__hla_3751
false__hla_3791:
        cmpb       $99, %al 
        jne        false__hla_3812
        addl       $5, %ebx 
        cmpl       end_source__hla_3413, %ebx 
        jnb        false__hla_3812
        cmpb       $97, -4(%ebx) 
        jne        false__hla_3812
        cmpb       $108, -3(%ebx) 
        jne        false__hla_3812
        cmpb       $108, -2(%ebx) 
        jne        false__hla_3812
        cmpb       $32, -1(%ebx) 
        jne        false__hla_3812
        pushl      $30 
        call       initStmt__hla_3620
        movb       $17, 8(%eax) 
        movb       $232, 29(%eax) 
        call       getDisp__hla_3642
        jmp        endif__hla_3751
false__hla_3812:
        call       unknownStmt__hla_3465
endif__hla_3751:

Done__hla_3764:
endif__hla_3664:
        jmp        forever__hla_3659
exitloop__hla_3658:

        call       emitDummy__hla_3650
xlexer__hla_:
        pushl      %edi 
        pushl      %ecx 
        mov        16(%ebp), %edi 
        mov        -5136(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        12(%ebp), %edi 
        mov        -5140(%ebp), %ecx 
        mov        %ecx, (%edi) 
        mov        8(%ebp), %edi 
        mov        -5144(%ebp), %ecx 
        mov        %ecx, (%edi) 
        popl       %ecx 
        popl       %edi 
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
addCOFFsym__hla_3823:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        pushl      numCOFFsyms__hla_3358 
        imul       $18, numCOFFsyms__hla_3358, %ebx 
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        imul       $18, %eax, %eax 
        addl       %ebx, %eax 
        cmpl       coffSymSize__hla_3359, %eax 
        jna        false__hla_3826
        shll       $1, coffSymSize__hla_3359 
        pushl      COFFsyms__hla_3357 
        pushl      coffSymSize__hla_3359 
        call       MEM_REALLOC1
        mov        %eax, COFFsyms__hla_3357 
false__hla_3826:
        addl       COFFsyms__hla_3357, %ebx 
        mov        32(%ebp), %esi 
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        cmpl       $8, %eax 
        jnbe       false__hla_3827
        movl       $0, (%ebx) 
        movl       $0, 4(%ebx) 
        lea        (%ebx), %edi 
        cld
        rep movsb
        jmp        endif__hla_3827
false__hla_3827:
        mov        strTblOffset__hla_3367, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3367 
        cmpl       strTblSize__hla_3368, %eax 
        jna        false__hla_3828
        pushl      %eax 
        shll       $1, strTblSize__hla_3368 
        pushl      stringTable__hla_3366 
        pushl      strTblSize__hla_3368 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3366 
        popl       %eax 
false__hla_3828:
        movl       %edx, %edi 
        addl       stringTable__hla_3366, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        movl       $0, (%ebx) 
        mov        %edx, 4(%ebx) 
endif__hla_3827:
        mov        28(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        24(%ebp), %ax 
        mov        %ax, 12(%ebx) 
        mov        20(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 16(%ebx) 
        movzbl     12(%ebp), %eax 
        mov        %al, 17(%ebx) 
        testb      %al, %al 
        je         false__hla_3829
        mov        8(%ebp), %esi 
        imul       $18, numCOFFsyms__hla_3358, %edi 
        addl       $18, %edi 
        addl       COFFsyms__hla_3357, %edi 
        imul       $18, %eax, %ecx 
        cld
        rep movsb
false__hla_3829:
        movzbl     12(%ebp), %eax 
        addl       $1, %eax 
        addl       %eax, numCOFFsyms__hla_3358 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddCOFFsym__hla_3823__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
addELFsym__hla_3835:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cld
        imul       $16, numELFsyms__hla_3361, %ebx 
        lea        16(%ebx), %eax 
        cmpl       elfSymSize__hla_3362, %eax 
        jna        false__hla_3838
        shll       $1, elfSymSize__hla_3362 
        pushl      ELFsyms__hla_3360 
        pushl      elfSymSize__hla_3362 
        call       MEM_REALLOC1
        mov        %eax, ELFsyms__hla_3360 
false__hla_3838:
        addl       ELFsyms__hla_3360, %ebx 
        xorl       %edx, %edx 
        mov        28(%ebp), %esi 
        cmpl       $0, %esi 
        je         false__hla_3839
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3367, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3367 
        cmpl       strTblSize__hla_3368, %eax 
        jna        false__hla_3840
        shll       $1, strTblSize__hla_3368 
        pushl      stringTable__hla_3366 
        pushl      strTblSize__hla_3368 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3366 
false__hla_3840:
        movl       %edx, %edi 
        addl       stringTable__hla_3366, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
false__hla_3839:
        mov        %edx, (%ebx) 
        mov        24(%ebp), %eax 
        mov        %eax, 4(%ebx) 
        mov        20(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        16(%ebp), %al 
        mov        %al, 12(%ebx) 
        mov        8(%ebp), %al 
        andb       $3, %al 
        mov        %al, 13(%ebx) 
        mov        12(%ebp), %ax 
        mov        %ax, 14(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xaddELFsym__hla_3835__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
addMachoSym__hla_3846:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        imul       $12, numMachoSyms__hla_3365, %ebx 
        lea        12(%ebx), %eax 
        cmpl       MachoSymSize__hla_3364, %eax 
        jna        false__hla_3849
        shll       $1, MachoSymSize__hla_3364 
        pushl      MachoSyms__hla_3363 
        pushl      MachoSymSize__hla_3364 
        call       MEM_REALLOC1
        mov        %eax, MachoSyms__hla_3363 
false__hla_3849:
        addl       MachoSyms__hla_3363, %ebx 
        mov        20(%ebp), %esi 
        cmpl       $0, %esi 
        jne        _0f0a_skipAssertion___hla_3854
        pushl      _0f0b_msg___hla_3852 
        popl       AssertionStr 
        lea        str__hla_3673, %ecx 
        mov        $67, %edi 
        mov        $12, %eax 
        call       Raise__hla_

_0f0a_skipAssertion___hla_3854:
        pushl      %esi 
        call       STR_LENGTH
        movl       %eax, %ecx 
        mov        strTblOffset__hla_3367, %edx 
        lea        1(%edx,%ecx,1), %eax 
        mov        %eax, strTblOffset__hla_3367 
        cmpl       strTblSize__hla_3368, %eax 
        jna        false__hla_3855
        shll       $1, strTblSize__hla_3368 
        pushl      stringTable__hla_3366 
        pushl      strTblSize__hla_3368 
        call       MEM_REALLOC1
        mov        %eax, stringTable__hla_3366 
false__hla_3855:
        movl       %edx, %edi 
        addl       stringTable__hla_3366, %edi 
        cld
        rep movsb
        movb       $0, (%edi) 
        mov        %edx, (%ebx) 
        mov        16(%ebp), %eax 
        mov        %eax, 8(%ebx) 
        mov        12(%ebp), %al 
        mov        %al, 4(%ebx) 
        mov        8(%ebp), %al 
        mov        %al, 5(%ebx) 
        movw       $0, 6(%ebx) 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xaddMachoSym__hla_3846__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
buildRaw__hla_3861:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %edi 
        pushl      %esi 
        mov        24(%ebp), %esi 
        cmpb       $0, 8(%ebp) 
        jne        false__hla_3864
        mov        20(%ebp), %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_3865
        mov        %eax, (%esi) 
        addl       $10, %esi 
false__hla_3865:
false__hla_3864:
        mov        32(%ebp), %ebx 
        mov        16(%ebp), %edi 
        jmp        continue__hla_3866
while__hla_3866:
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3868
        jmp *      jmpTbl__hla_3868(,%eax,4) 
case__hla_3869:
        jmp        endswitch__hla_3868
case__hla_3870:
        mov        9(%ebx), %ecx 
        movl       %ecx, %edx 
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        subl       %edx, %ecx 
        jz         false__hla_3871
        cmpb       $1, 12(%ebp) 
        jne        false__hla_3872
        jmp        continue__hla_3873
while__hla_3873:
        mov        $2401421, %eax 
        stosl
        mov        $0, %ax 
        stosw
        stosb
        subl       $7, %ecx 
continue__hla_3873:
        cmpl       $7, %ecx 
        jae        while__hla_3873
exitloop__hla_3873:

        cmpl       $6, %ecx 
        jne        false__hla_3875
        mov        $39821, %eax 
        stosl
        mov        $0, %ax 
        stosw
false__hla_3875:
        cmpl       $5, %ecx 
        jne        false__hla_3876
        mov        $2385037, %eax 
        stosl
        mov        $144, %al 
        stosb
false__hla_3876:
        cmpl       $4, %ecx 
        jne        false__hla_3877
        mov        $2385037, %eax 
        stosl
false__hla_3877:
        cmpl       $3, %ecx 
        jne        false__hla_3878
        mov        $18829, %ax 
        stosw
        mov        $0, %al 
        stosb
false__hla_3878:
        cmpl       $2, %ecx 
        jne        false__hla_3879
        mov        $65419, %ax 
        stosw
false__hla_3879:
        cmpl       $1, %ecx 
        jne        false__hla_3880
        mov        $144, %al 
        stosb
false__hla_3880:
        jmp        endif__hla_3872
false__hla_3872:
        xorl       %eax, %eax 
        cld
        rep stosb
endif__hla_3872:
false__hla_3871:
        jmp        endswitch__hla_3868
case__hla_3881:
        cmpb       $3, 12(%ebp) 
        je         false__hla_3882
        pushl      $str__hla_3883 
        call       STDERR_PUTS
        lea        str__hla_3444, %ecx 
        mov        $3795, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3882:
        jmp        endswitch__hla_3868
case__hla_3884:
        pushl      %esi 
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3885
        lea        17(%ebx), %esi 
        cld
        rep movsb
false__hla_3885:
        popl       %esi 
        jmp        endswitch__hla_3868
case__hla_3886:
        cmpb       $1, 12(%ebp) 
        je         false__hla_3887
        pushl      $str__hla_3888 
        call       STDERR_PUTS
        lea        str__hla_3444, %ecx 
        mov        $3825, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3887:
        jmp        endswitch__hla_3868
case__hla_3889:
        cmpb       $2, 12(%ebp) 
        je         false__hla_3890
        pushl      $str__hla_3891 
        call       STDERR_PUTS
        lea        str__hla_3444, %ecx 
        mov        $3840, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_3890:
        jmp        endswitch__hla_3868
case__hla_3892:
        mov        17(%ebx), %ecx 
        mov        21(%ebx), %eax 
        cmpl       $2, 13(%ebx) 
        jb         byteDup__hla_3893
        ja         dwordDup__hla_3894
        cld
        rep stosw
        jmp        done__hla_3895

byteDup__hla_3893:
        cld
        rep stosb
        jmp        done__hla_3895

dwordDup__hla_3894:
        cld
        rep stosl

done__hla_3895:
        jmp        endswitch__hla_3868
case__hla_3896:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3868
case__hla_3897:
        mov        29(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        stosb
        jmp        endswitch__hla_3868
case__hla_3898:
        cmpb       $1, 32(%ebx) 
        jne        false__hla_3899
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3899
false__hla_3899:
        mov        30(%ebx), %ax 
        stosw
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3900
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        testb      $1, 21(%eax) 
        jnz        L3902__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_3901
L3902__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3903
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $2, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3903
false__hla_3903:
        cmpb       $1, %dl 
        jnae       false__hla_3904
        cmpb       $2, %dl 
        jnbe       false__hla_3904
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3903
false__hla_3904:
        cmpb       $3, %dl 
        jne        false__hla_3906
        mov        9(%ebx), %edx 
        addl       $2, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $6, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3903
false__hla_3906:
        pushl      $str__hla_3907 
        call       STDERR_PUTS
endif__hla_3903:
false__hla_3901:
false__hla_3900:
endif__hla_3899:
        jmp        endswitch__hla_3868
case__hla_3908:
        cmpb       $1, 31(%ebx) 
        jne        false__hla_3909
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosb
        jmp        endif__hla_3909
false__hla_3909:
        mov        30(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3910
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3912__hla_
        cmpb       12(%ebp), %dl 
        jne        L3912__hla_
        testb      %dh, %dh 
        je         false__hla_3911
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3911
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3911
L3912__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3916
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3916
false__hla_3916:
        cmpb       $1, %dl 
        jnae       false__hla_3917
        cmpb       $2, %dl 
        jnbe       false__hla_3917
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $2, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        testb      $1, 21(%eax) 
        jz         false__hla_3919
        movl       $-4, -4(%edi) 
false__hla_3919:
        jmp        endif__hla_3916
false__hla_3917:
        cmpb       $3, %dl 
        jne        false__hla_3920
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3916
false__hla_3920:
        pushl      $str__hla_3907 
        call       STDERR_PUTS
endif__hla_3916:
false__hla_3911:
false__hla_3910:
endif__hla_3909:
        jmp        endswitch__hla_3868
case__hla_3921:
        mov        29(%ebx), %al 
        stosb
        mov        13(%ebx), %eax 
        addl       21(%ebx), %eax 
        stosl
        cmpl       $0, 17(%ebx) 
        je         false__hla_3922
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L3924__hla_
        cmpb       12(%ebp), %dl 
        jne        L3924__hla_
        testb      %dh, %dh 
        je         false__hla_3923
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_3923
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_3923
L3924__hla_:
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3928
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        addl       $1, %eax 
        mov        %eax, (%esi) 
        movw       $20, 8(%esi) 
        addl       $10, %esi 
        mov        21(%ebx), %eax 
        addl       13(%ebx), %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3928
false__hla_3928:
        cmpb       $1, %dl 
        jnae       false__hla_3929
        cmpb       $2, %dl 
        jnbe       false__hla_3929
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        21(%eax), %dl 
        mov        8(%eax), %eax 
        shll       $8, %eax 
        orl        $2, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        movl       $-4, -4(%edi) 
        jmp        endif__hla_3928
false__hla_3929:
        cmpb       $3, %dl 
        jne        false__hla_3931
        mov        9(%ebx), %edx 
        addl       $1, %edx 
        mov        %edx, (%esi) 
        mov        8(%eax), %eax 
        orl        $218103808, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        9(%ebx), %eax 
        addl       $5, %eax 
        negl       %eax 
        mov        %eax, -4(%edi) 
        jmp        endif__hla_3928
false__hla_3931:
        pushl      $str__hla_3907 
        call       STDERR_PUTS
endif__hla_3928:
false__hla_3923:
false__hla_3922:
        jmp        endswitch__hla_3868
case__hla_3932:
        cmpl       $0, 13(%ebx) 
        je         false__hla_3933
        mov        8(%ebp), %dl 
        testb      %dl, %dl 
        jne        false__hla_3934
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %eax 
        mov        %eax, 4(%esi) 
        mov        9(%ebx), %eax 
        mov        %eax, (%esi) 
        movw       $6, 8(%esi) 
        addl       $10, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3934
false__hla_3934:
        cmpb       $1, %dl 
        jnae       false__hla_3935
        cmpb       $2, %dl 
        jnbe       false__hla_3935
        mov        9(%ebx), %edx 
        mov        %edx, (%esi) 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        8(%eax), %edx 
        shll       $8, %edx 
        orl        $1, %edx 
        mov        %edx, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3934
false__hla_3935:
        cmpb       $3, %dl 
        jne        false__hla_3937
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        9(%ebx), %edx 
        subl       28(%ebp), %edx 
        testb      $1, 21(%eax) 
        jnz        L3939__hla_
        cmpl       $0, 17(%ebx) 
        jne        false__hla_3938
L3939__hla_:
        mov        %edx, (%esi) 
        testb      $1, 21(%eax) 
        jz         false__hla_3940
        mov        8(%eax), %eax 
        orl        $201326592, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        17(%ebx), %eax 
        stosl
        jmp        endif__hla_3940
false__hla_3940:
        movzbl     20(%eax), %eax 
        cmpb       $1, %al 
        jne        false__hla_3941
        mov        $1, %al 
        jmp        endif__hla_3941
false__hla_3941:
        cmpb       $2, %al 
        jne        false__hla_3942
        mov        $2, %al 
        jmp        endif__hla_3941
false__hla_3942:
        cmpb       $3, %al 
        jne        false__hla_3943
        mov        $3, %al 
        jmp        endif__hla_3941
false__hla_3943:
        pushl      $str__hla_3944 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $4355, %edi 
        mov        $8, %eax 
        call       Raise__hla_
endif__hla_3941:
        orl        $67108864, %eax 
        mov        %eax, 4(%esi) 
        addl       $8, %esi 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        12(%eax), %eax 
        stosl
endif__hla_3940:
        jmp        endif__hla_3938
false__hla_3938:
        mov        %edx, (%esi) 
        orl        $-1610612736, (%esi) 
        mov        12(%eax), %eax 
        mov        %eax, 4(%esi) 
        addl       17(%ebx), %eax 
        stosl
        addl       $8, %esi 
endif__hla_3938:
        jmp        endif__hla_3934
false__hla_3937:
        pushl      $str__hla_3907 
        call       STDERR_PUTS
endif__hla_3934:
false__hla_3933:
        jmp        endswitch__hla_3868
case__hla_3945:
        mov        13(%ebx), %ecx 
        testl      %ecx, %ecx 
        je         false__hla_3946
        xorl       %eax, %eax 
        cld
        rep stosb
false__hla_3946:
        jmp        endswitch__hla_3868
default__hla_3868:
        pushl      $str__hla_3947 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
endswitch__hla_3868:
        mov        4(%ebx), %ebx 
continue__hla_3866:
        cmpl       $0, %ebx 
        jne        while__hla_3866
exitloop__hla_3866:

        popl       %esi 
        popl       %edi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xbuildRaw__hla_3861__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $28
sectionPass__hla_3958:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        8(%ebp), %ecx 
        mov        16(%ebp), %ebx 
        jmp        continue__hla_3961
while__hla_3961:
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_3963
        jmp *      jmpTbl__hla_3963(,%eax,4) 
case__hla_3964:
        jmp        endswitch__hla_3963
case__hla_3965:
        movb       $1, currentSection 
        jmp        endswitch__hla_3963
case__hla_3966:
        movb       $2, currentSection 
        jmp        endswitch__hla_3963
case__hla_3967:
        movb       $3, currentSection 
        jmp        endswitch__hla_3963
case__hla_3968:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        jmp        endswitch__hla_3963
case__hla_3969:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3963
case__hla_3970:
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        %ecx, 12(%eax) 
        mov        currentSection, %dl 
        mov        %dl, 20(%eax) 
        jmp        endswitch__hla_3963
case__hla_3971:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_3963
case__hla_3972:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_3963
case__hla_3973:
        addl       $2, %ecx 
        mov        17(%ebx), %eax 
        cmpl       $0, %eax 
        je         false__hla_3974
        mov        4(%eax), %edx 
        cmpl       $0, %edx 
        je         false__hla_3975
        mov        21(%edx), %dl 
        testb      $1, %dl 
        jz         false__hla_3976
        pushl      $str__hla_3977 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        pushl      $str__hla_3978 
        call       STDERR_PUTS
        call       printLineNumberChain
        lea        str__hla_3444, %ecx 
        mov        $4632, %edi 
        mov        $8, %eax 
        call       Raise__hla_
false__hla_3976:
false__hla_3975:
false__hla_3974:
        jmp        endswitch__hla_3963
case__hla_3979:
        addl       $1, %ecx 
        mov        12(%ebp), %eax 
        addl       %eax, %ecx 
        mov        %al, 32(%ebx) 
        cmpb       $1, %al 
        jna        false__hla_3980
        addl       $1, %ecx 
false__hla_3980:
        jmp        endswitch__hla_3963
case__hla_3981:
        mov        12(%ebp), %eax 
        lea        1(%ecx,%eax,1), %ecx 
        mov        %al, 31(%ebx) 
        jmp        endswitch__hla_3963
case__hla_3982:
        addl       $3, %ecx 
        jmp        endswitch__hla_3963
case__hla_3983:
        addl       $5, %ecx 
        jmp        endswitch__hla_3963
case__hla_3984:
        addl       $4, %ecx 
        jmp        endswitch__hla_3963
default__hla_3963:
        pushl      $str__hla_3947 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $4706, %edi 
        mov        $16, %eax 
        call       Raise__hla_
endswitch__hla_3963:
        mov        4(%ebx), %ebx 
continue__hla_3961:
        cmpl       $0, %ebx 
        jne        while__hla_3961
exitloop__hla_3961:

        movl       %ecx, %eax 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xsectionPass__hla_3958__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
firstPass__hla_3955:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        movb       $1, currentSection 
        movl       $0, codeStart__hla_3369 
        pushl      24(%ebp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3369 
        call       sectionPass__hla_3958
        mov        %eax, codeEnd__hla_3370 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3990
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataStart__hla_3371 
        jmp        endif__hla_3990
false__hla_3990:
        movl       $0, dataStart__hla_3371 
endif__hla_3990:
        movb       $2, currentSection 
        pushl      20(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3371 
        call       sectionPass__hla_3958
        mov        %eax, dataEnd__hla_3372 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_3991
        addl       $15, %eax 
        andl       $-16, %eax 
        jmp        endif__hla_3991
false__hla_3991:
        xorl       %eax, %eax 
endif__hla_3991:
        mov        %eax, bssStart__hla_3373 
        movb       $3, currentSection 
        pushl      16(%ebp) 
        pushl      12(%ebp) 
        pushl      %eax 
        call       sectionPass__hla_3958
        mov        %eax, bssEnd__hla_3374 
xfirstPass__hla_3955__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
computeDisplacement__hla_4000:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        mov        12(%ebp), %ecx 
        mov        8(%ebp), %ebx 
        mov        17(%ebx), %eax 
        mov        4(%eax), %edx 
        testb      $9, 21(%edx) 
        jnz        false__hla_4003
        pushl      $str__hla_4004 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        call       printLineNumberChain
        lea        str__hla_3444, %ecx 
        mov        $4835, %edi 
        mov        $8, %eax 
        call       Raise__hla_
false__hla_4003:
        mov        20(%edx), %al 
        mov        21(%edx), %ah 
        andb       $3, %ah 
        testb      %al, %al 
        jne        false__hla_4005
        mov        $1, %eax 
        jmp        endif__hla_4005
false__hla_4005:
        cmpb       $1, %ah 
        jne        false__hla_4006
        mov        $4, %eax 
        jmp        endif__hla_4005
false__hla_4006:
        cmpb       currentSection, %al 
        je         false__hla_4007
        mov        $4, %eax 
        jmp        endif__hla_4005
false__hla_4007:
        mov        12(%edx), %eax 
        subl       %ecx, %eax 
        mov        %eax, 13(%ebx) 
        cmpl       $-128, %eax 
        jnge       false__hla_4008
        cmpl       $127, %eax 
        jnle       false__hla_4008
        mov        $1, %eax 
        jmp        endif__hla_4008
false__hla_4008:
        mov        $4, %eax 
endif__hla_4008:
endif__hla_4005:
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcomputeDisplacement__hla_4000__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
doPhase__hla_4015:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $4, %esp 
        mov        8(%ebp), %ecx 
        mov        20(%ebp), %ebx 
        jmp        continue__hla_4018
while__hla_4018:
        mov        9(%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        %ecx, 9(%ebx) 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_4020
        jmp *      jmpTbl__hla_4020(,%eax,4) 
case__hla_4021:
        jmp        endswitch__hla_4020
case__hla_4022:
        movb       $1, currentSection 
        jmp        endswitch__hla_4020
case__hla_4023:
        movb       $2, currentSection 
        jmp        endswitch__hla_4020
case__hla_4024:
        movb       $3, currentSection 
        jmp        endswitch__hla_4020
case__hla_4025:
        mov        -4(%ebp), %eax 
        cmpl       9(%ebx), %eax 
        je         false__hla_4026
        mov        16(%ebp), %eax 
        movb       $1, (%eax) 
false__hla_4026:
        jmp        endswitch__hla_4020
case__hla_4027:
        mov        13(%ebx), %eax 
        subl       $1, %eax 
        addl       %eax, %ecx 
        notl       %eax 
        andl       %eax, %ecx 
        mov        4(%ebx), %eax 
        cmpl       9(%eax), %ecx 
        je         false__hla_4028
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_4028:
        jmp        endswitch__hla_4020
case__hla_4029:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_4020
case__hla_4030:
        addl       13(%ebx), %ecx 
        jmp        endswitch__hla_4020
case__hla_4031:
        mov        13(%ebx), %eax 
        imull      17(%ebx), %eax 
        addl       %eax, %ecx 
        jmp        endswitch__hla_4020
case__hla_4032:
        addl       $2, %ecx 
        mov        -4(%ebp), %eax 
        addl       $2, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_4000
        jmp        endswitch__hla_4020
case__hla_4033:
        mov        $2, %eax 
        mov        $1, %edx 
        cmpb       $4, 32(%ebx) 
        jne        false__hla_4034
        addl       $3, %edx 
        addl       $4, %eax 
false__hla_4034:
        addl       %eax, %ecx 
        addl       -4(%ebp), %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_4000
        cmpb       %dl, %al 
        je         false__hla_4035
        cmpb       12(%ebp), %al 
        jne        false__hla_4035
        mov        %al, 32(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_4035:
        jmp        endswitch__hla_4020
case__hla_4037:
        addl       $1, %ecx 
        movzbl     31(%ebx), %edx 
        addl       %edx, %ecx 
        mov        -4(%ebp), %eax 
        addl       $1, %eax 
        addl       %edx, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_4000
        cmpb       %dl, %al 
        je         false__hla_4038
        cmpb       12(%ebp), %al 
        jne        false__hla_4038
        mov        12(%ebp), %al 
        mov        %al, 31(%ebx) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_4038:
        jmp        endswitch__hla_4020
case__hla_4040:
        addl       $3, %ecx 
        mov        -4(%ebp), %eax 
        addl       $3, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_4000
        jmp        endswitch__hla_4020
case__hla_4041:
        addl       $5, %ecx 
        mov        -4(%ebp), %eax 
        addl       $5, %eax 
        pushl      %eax 
        pushl      %ebx 
        call       computeDisplacement__hla_4000
        jmp        endswitch__hla_4020
case__hla_4042:
        addl       $4, %ecx 
        jmp        endswitch__hla_4020
default__hla_4020:
        pushl      $str__hla_3947 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $5142, %edi 
        mov        $16, %eax 
        call       Raise__hla_
endswitch__hla_4020:
        mov        4(%ebx), %ebx 
continue__hla_4018:
        cmpl       $0, %ebx 
        jne        while__hla_4018
exitloop__hla_4018:

        mov        20(%ebp), %ebx 
        jmp        continue__hla_4043
while__hla_4043:
        cmpb       $3, 8(%ebx) 
        jne        false__hla_4045
        mov        9(%ebx), %edx 
        mov        13(%ebx), %eax 
        mov        4(%eax), %eax 
        cmpl       12(%eax), %edx 
        je         false__hla_4046
        mov        %edx, 12(%eax) 
        mov        16(%ebp), %edx 
        movb       $1, (%edx) 
false__hla_4046:
false__hla_4045:
        mov        4(%ebx), %ebx 
continue__hla_4043:
        cmpl       $0, %ebx 
        jne        while__hla_4043
exitloop__hla_4043:

xdoPhase__hla_4015__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
dispPhase__hla_3997:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $20, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        movl       $0, -16(%ebp) 
false__hla_4052:
repeat__hla_4052:
        movb       $0, -17(%ebp) 
        movl       $0, codeStart__hla_3369 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      codeStart__hla_3369 
        call       doPhase__hla_4015
        mov        %ecx, codeEnd__hla_3370 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4053
        addl       $15, %ecx 
        andl       $-16, %ecx 
        jmp        endif__hla_4053
false__hla_4053:
        xorl       %ecx, %ecx 
endif__hla_4053:
        mov        %ecx, dataStart__hla_3371 
        pushl      20(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_4015
        mov        %ecx, dataEnd__hla_3372 
        cmpb       $3, 8(%ebp) 
        jne        false__hla_4054
        addl       $15, %ecx 
        andl       $-16, %ecx 
        mov        %ecx, bssStart__hla_3373 
        pushl      16(%ebp) 
        pushl      %ebp 
        addl       $-17, (%esp) 
        pushl      12(%ebp) 
        pushl      %ecx 
        call       doPhase__hla_4015
        mov        %ecx, bssEnd__hla_3374 
false__hla_4054:
        addl       $1, -16(%ebp) 
        cmpl       $16384, -16(%ebp) 
        ja         exitloop__hla_4052
continue__hla_4052:
        cmpb       $0, -17(%ebp) 
        jne        repeat__hla_4052
exitloop__hla_4052:

        mov        -16(%ebp), %eax 
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
xdispPhase__hla_3997__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
cleanupPass__hla_4064:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %esi 
        mov        16(%ebp), %ebx 
        xorl       %esi, %esi 
        jmp        continue__hla_4067
while__hla_4067:
        mov        9(%ebx), %ecx 
        movzbl     8(%ebx), %eax 
        cmpl       $21, %eax 
        jg         default__hla_4069
        jmp *      jmpTbl__hla_4069(,%eax,4) 
case__hla_4070:
        jmp        endswitch__hla_4069
case__hla_4071:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        movb       $1, 22(%eax) 
        movl       %ecx, %edx 
        subl       12(%eax), %edx 
        mov        %edx, 16(%eax) 
        jmp        endswitch__hla_4069
case__hla_4072:
        mov        13(%ebx), %edx 
        mov        4(%edx), %eax 
        mov        %ecx, 12(%eax) 
        testb      $9, 21(%eax) 
        jnz        false__hla_4073
        pushl      $str__hla_4074 
        call       STDERR_PUTS
        pushl      8(%edx) 
        call       STDERR_PUTS
        pushl      $str__hla_4075 
        call       STDERR_PUTS
        call       printLineNumberChain
        lea        str__hla_3444, %ecx 
        mov        $5348, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_4073:
        jmp        endswitch__hla_4069
case__hla_4076:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4078__hla_
        cmpl       $127, %eax 
        jng        false__hla_4077
L4078__hla_:
        pushl      $str__hla_4079 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4080 
        call       STDERR_PUTS
        call       printLineNumberChain
        lea        str__hla_3444, %ecx 
        mov        $5372, %edi 
        mov        $8, %eax 
        call       Raise__hla_
false__hla_4077:
        jmp        endswitch__hla_4069
case__hla_4081:
        mov        13(%ebx), %eax 
        cmpl       $-128, %eax 
        jl         L4083__hla_
        cmpl       $127, %eax 
        jng        false__hla_4082
L4083__hla_:
        pushl      $str__hla_4079 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTI32
        pushl      $str__hla_4080 
        call       STDERR_PUTS
        call       printLineNumberChain
        lea        str__hla_3444, %ecx 
        mov        $5399, %edi 
        mov        $8, %eax 
        call       Raise__hla_
false__hla_4082:
        jmp        endswitch__hla_4069
case__hla_4084:
        cmpb       $4, 32(%ebx) 
        jne        false__hla_4085
        cmpl       $0, 17(%ebx) 
        je         false__hla_4086
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4088__hla_
        cmpb       12(%ebp), %dl 
        je         false__hla_4087
L4088__hla_:
        addl       $1, %esi 
false__hla_4087:
false__hla_4086:
false__hla_4085:
        jmp        endswitch__hla_4069
case__hla_4089:
        cmpb       $4, 31(%ebx) 
        jne        false__hla_4090
        cmpl       $0, 17(%ebx) 
        je         false__hla_4091
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        cmpb       $1, %dh 
        je         L4093__hla_
        cmpb       12(%ebp), %dl 
        jne        L4093__hla_
        testb      %dh, %dh 
        je         false__hla_4092
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4092
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4092
L4093__hla_:
        addl       $1, %esi 
false__hla_4092:
false__hla_4091:
false__hla_4090:
        jmp        endswitch__hla_4069
case__hla_4097:
        cmpl       $0, 17(%ebx) 
        je         false__hla_4098
        mov        17(%ebx), %eax 
        mov        4(%eax), %eax 
        mov        20(%eax), %dl 
        mov        21(%eax), %dh 
        andb       $3, %dh 
        testb      $1, %dh 
        jnz        L4100__hla_
        cmpb       12(%ebp), %dl 
        jne        L4100__hla_
        testb      %dh, %dh 
        je         false__hla_4099
        cmpb       $1, 8(%ebp) 
        jnae       false__hla_4099
        cmpb       $2, 8(%ebp) 
        jnbe       false__hla_4099
L4100__hla_:
        addl       $1, %esi 
false__hla_4099:
false__hla_4098:
        jmp        endswitch__hla_4069
case__hla_4104:
        addl       $1, %esi 
        jmp        endswitch__hla_4069
default__hla_4069:
        pushl      $str__hla_3947 
        call       STDERR_PUTS
        pushl      %eax 
        call       STDERR_PUTU8
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $5522, %edi 
        mov        $16, %eax 
        call       Raise__hla_
endswitch__hla_4069:
        mov        4(%ebx), %ebx 
continue__hla_4067:
        cmpl       $0, %ebx 
        jne        while__hla_4067
exitloop__hla_4067:

        movl       %ecx, %eax 
        movl       %esi, %edx 
        popl       %esi 
        popl       %ecx 
        popl       %ebx 
xcleanupPass__hla_4064__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
finalPass__hla_4061:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $8, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      20(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4064
        mov        %eax, codeEnd__hla_3370 
        mov        %edx, numCodeRelocs 
        pushl      16(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4064
        mov        %eax, dataEnd__hla_3372 
        mov        %edx, numDataRelocs 
        pushl      12(%ebp) 
        pushl      $3 
        pushl      8(%ebp) 
        call       cleanupPass__hla_4064
        mov        %eax, bssEnd__hla_3374 
        testl      %edx, %edx 
        je         false__hla_4110
        pushl      $str__hla_4111 
        call       STDERR_PUTS
        lea        str__hla_3444, %ecx 
        mov        $5556, %edi 
        mov        $8, %eax 
        call       Raise__hla_
false__hla_4110:
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4112 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        mov        4(%eax), %ebx 
        cmpl       $0, %ebx 
        jne        _1011_skipAssertion___hla_4117
        pushl      _1012_msg___hla_4115 
        popl       AssertionStr 
        lea        str__hla_3673, %ecx 
        mov        $67, %edi 
        mov        $12, %eax 
        call       Raise__hla_

_1011_skipAssertion___hla_4117:
        mov        21(%ebx), %cl 
        andb       $13, %cl 
        cmpb       $4, %cl 
        jne        false__hla_4118
        pushl      $str__hla_4119 
        call       STDERR_PUTS
        pushl      8(%eax) 
        call       STDERR_PUTS
        call       STDERR_NEWLN
        lea        str__hla_3444, %ecx 
        mov        $5576, %edi 
        mov        $16, %eax 
        call       Raise__hla_
false__hla_4118:
continue__hla_4112:
        popl       %ebp 
        ret        $4
exitfor__hla_4112:

        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xfinalPass__hla_4061__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $16
optimizeDisps:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $12, %esp 
        cmpb       $0, verboseDebug__hla_3375 
        je         false__hla_4125
        pushl      $str__hla_4126 
        call       STDOUT_PUTS
false__hla_4125:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       firstPass__hla_3955
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       dispPhase__hla_3997
        mov        %eax, -4(%ebp) 
        cmpl       $16384, %eax 
        jna        false__hla_4127
        pushl      $str__hla_4128 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $4 
        pushl      8(%ebp) 
        call       firstPass__hla_3955
        mov        %eax, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       dispPhase__hla_3997
        mov        %eax, -4(%ebp) 
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4061
        cmpb       $0, 12(%ebp) 
        je         false__hla_4129
        pushl      $str__hla_4130 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4131 
        call       STDOUT_PUTS
false__hla_4129:
        jmp        endif__hla_4127
false__hla_4127:
        pushl      24(%ebp) 
        pushl      20(%ebp) 
        pushl      16(%ebp) 
        pushl      8(%ebp) 
        call       finalPass__hla_4061
        cmpb       $0, 12(%ebp) 
        je         false__hla_4132
        pushl      $str__hla_4130 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTU32
        pushl      $str__hla_4133 
        call       STDOUT_PUTS
false__hla_4132:
endif__hla_4127:
        mov        codeEnd__hla_3370, %eax 
        subl       codeStart__hla_3369, %eax 
        mov        %eax, codeSize 
        mov        dataEnd__hla_3372, %eax 
        subl       dataStart__hla_3371, %eax 
        mov        %eax, dataSize 
        mov        bssEnd__hla_3374, %eax 
        subl       bssStart__hla_3373, %eax 
        mov        %eax, bssSize 
xoptimizeDisps__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
getSymbol__hla_4145:
        pushl      %ebp 
        movl       %esp, %ebp 
        pushl      %eax 
        pushl      %ebx 
        imul       $18, 12(%ebp), %ebx 
        addl       COFFsyms__hla_3357, %ebx 
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        je         false__hla_4148
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        lea        (%ebx), %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
        popl       8(%ebx) 
        jmp        endif__hla_4148
false__hla_4148:
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3366, %eax 
        pushl      %eax 
        pushl      8(%ebp) 
        call       STR_CPYZ
endif__hla_4148:
        popl       %ebx 
        popl       %eax 
xgetSymbol__hla_4145__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $8
dumpRelocs__hla_4154:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $1028, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %ebp 
        addl       $-1028, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -4(%ebp) 
        call       STDOUT_NEWLN
        pushl      16(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4157 
        call       STDOUT_PUTS
        mov        12(%ebp), %ebx 
        mov        $0, %ecx 

        jmp        StartFor__hla_4158
for__hla_4158:
        pushl      4(%ebx) 
        pushl      -4(%ebp) 
        call       getSymbol__hla_4145
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4159 
        call       STDOUT_PUTS
        pushl      (%ebx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4160 
        call       STDOUT_PUTS
        pushl      -4(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4161 
        call       STDOUT_PUTS
        movzwl     8(%ebx), %eax 
        cmpl       $20, %eax 
        jg         default__hla_4162
        jmp *      jmpTbl__hla_4162(,%eax,4) 
case__hla_4163:
        pushl      $str__hla_4164 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4162
case__hla_4165:
        pushl      $str__hla_4166 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4162
case__hla_4167:
        pushl      $str__hla_4168 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4162
case__hla_4169:
        pushl      $str__hla_4170 
        call       STDOUT_PUTS
        jmp        endswitch__hla_4162
default__hla_4162:
        pushl      $str__hla_4171 
        call       STDOUT_PUTS
        pushl      %eax 
        call       STDOUT_PUTD
endswitch__hla_4162:
        call       STDOUT_NEWLN
        addl       $10, %ebx 
continue__hla_4158:
        incl       %ecx 

StartFor__hla_4158:
        cmpl       8(%ebp), %ecx 
        jb         for__hla_4158
exitloop__hla_4158:

        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xdumpRelocs__hla_4154__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $12
generateCOFF__hla_4139:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $192, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3375 
        je         false__hla_4177
        pushl      $str__hla_4178 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4179 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4177:
        movl       $65536, strTblSize__hla_3368 
        pushl      $65536 
        call       MEM_ALLOC1
        mov        %eax, stringTable__hla_3366 
        movl       $4, strTblOffset__hla_3367 
        pushl      $73728 
        call       MEM_ALLOC1
        mov        %eax, COFFsyms__hla_3357 
        movl       %eax, %ebx 
        movl       $73728, coffSymSize__hla_3359 
        movl       $0, numCOFFsyms__hla_3358 
        movb       $46, (%ebx) 
        movb       $102, 1(%ebx) 
        movb       $105, 2(%ebx) 
        movb       $108, 3(%ebx) 
        movb       $101, 4(%ebx) 
        movb       $0, 5(%ebx) 
        movb       $0, 6(%ebx) 
        movb       $0, 7(%ebx) 
        movl       $0, 8(%ebx) 
        movw       $2, 12(%ebx) 
        movw       $0, 14(%ebx) 
        movb       $103, 16(%ebx) 
        pushl      24(%ebp) 
        call       STR_LENGTH
        addl       $18, %eax 
        xorl       %edx, %edx 
        divl       divisor__hla_4180 
        mov        %al, 17(%ebx) 
        addl       $1, %eax 
        mov        %eax, numCOFFsyms__hla_3358 
        lea        18(%ebx), %eax 
        pushl      24(%ebp) 
        pushl      %eax 
        call       ZSTR_CPY
        mov        numCodeRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4181
        mov        $65535, %ax 
        addl       $1, numCodeRelocs 
false__hla_4181:
        mov        %ax, CodeAuxSection__hla_4140+4 
        mov        codeSize, %eax 
        mov        %eax, CodeAuxSection__hla_4140 
        pushl      $str__hla_4182 
        pushl      $0 
        pushl      $1 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $CodeAuxSection__hla_4140 
        call       addCOFFsym__hla_3823
        addl       COFFsyms__hla_3357, %eax 
        mov        %eax, -172(%ebp) 
        mov        numDataRelocs, %eax 
        cmpl       $65535, %eax 
        jnae       false__hla_4183
        mov        $65535, %ax 
        addl       $1, numDataRelocs 
false__hla_4183:
        mov        %ax, DataAuxSection__hla_4141+4 
        mov        dataSize, %eax 
        mov        %eax, DataAuxSection__hla_4141 
        pushl      $str__hla_4184 
        pushl      $0 
        pushl      $2 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $DataAuxSection__hla_4141 
        call       addCOFFsym__hla_3823
        addl       COFFsyms__hla_3357, %eax 
        mov        %eax, -176(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, BssAuxSection__hla_4142 
        pushl      $str__hla_4185 
        pushl      $0 
        pushl      $3 
        pushl      $0 
        pushl      $3 
        pushl      $1 
        pushl      $BssAuxSection__hla_4142 
        call       addCOFFsym__hla_3823
        addl       COFFsyms__hla_3357, %eax 
        mov        %eax, -180(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4186 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%edx), %ebx 
        movzbw     20(%ebx), %cx 
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4187
        mov        $2, %al 
        mov        $0, %cx 
        xorl       %edi, %edi 
        jmp        endif__hla_4187
false__hla_4187:
        testb      $2, 21(%ebx) 
        jz         false__hla_4188
        mov        $2, %al 
        jmp        endif__hla_4188
false__hla_4188:
        mov        $3, %al 
endif__hla_4188:
endif__hla_4187:
        pushl      8(%edx) 
        pushl      12(%ebx) 
        pushl      %ecx 
        pushl      $0 
        pushl      %eax 
        pushl      $0 
        pushl      $0 
        call       addCOFFsym__hla_3823
        mov        %eax, 8(%ebx) 
continue__hla_4186:
        popl       %ebp 
        ret        $4
exitfor__hla_4186:

        movw       $332, -32(%ebp) 
        movw       $3, -30(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        call       TIME_UTCDATETIME
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        call       TIME_TOUNIXTIME
        mov        %eax, -28(%ebp) 
        movl       $0, -24(%ebp) 
        movl       $0, -20(%ebp) 
        movw       $0, -16(%ebp) 
        movw       $256, -14(%ebp) 
        movb       $46, -72(%ebp) 
        movb       $116, -71(%ebp) 
        movb       $101, -70(%ebp) 
        movb       $120, -69(%ebp) 
        movb       $116, -68(%ebp) 
        movb       $0, -67(%ebp) 
        movb       $0, -66(%ebp) 
        movb       $0, -65(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -64(%ebp) 
        mov        %eax, -56(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -164(%ebp) 
        mov        numCodeRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4189
        mov        %dx, -40(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        movl       $1615855648, -36(%ebp) 
        jmp        endif__hla_4189
false__hla_4189:
        movw       $65535, -40(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -156(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $1632632864, -36(%ebp) 
endif__hla_4189:
        movl       $0, -60(%ebp) 
        movl       $0, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        movw       $0, -38(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3369 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        pushl      -164(%ebp) 
        pushl      $1 
        pushl      $0 
        call       buildRaw__hla_3861
        movb       $46, -112(%ebp) 
        movb       $100, -111(%ebp) 
        movb       $97, -110(%ebp) 
        movb       $116, -109(%ebp) 
        movb       $97, -108(%ebp) 
        movb       $0, -107(%ebp) 
        movb       $0, -106(%ebp) 
        movb       $0, -105(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -104(%ebp) 
        mov        %eax, -96(%ebp) 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -168(%ebp) 
        mov        numDataRelocs, %edx 
        cmpl       $65535, %edx 
        jnb        false__hla_4190
        mov        %dx, -80(%ebp) 
        movzwl     %dx, %eax 
        imul       $10, %eax, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        movl       $-1068498880, -76(%ebp) 
        jmp        endif__hla_4190
false__hla_4190:
        movw       $65535, -80(%ebp) 
        imul       $10, %edx, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -160(%ebp) 
        mov        %edx, (%eax) 
        movl       $0, 4(%eax) 
        movw       $0, 8(%eax) 
        movl       $-1051721664, -76(%ebp) 
endif__hla_4190:
        movl       $0, -100(%ebp) 
        movl       $0, -92(%ebp) 
        movl       $0, -88(%ebp) 
        movl       $0, -84(%ebp) 
        movw       $0, -78(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3371 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        pushl      -168(%ebp) 
        pushl      $2 
        pushl      $0 
        call       buildRaw__hla_3861
        movb       $46, -152(%ebp) 
        movb       $98, -151(%ebp) 
        movb       $115, -150(%ebp) 
        movb       $115, -149(%ebp) 
        movl       $0, -148(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -136(%ebp) 
        movl       $0, -144(%ebp) 
        movw       $0, -120(%ebp) 
        movl       $0, -140(%ebp) 
        movl       $0, -132(%ebp) 
        movl       $0, -128(%ebp) 
        movl       $0, -124(%ebp) 
        movw       $0, -118(%ebp) 
        movl       $-1068498816, -116(%ebp) 
        mov        $140, %ecx 
        mov        %ecx, -52(%ebp) 
        addl       codeSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -48(%ebp) 
        imul       $10, numCodeRelocs, %eax 
        addl       %eax, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -92(%ebp) 
        addl       dataSize, %ecx 
        addl       $3, %ecx 
        andl       $-4, %ecx 
        mov        %ecx, -88(%ebp) 
        imul       $10, numDataRelocs, %eax 
        addl       %eax, %ecx 
        mov        %ecx, -24(%ebp) 
        mov        numCOFFsyms__hla_3358, %eax 
        mov        %eax, -20(%ebp) 
        imul       $18, %eax, %eax 
        addl       %eax, %ecx 
        addl       strTblOffset__hla_3367, %ecx 
        mov        %ecx, -188(%ebp) 
        pushl      %ecx 
        call       MEM_ZALLOC
        mov        %eax, -184(%ebp) 
        mov        -184(%ebp), %edi 
        lea        -32(%ebp), %esi 
        mov        $20, %ecx 
        cld
        rep movsb
        lea        -72(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -112(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        lea        -152(%ebp), %esi 
        mov        $40, %ecx 
        rep movsb
        mov        -164(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -156(%ebp), %esi 
        imul       $10, numCodeRelocs, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -168(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        addl       $3, %edi 
        andl       $-4, %edi 
        mov        -160(%ebp), %esi 
        imul       $10, numDataRelocs, %ecx 
        rep movsb
        mov        COFFsyms__hla_3357, %esi 
        imul       $18, numCOFFsyms__hla_3358, %ecx 
        rep movsb
        mov        stringTable__hla_3366, %esi 
        mov        strTblOffset__hla_3367, %eax 
        stosl
        addl       $4, %esi 
        lea        -4(%eax), %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -192(%ebp) 
        pushl      -192(%ebp) 
        pushl      -184(%ebp) 
        pushl      -188(%ebp) 
        call       FILEIO_WRITE
        pushl      -192(%ebp) 
        call       FILEIO_CLOSE
        cmpb       $0, verboseDebug__hla_3375 
        je         false__hla_4191
        pushl      $str__hla_4192 
        call       STDOUT_PUTS
        pushl      numCOFFsyms__hla_3358 
        call       STDOUT_PUTU32
        pushl      $str__hla_4193 
        call       STDOUT_PUTS
        mov        COFFsyms__hla_3357, %ebx 
        xorl       %ecx, %ecx 
        jmp        continue__hla_4194
while__hla_4194:
        pushl      %ecx 
        call       STDOUT_PUTU32
        pushl      $str__hla_4159 
        call       STDOUT_PUTS
        mov        (%ebx), %eax 
        testl      %eax, %eax 
        jne        false__hla_4196
        mov        4(%ebx), %eax 
        addl       stringTable__hla_3366, %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4196
false__hla_4196:
        pushl      8(%ebx) 
        movl       $0, 8(%ebx) 
        pushl      %ebx 
        call       STDOUT_PUTZS
        popl       8(%ebx) 
endif__hla_4196:
        pushl      $str__hla_4197 
        call       STDOUT_PUTS
        cmpb       $103, 16(%ebx) 
        jne        false__hla_4198
        lea        18(%ebx), %eax 
        pushl      %eax 
        call       STDOUT_PUTZS
        jmp        endif__hla_4198
false__hla_4198:
        cmpb       $3, 16(%ebx) 
        jne        false__hla_4199
        pushl      $str__hla_4200 
        call       STDOUT_PUTS
        jmp        endif__hla_4198
false__hla_4199:
        cmpb       $2, 16(%ebx) 
        jne        false__hla_4201
        cmpw       $0, 12(%ebx) 
        jne        false__hla_4202
        pushl      $str__hla_4203 
        call       STDOUT_PUTS
        jmp        endif__hla_4202
false__hla_4202:
        pushl      $str__hla_4204 
        call       STDOUT_PUTS
endif__hla_4202:
        jmp        endif__hla_4198
false__hla_4201:
        pushl      $str__hla_4205 
        call       STDOUT_PUTS
endif__hla_4198:
        call       STDOUT_NEWLN
        movzbl     17(%ebx), %eax 
        addl       $1, %eax 
        addl       %eax, %ecx 
        imul       $18, %eax, %eax 
        addl       %eax, %ebx 
continue__hla_4194:
        cmpl       numCOFFsyms__hla_3358, %ecx 
        jb         while__hla_4194
exitloop__hla_4194:

        pushl      $str__hla_4206 
        pushl      -156(%ebp) 
        pushl      numCodeRelocs 
        call       dumpRelocs__hla_4154
        pushl      $str__hla_4207 
        pushl      -160(%ebp) 
        pushl      numDataRelocs 
        call       dumpRelocs__hla_4154
false__hla_4191:
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateCOFF__hla_4139__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
generateELF__hla_4213:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $148, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3375 
        je         false__hla_4225
        pushl      $str__hla_4226 
        call       STDOUT_PUTS
        pushl      28(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4179 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4225:
        pushl      $64 
        call       MEM_ZALLOC
        mov        %eax, -8(%ebp) 
        movl       $4, -140(%ebp) 
        movl       $5, -144(%ebp) 
        movl       $6, -148(%ebp) 
        lea        1(%eax), %edi 
        movl       $1, shstrtabSection__hla_4215 
        pushl      $str__hla_4227 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $11, symtabSection__hla_4216 
        pushl      $str__hla_4228 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        movl       $19, strtabSection__hla_4217 
        pushl      $str__hla_4229 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        $27, %ebx 
        mov        %ebx, textSection__hla_4218 
        addl       $6, %ebx 
        pushl      $str__hla_4182 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, dataSection__hla_4219 
        addl       $6, %ebx 
        pushl      $str__hla_4184 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, bssSection__hla_4220 
        addl       $5, %ebx 
        pushl      $str__hla_4185 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relTextSection__hla_4221 
        addl       $10, %ebx 
        pushl      $str__hla_4230 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, relDataSection__hla_4222 
        addl       $10, %ebx 
        pushl      $str__hla_4231 
        pushl      %edi 
        call       ZSTR_CPY
        lea        1(%edi,%eax,1), %edi 
        mov        %ebx, -104(%ebp) 
        movl       $7, -4(%ebp) 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4232
        addl       $1, -4(%ebp) 
false__hla_4232:
        cmpl       $0, numDataRelocs 
        je         false__hla_4233
        addl       $1, -4(%ebp) 
false__hla_4233:
        imul       $40, -4(%ebp), %eax 
        mov        %eax, -96(%ebp) 
        movl       $262144, strTblSize__hla_3368 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3366 
        movl       $1, strTblOffset__hla_3367 
        pushl      $1048576 
        call       MEM_ZALLOC
        mov        %eax, ELFsyms__hla_3360 
        movl       %eax, %ebx 
        movl       $1048576, elfSymSize__hla_3362 
        movl       $1, numELFsyms__hla_3361 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -140(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3835
        addl       $1, numELFsyms__hla_3361 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -144(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3835
        addl       $1, numELFsyms__hla_3361 
        pushl      $0 
        pushl      $0 
        pushl      $0 
        pushl      $3 
        pushw      $0 
        pushw      -148(%ebp) 
        pushl      $0 
        call       addELFsym__hla_3835
        addl       $1, numELFsyms__hla_3361 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4234 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4235
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4235
false__hla_4235:
        cmpl       $2, %ecx 
        jne        false__hla_4236
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4235
false__hla_4236:
        cmpl       $3, %ecx 
        jne        false__hla_4237
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4235
false__hla_4237:
        xorl       %ecx, %ecx 
endif__hla_4235:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jnz        false__hla_4238
        testb      $2, 21(%ebx) 
        jnz        false__hla_4239
        cmpb       $0, 22(%ebx) 
        je         false__hla_4240
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      $2 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3835
        jmp        endif__hla_4240
false__hla_4240:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $0 
        pushl      $0 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3835
endif__hla_4240:
        mov        numELFsyms__hla_3361, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3361 
false__hla_4239:
false__hla_4238:
continue__hla_4234:
        popl       %ebp 
        ret        $4
exitfor__hla_4234:

        mov        numELFsyms__hla_3361, %eax 
        mov        %eax, symtabSection__hla_4216+28 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4241 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4242
        mov        -140(%ebp), %ecx 
        jmp        endif__hla_4242
false__hla_4242:
        cmpl       $2, %ecx 
        jne        false__hla_4243
        mov        -144(%ebp), %ecx 
        jmp        endif__hla_4242
false__hla_4243:
        cmpl       $3, %ecx 
        jne        false__hla_4244
        mov        -148(%ebp), %ecx 
        jmp        endif__hla_4242
false__hla_4244:
        xorl       %ecx, %ecx 
endif__hla_4242:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4245
        cmpb       $0, 22(%ebx) 
        je         false__hla_4246
        mov        $18, %al 
        jmp        endif__hla_4246
false__hla_4246:
        mov        $16, %al 
endif__hla_4246:
        xorl       %ecx, %ecx 
        xorl       %edi, %edi 
        jmp        endif__hla_4245
false__hla_4245:
        testb      $2, 21(%ebx) 
        jz         false__hla_4247
        cmpb       $0, 22(%ebx) 
        je         false__hla_4248
        mov        $18, %al 
        jmp        endif__hla_4248
false__hla_4248:
        mov        $16, %al 
endif__hla_4248:
        jmp        endif__hla_4247
false__hla_4247:
        jmp        continue__hla_4241
endif__hla_4247:
endif__hla_4245:
        pushl      8(%edx) 
        pushl      %edi 
        pushl      16(%ebx) 
        pushl      %eax 
        pushl      %ecx 
        pushl      $0 
        call       addELFsym__hla_3835
        mov        numELFsyms__hla_3361, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, numELFsyms__hla_3361 
continue__hla_4241:
        popl       %ebp 
        ret        $4
exitfor__hla_4241:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4249
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -84(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -76(%ebp) 
        pushl      20(%ebp) 
        pushl      codeStart__hla_3369 
        pushl      -76(%ebp) 
        pushl      numCodeRelocs 
        pushl      -84(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        call       buildRaw__hla_3861
false__hla_4249:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4250
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -88(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -80(%ebp) 
        pushl      16(%ebp) 
        pushl      dataStart__hla_3371 
        pushl      -80(%ebp) 
        pushl      numDataRelocs 
        pushl      -88(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        call       buildRaw__hla_3861
false__hla_4250:
        mov        $64, %eax 
        mov        %eax, -92(%ebp) 
        addl       -96(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -100(%ebp) 
        addl       -104(%ebp), %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -108(%ebp) 
        imul       $16, numELFsyms__hla_3361, %edx 
        addl       %edx, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -116(%ebp) 
        addl       strTblOffset__hla_3367, %eax 
        movl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        cmpl       $0, codeSize 
        je         false__hla_4251
        mov        %edx, -120(%ebp) 
        addl       codeSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4251
false__hla_4251:
        mov        -100(%ebp), %eax 
        mov        %eax, -120(%ebp) 
endif__hla_4251:
        cmpl       $0, dataSize 
        je         false__hla_4252
        mov        %edx, -128(%ebp) 
        addl       dataSize, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
        jmp        endif__hla_4252
false__hla_4252:
        mov        -100(%ebp), %eax 
        mov        %eax, -128(%ebp) 
endif__hla_4252:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4253
        mov        %edx, -124(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       %eax, %edx 
        addl       $15, %edx 
        andl       $-16, %edx 
false__hla_4253:
        cmpl       $0, numDataRelocs 
        je         false__hla_4254
        mov        %edx, -132(%ebp) 
        imul       $8, numDataRelocs, %eax 
        addl       %eax, %edx 
false__hla_4254:
        mov        %edx, -16(%ebp) 
        pushl      %edx 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        pushl      -100(%ebp) 
        popl       -136(%ebp) 
        cld
        lea        -72(%ebp), %edi 
        mov        $52, %ecx 
        mov        $0, %al 
        rep stosb
        movw       $1, -56(%ebp) 
        movw       $3, -54(%ebp) 
        movl       $1, -52(%ebp) 
        movl       $0, -48(%ebp) 
        movl       $0, -44(%ebp) 
        mov        -92(%ebp), %eax 
        mov        %eax, -40(%ebp) 
        movl       $0, -36(%ebp) 
        movw       $52, -32(%ebp) 
        movw       $0, -30(%ebp) 
        movw       $0, -28(%ebp) 
        movw       $40, -26(%ebp) 
        mov        -4(%ebp), %eax 
        mov        %ax, -24(%ebp) 
        movw       $1, -22(%ebp) 
        lea        -72(%ebp), %ebx 
        movb       $127, (%ebx) 
        movb       $69, 1(%ebx) 
        movb       $76, 2(%ebx) 
        movb       $70, 3(%ebx) 
        movb       $1, 4(%ebx) 
        movb       $1, 5(%ebx) 
        movb       $1, 6(%ebx) 
        cmpb       $1, 8(%ebp) 
        jne        false__hla_4255
        movb       $0, 7(%ebx) 
        jmp        endif__hla_4255
false__hla_4255:
        cmpb       $2, 8(%ebp) 
        jne        false__hla_4256
        movb       $9, 7(%ebx) 
        jmp        endif__hla_4255
false__hla_4256:
        pushl      $str__hla_4257 
        call       STDERR_PUTS
        movb       $0, 7(%ebx) 
endif__hla_4255:
        mov        -100(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4215+16 
        mov        -104(%ebp), %eax 
        mov        %eax, shstrtabSection__hla_4215+20 
        mov        -108(%ebp), %eax 
        mov        %eax, symtabSection__hla_4216+16 
        imul       $16, numELFsyms__hla_3361, %eax 
        mov        %eax, symtabSection__hla_4216+20 
        mov        %eax, -112(%ebp) 
        mov        -116(%ebp), %eax 
        mov        %eax, strtabSection__hla_4217+16 
        mov        strTblOffset__hla_3367, %eax 
        mov        %eax, strtabSection__hla_4217+20 
        mov        -120(%ebp), %eax 
        mov        %eax, textSection__hla_4218+16 
        mov        codeSize, %eax 
        mov        %eax, textSection__hla_4218+20 
        mov        -128(%ebp), %eax 
        mov        %eax, dataSection__hla_4219+16 
        mov        dataSize, %eax 
        mov        %eax, dataSection__hla_4219+20 
        mov        bssSize, %eax 
        mov        %eax, bssSection__hla_4220+20 
        mov        -136(%ebp), %eax 
        mov        %eax, bssSection__hla_4220+16 
        cmpl       $0, numCodeRelocs 
        je         false__hla_4258
        mov        -124(%ebp), %eax 
        mov        %eax, relTextSection__hla_4221+16 
        imul       $8, numCodeRelocs, %eax 
        mov        %eax, relTextSection__hla_4221+20 
        mov        -140(%ebp), %eax 
        mov        %eax, relTextSection__hla_4221+28 
false__hla_4258:
        cmpl       $0, numDataRelocs 
        je         false__hla_4259
        mov        -132(%ebp), %eax 
        mov        %eax, relDataSection__hla_4222+16 
        imul       $8, numDataRelocs, %eax 
        mov        %eax, relDataSection__hla_4222+20 
        mov        -144(%ebp), %eax 
        mov        %eax, relDataSection__hla_4222+28 
false__hla_4259:
        cld
        mov        -12(%ebp), %edi 
        lea        -72(%ebp), %esi 
        mov        $52, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        lea        NULLsection__hla_4214, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        shstrtabSection__hla_4215, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        symtabSection__hla_4216, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        strtabSection__hla_4217, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        textSection__hla_4218, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        dataSection__hla_4219, %esi 
        mov        $40, %ecx 
        rep movsb
        lea        bssSection__hla_4220, %esi 
        mov        $40, %ecx 
        rep movsb
        cmpl       $0, numCodeRelocs 
        je         false__hla_4260
        lea        relTextSection__hla_4221, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4260:
        cmpl       $0, numDataRelocs 
        je         false__hla_4261
        lea        relDataSection__hla_4222, %esi 
        mov        $40, %ecx 
        rep movsb
false__hla_4261:
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -8(%ebp), %esi 
        mov        -104(%ebp), %ecx 
        cld
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        ELFsyms__hla_3360, %esi 
        imul       $16, numELFsyms__hla_3361, %ecx 
        rep movsb
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        stringTable__hla_3366, %esi 
        mov        strTblOffset__hla_3367, %ecx 
        rep movsb
        cmpl       $0, codeSize 
        je         false__hla_4262
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -84(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
false__hla_4262:
        cmpl       $0, dataSize 
        je         false__hla_4263
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -88(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
false__hla_4263:
        cmpl       $0, numCodeRelocs 
        je         false__hla_4264
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -76(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
false__hla_4264:
        cmpl       $0, numDataRelocs 
        je         false__hla_4265
        subl       -12(%ebp), %edi 
        addl       $15, %edi 
        andl       $-16, %edi 
        addl       -12(%ebp), %edi 
        mov        -80(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
false__hla_4265:
        pushl      24(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -20(%ebp) 
        pushl      -20(%ebp) 
        pushl      -12(%ebp) 
        pushl      -16(%ebp) 
        call       FILEIO_WRITE
        pushl      -20(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateELF__hla_4213__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $24
generateMacho__hla_4271:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $440, %esp 
        pushl      %eax 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        cmpb       $0, verboseDebug__hla_3375 
        je         false__hla_4274
        pushl      $str__hla_4275 
        call       STDOUT_PUTS
        pushl      24(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4179 
        call       STDOUT_PUTS
        pushl      20(%ebp) 
        call       STDOUT_PUTS
        call       STDOUT_NEWLN
false__hla_4274:
        movl       $262144, strTblSize__hla_3368 
        pushl      $262144 
        call       MEM_ZALLOC
        mov        %eax, stringTable__hla_3366 
        movl       $1, strTblOffset__hla_3367 
        pushl      $786432 
        call       MEM_ZALLOC
        mov        %eax, MachoSyms__hla_3363 
        movl       %eax, %ebx 
        movl       $786432, MachoSymSize__hla_3364 
        movl       $0, numMachoSyms__hla_3365 
        movl       $0, -20(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4276 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4277
        mov        $1, %ecx 
        jmp        endif__hla_4277
false__hla_4277:
        cmpl       $2, %ecx 
        jne        false__hla_4278
        mov        $2, %ecx 
        jmp        endif__hla_4277
false__hla_4278:
        cmpl       $3, %ecx 
        jne        false__hla_4279
        mov        $3, %ecx 
        jmp        endif__hla_4277
false__hla_4279:
        xorl       %ecx, %ecx 
endif__hla_4277:
        mov        12(%ebx), %edi 
        testb      $3, 21(%ebx) 
        jnz        false__hla_4280
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $14 
        pushl      %ecx 
        call       addMachoSym__hla_3846
        addl       $1, -20(%ebp) 
        mov        numMachoSyms__hla_3365, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3365 
false__hla_4280:
continue__hla_4276:
        popl       %ebp 
        ret        $4
exitfor__hla_4276:

        movl       $0, -24(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4281 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4282
        mov        $1, %ecx 
        jmp        endif__hla_4282
false__hla_4282:
        cmpl       $2, %ecx 
        jne        false__hla_4283
        mov        $2, %ecx 
        jmp        endif__hla_4282
false__hla_4283:
        cmpl       $3, %ecx 
        jne        false__hla_4284
        mov        $3, %ecx 
        jmp        endif__hla_4282
false__hla_4284:
        xorl       %ecx, %ecx 
endif__hla_4282:
        mov        12(%ebx), %edi 
        testb      $2, 21(%ebx) 
        jz         false__hla_4285
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $15 
        pushl      %ecx 
        call       addMachoSym__hla_3846
        addl       $1, -24(%ebp) 
        mov        numMachoSyms__hla_3365, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3365 
false__hla_4285:
continue__hla_4281:
        popl       %ebp 
        ret        $4
exitfor__hla_4281:

        movl       $0, -28(%ebp) 
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4286 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        mov        4(%eax), %ebx 
        movzbl     20(%ebx), %ecx 
        cmpl       $1, %ecx 
        jne        false__hla_4287
        mov        $1, %ecx 
        jmp        endif__hla_4287
false__hla_4287:
        cmpl       $2, %ecx 
        jne        false__hla_4288
        mov        $2, %ecx 
        jmp        endif__hla_4287
false__hla_4288:
        cmpl       $3, %ecx 
        jne        false__hla_4289
        mov        $3, %ecx 
        jmp        endif__hla_4287
false__hla_4289:
        xorl       %ecx, %ecx 
endif__hla_4287:
        mov        12(%ebx), %edi 
        testb      $1, 21(%ebx) 
        jz         false__hla_4290
        pushl      8(%edx) 
        pushl      %edi 
        pushl      $1 
        pushl      %ecx 
        call       addMachoSym__hla_3846
        addl       $1, -28(%ebp) 
        mov        numMachoSyms__hla_3365, %eax 
        mov        %eax, 8(%ebx) 
        addl       $1, %eax 
        mov        %eax, numMachoSyms__hla_3365 
false__hla_4290:
continue__hla_4286:
        popl       %ebp 
        ret        $4
exitfor__hla_4286:

        mov        codeSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4291
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, codeSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -12(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       $8, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -4(%ebp) 
        pushl      16(%ebp) 
        pushl      codeStart__hla_3369 
        pushl      -4(%ebp) 
        pushl      numCodeRelocs 
        pushl      -12(%ebp) 
        pushl      $1 
        pushl      $3 
        call       buildRaw__hla_3861
false__hla_4291:
        mov        dataSize, %eax 
        testl      %eax, %eax 
        je         false__hla_4292
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, dataSize 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -16(%ebp) 
        imul       $8, numDataRelocs, %eax 
        pushl      %eax 
        call       MEM_ALLOC1
        mov        %eax, -8(%ebp) 
        pushl      12(%ebp) 
        pushl      dataStart__hla_3371 
        pushl      -8(%ebp) 
        pushl      numDataRelocs 
        pushl      -16(%ebp) 
        pushl      $2 
        pushl      $3 
        call       buildRaw__hla_3861
false__hla_4292:
        addl       $15, bssSize 
        andl       $-16, bssSize 
        movl       $-17958194, -440(%ebp) 
        movl       $7, -436(%ebp) 
        movl       $3, -432(%ebp) 
        movl       $1, -428(%ebp) 
        movl       $3, -424(%ebp) 
        movl       $364, -420(%ebp) 
        movl       $0, -416(%ebp) 
        movl       $1, -412(%ebp) 
        movl       $260, -408(%ebp) 
        movl       $0, -404(%ebp) 
        movl       $0, -400(%ebp) 
        movl       $0, -396(%ebp) 
        movl       $0, -392(%ebp) 
        movl       $0, -388(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        mov        %eax, -376(%ebp) 
        addl       bssSize, %eax 
        mov        %eax, -384(%ebp) 
        movl       $392, -380(%ebp) 
        movl       $7, -372(%ebp) 
        movl       $7, -368(%ebp) 
        movl       $3, -364(%ebp) 
        movl       $0, -360(%ebp) 
        movl       $1702125407, -356(%ebp) 
        movl       $29816, -352(%ebp) 
        movl       $0, -348(%ebp) 
        movl       $0, -344(%ebp) 
        movl       $1163157343, -340(%ebp) 
        movl       $21592, -336(%ebp) 
        movl       $0, -332(%ebp) 
        movl       $0, -328(%ebp) 
        movl       $0, -324(%ebp) 
        mov        codeSize, %eax 
        mov        %eax, -320(%ebp) 
        movl       $392, -316(%ebp) 
        movl       $4, -312(%ebp) 
        mov        codeSize, %eax 
        addl       dataSize, %eax 
        addl       $392, %eax 
        mov        %eax, -308(%ebp) 
        mov        numCodeRelocs, %eax 
        mov        %eax, -304(%ebp) 
        movl       $1024, -300(%ebp) 
        movl       $0, -296(%ebp) 
        movl       $0, -292(%ebp) 
        movl       $1633967967, -288(%ebp) 
        movl       $24948, -284(%ebp) 
        movl       $0, -280(%ebp) 
        movl       $0, -276(%ebp) 
        movl       $1094999903, -272(%ebp) 
        movl       $16724, -268(%ebp) 
        movl       $0, -264(%ebp) 
        movl       $0, -260(%ebp) 
        mov        dataStart__hla_3371, %eax 
        mov        %eax, -256(%ebp) 
        mov        dataSize, %eax 
        mov        %eax, -252(%ebp) 
        mov        -316(%ebp), %eax 
        addl       codeSize, %eax 
        mov        %eax, -248(%ebp) 
        movl       $4, -244(%ebp) 
        imul       $8, numCodeRelocs, %eax 
        addl       -308(%ebp), %eax 
        mov        %eax, -240(%ebp) 
        mov        numDataRelocs, %eax 
        mov        %eax, -236(%ebp) 
        movl       $0, -232(%ebp) 
        movl       $0, -228(%ebp) 
        movl       $0, -224(%ebp) 
        movl       $1935826783, -220(%ebp) 
        movl       $115, -216(%ebp) 
        movl       $0, -212(%ebp) 
        movl       $0, -208(%ebp) 
        movl       $1094999903, -204(%ebp) 
        movl       $16724, -200(%ebp) 
        movl       $0, -196(%ebp) 
        movl       $0, -192(%ebp) 
        mov        bssStart__hla_3373, %eax 
        mov        %eax, -188(%ebp) 
        mov        bssSize, %eax 
        mov        %eax, -184(%ebp) 
        movl       $0, -180(%ebp) 
        movl       $4, -176(%ebp) 
        movl       $0, -172(%ebp) 
        movl       $0, -168(%ebp) 
        movl       $1, -164(%ebp) 
        movl       $0, -160(%ebp) 
        movl       $0, -156(%ebp) 
        movl       $2, -152(%ebp) 
        movl       $24, -148(%ebp) 
        movl       $0, -144(%ebp) 
        mov        numMachoSyms__hla_3365, %eax 
        mov        %eax, -140(%ebp) 
        movl       $0, -136(%ebp) 
        mov        strTblOffset__hla_3367, %eax 
        mov        %eax, -132(%ebp) 
        movl       $11, -128(%ebp) 
        movl       $80, -124(%ebp) 
        mov        -20(%ebp), %eax 
        movl       $0, -120(%ebp) 
        mov        %eax, -116(%ebp) 
        cmpl       $0, -24(%ebp) 
        je         false__hla_4307
        mov        -20(%ebp), %eax 
        mov        %eax, -112(%ebp) 
        jmp        endif__hla_4307
false__hla_4307:
        movl       $0, -112(%ebp) 
endif__hla_4307:
        mov        -24(%ebp), %eax 
        mov        %eax, -108(%ebp) 
        cmpl       $0, -28(%ebp) 
        je         false__hla_4308
        mov        -20(%ebp), %eax 
        addl       -24(%ebp), %eax 
        mov        %eax, -104(%ebp) 
        jmp        endif__hla_4308
false__hla_4308:
        movl       $0, -104(%ebp) 
endif__hla_4308:
        mov        -28(%ebp), %eax 
        mov        %eax, -100(%ebp) 
        xorl       %eax, %eax 
        mov        %eax, -96(%ebp) 
        mov        %eax, -92(%ebp) 
        mov        %eax, -88(%ebp) 
        mov        %eax, -84(%ebp) 
        mov        %eax, -80(%ebp) 
        mov        %eax, -76(%ebp) 
        mov        %eax, -72(%ebp) 
        mov        %eax, -68(%ebp) 
        mov        %eax, -64(%ebp) 
        mov        %eax, -60(%ebp) 
        mov        %eax, -56(%ebp) 
        mov        %eax, -52(%ebp) 
        mov        $392, %eax 
        addl       codeSize, %eax 
        addl       dataSize, %eax 
        imul       $8, numCodeRelocs, %edx 
        addl       %edx, %eax 
        imul       $8, numDataRelocs, %edx 
        addl       %edx, %eax 
        mov        %eax, -144(%ebp) 
        imul       $12, numMachoSyms__hla_3365, %edx 
        addl       %edx, %eax 
        mov        %eax, -136(%ebp) 
        addl       strTblOffset__hla_3367, %eax 
        addl       $15, %eax 
        andl       $-16, %eax 
        mov        %eax, -36(%ebp) 
        pushl      %eax 
        call       MEM_ZALLOC
        mov        %eax, -32(%ebp) 
        cld
        movl       %eax, %edi 
        lea        -440(%ebp), %esi 
        mov        $392, %ecx 
        rep movsb
        mov        -12(%ebp), %esi 
        mov        codeSize, %ecx 
        rep movsb
        mov        -16(%ebp), %esi 
        mov        dataSize, %ecx 
        rep movsb
        mov        -4(%ebp), %esi 
        imul       $8, numCodeRelocs, %ecx 
        rep movsb
        mov        -8(%ebp), %esi 
        imul       $8, numDataRelocs, %ecx 
        rep movsb
        mov        MachoSyms__hla_3363, %esi 
        imul       $12, numMachoSyms__hla_3365, %ecx 
        rep movsb
        mov        stringTable__hla_3366, %esi 
        mov        strTblOffset__hla_3367, %ecx 
        rep movsb
        pushl      20(%ebp) 
        call       FILEIO_OPENNEW
        mov        %eax, -44(%ebp) 
        pushl      -44(%ebp) 
        pushl      -32(%ebp) 
        pushl      -36(%ebp) 
        call       FILEIO_WRITE
        pushl      -44(%ebp) 
        call       FILEIO_CLOSE
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
        popl       %eax 
xgenerateMacho__hla_4271__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $20
compileCOFF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $0 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateCOFF__hla_4139
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileCOFF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
compileELF:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        call       optimizeDisps
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      24(%ebp) 
        call       generateELF__hla_4213
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        xorl       %eax, %eax 
xcompileELF__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
compileMACHO:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $36, %esp 
        pushl      %ebx 
        mov        16(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -4(%ebp) 
        mov        12(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -8(%ebp) 
        mov        8(%ebp), %ebx 
        mov        (%ebx), %eax 
        mov        %eax, -12(%ebp) 
        pushl      28(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       lexer
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        pushl      20(%ebp) 
        pushl      $3 
        call       optimizeDisps
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      -4(%ebp) 
        pushl      -8(%ebp) 
        pushl      -12(%ebp) 
        call       generateMacho__hla_4271
        mov        16(%ebp), %ebx 
        mov        -4(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        12(%ebp), %ebx 
        mov        -8(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        8(%ebp), %ebx 
        mov        -12(%ebp), %eax 
        mov        %eax, (%ebx) 
        mov        $1, %eax 
xcompileMACHO__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $32
compile__hla_4331:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $28, %esp 
        pushl      %ebx 
        pushl      %ecx 
        pushl      %edx 
        pushl      %esi 
        pushl      %edi 
        mov        %esp, saveESP__hla_3389 
        mov        ExceptionPtr__hla_, %eax 
        mov        %eax, SaveSEHPointer__hla_3388 
        call       BuildExcepts__hla_
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CONV_GETDELIMITERS
        pushl      $0 
        pushl      $0 
        pushl      $11008 
        pushl      $0 
        pushl      %ebp 
        addl       $-28, (%esp) 
        call       CSET_SETUNION
        pushl      -16(%ebp) 
        pushl      -20(%ebp) 
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        call       CONV_SETDELIMITERS
        cmpb       $0, 8(%ebp) 
        je         false__hla_4334
        pushl      $str__hla_4335 
        call       STDOUT_PUTS
        pushl      40(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4336 
        call       STDOUT_PUTS
        pushl      36(%ebp) 
        call       STDOUT_PUTS
        pushl      $str__hla_4337 
        call       STDOUT_PUTS
false__hla_4334:
        pushl      $exception__hla_4339 
        pushl      %ebp 
        mov        ExceptionPtr__hla_, %ebp 
        pushl      8(%ebp) 
        mov        4(%esp), %ebp 
        pushl      $244115826 
        pushl      ExceptionPtr__hla_ 
        mov        %esp, ExceptionPtr__hla_ 
        pushl      $65536 
        movl       $symbolTable, %esi 
        call       TABLE_CREATE
        pushl      $8192 
        movl       $equatesTable, %esi 
        call       TABLE_CREATE
        movzbl     24(%ebp), %eax 
        cmpl       $3, %eax 
        jg         default__hla_4340
        jmp *      jmpTbl__hla_4340(,%eax,4) 
case__hla_4341:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileCOFF
        jmp        endswitch__hla_4340
case__hla_4342:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $1 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4340
case__hla_4343:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      $2 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileELF
        jmp        endswitch__hla_4340
case__hla_4344:
        pushl      40(%ebp) 
        pushl      36(%ebp) 
        pushl      32(%ebp) 
        pushl      28(%ebp) 
        pushl      8(%ebp) 
        pushl      %ebp 
        addl       $-4, (%esp) 
        pushl      %ebp 
        addl       $-8, (%esp) 
        pushl      %ebp 
        addl       $-12, (%esp) 
        call       compileMACHO
        jmp        endswitch__hla_4340
default__hla_4340:
        pushl      $str__hla_4345 
        call       STDERR_PUTS
        mov        $1, %eax 
endswitch__hla_4340:
        mov        ExceptionPtr__hla_, %esp 
        popl       ExceptionPtr__hla_ 
        addl       $8, %esp 
        popl       %ebp 
        addl       $4, %esp 
        jmp        endtry__hla_4338
exception__hla_4339:
        call       EX_PRINTEXCEPTIONERROR
        mov        $0, %eax 
endtry__hla_4338:
        cmpb       $0, verboseDebug__hla_3375 
        je         false__hla_4346
        call       STDOUT_NEWLN
        pushl      $str__hla_4347 
        call       STDOUT_PUTS
        movl       $symbolTable, %esi 
        mov        (%esi), %edi 
        pushl      $exitfor__hla_4348 
        call *     12(%edi) 
        pushl      %ebp 
        mov        8(%esp), %ebp 
        movl       %eax, %edx 
        pushl      8(%edx) 
        pushl      $-24 
        pushl      $32 
        call       STDOUT_PUTSSIZE
        pushl      $str__hla_4159 
        call       STDOUT_PUTS
        mov        4(%edx), %edx 
        mov        21(%edx), %ah 
        testb      $1, %ah 
        mov        $32, %al 
        jz         false__hla_4349
        mov        $88, %al 
false__hla_4349:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $2, %ah 
        mov        $32, %al 
        jz         false__hla_4350
        mov        $80, %al 
false__hla_4350:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $4, %ah 
        mov        $32, %al 
        jz         false__hla_4351
        mov        $82, %al 
false__hla_4351:
        pushl      %eax 
        call       STDOUT_PUTC
        testb      $8, %ah 
        mov        $32, %al 
        jz         false__hla_4352
        mov        $68, %al 
false__hla_4352:
        pushl      %eax 
        call       STDOUT_PUTC
        pushl      $str__hla_4353 
        call       STDOUT_PUTS
        pushl      12(%edx) 
        call       STDOUT_PUTD
        pushl      $str__hla_4354 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        20(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        pushl      $str__hla_4355 
        call       STDOUT_PUTS
        pushl      $0 
        pushl      %eax 
        mov        8(%edx), %al 
        mov        %al, 4(%esp) 
        popl       %eax 
        call       STDOUT_PUTU8
        call       STDOUT_NEWLN
continue__hla_4348:
        popl       %ebp 
        ret        $4
exitfor__hla_4348:

        call       STDOUT_NEWLN
false__hla_4346:
        jmp        Exit_compile_hlabe__hla_4356

QuitMain__hla_:
        mov        $1, %eax 

Exit_compile_hlabe__hla_4356:
        mov        saveESP__hla_3389, %esp 
        pushl      %eax 
        mov        SaveSEHPointer__hla_3388, %eax 
        mov        %eax, ExceptionPtr__hla_ 
        mov        20(%ebp), %ecx 
        mov        -4(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        16(%ebp), %ecx 
        mov        -8(%ebp), %edx 
        mov        %edx, (%ecx) 
        mov        12(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        %edx, (%ecx) 
        popl       %eax 
        popl       %edi 
        popl       %esi 
        popl       %edx 
        popl       %ecx 
        popl       %ebx 
xcompile__hla_4331__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret        $36
_hlabe_compile:
hlabe_compile:
        pushl      %ebp 
        movl       %esp, %ebp 
        subl       $2088, %esp 
        mov        %ebx, -4(%ebp) 
        mov        %ecx, -8(%ebp) 
        mov        %edx, -12(%ebp) 
        mov        %esi, -16(%ebp) 
        mov        %edi, -20(%ebp) 
        pushl      %ebp 
        addl       $-1064, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -24(%ebp) 
        pushl      %ebp 
        addl       $-2088, (%esp) 
        pushl      $1024 
        call       STR_INIT
        mov        %eax, -28(%ebp) 
        pushl      8(%ebp) 
        pushl      -24(%ebp) 
        call       STR_CPYZ
        pushl      12(%ebp) 
        pushl      -28(%ebp) 
        call       STR_CPYZ
        pushl      -24(%ebp) 
        pushl      -28(%ebp) 
        pushl      16(%ebp) 
        pushl      20(%ebp) 
        pushl      24(%ebp) 
        pushl      %ebp 
        addl       $-32, (%esp) 
        pushl      %ebp 
        addl       $-36, (%esp) 
        pushl      %ebp 
        addl       $-40, (%esp) 
        pushl      28(%ebp) 
        call       compile__hla_4331
        mov        -4(%ebp), %ebx 
        mov        -8(%ebp), %ecx 
        mov        -12(%ebp), %edx 
        mov        -16(%ebp), %esi 
        mov        -20(%ebp), %edi 
xhlabe_compile__hla_:
        movl       %ebp, %esp 
        popl       %ebp 
        ret








  .text


        .align (2)
len__hla_3401 :.long      0x2
        .long      0x2
str__hla_3401:

 .ascii ", "
 .byte 0

 .byte 0

        .align (2)
len__hla_3443 :.long      0x2e
        .long      0x2e
str__hla_3443:

 .ascii "Attempted to scan beyond the end of the file"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3444 :.long      0x9
        .long      0x9
str__hla_3444:

 .ascii "hlabe.hla"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3468 :.long      0x13
        .long      0x13
str__hla_3468:

 .ascii "Unknown statement: "
 .byte 0


        .align (2)
len__hla_3490 :.long      0x23
        .long      0x23
str__hla_3490:

 .ascii "Expected ')' in expression at line "
 .byte 0


        .align (2)
len__hla_3491 :.long      0x25
        .long      0x25
str__hla_3491:

 .ascii "Unexpected character in expression: '"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3492 :.long      0xa
        .long      0xa
str__hla_3492:

 .ascii "' at line "
 .byte 0

 .byte 0
jmpTbl__hla_3483:
        .long      (case__hla_3484+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3488+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (case__hla_3485+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3486+0)
        .long      (default__hla_3483+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)
        .long      (case__hla_3486+0)

        .align (2)
len__hla_3503 :.long      0x23
        .long      0x23
str__hla_3503:

 .ascii "Illegal relocatable object at line "
 .byte 0


        .align (2)
len__hla_3515 :.long      0x34
        .long      0x34
str__hla_3515:

 .ascii "Expression cannot contain relocatable items at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3529 :.long      0x19
        .long      0x19
str__hla_3529:

 .ascii ".b operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3540 :.long      0x19
        .long      0x19
str__hla_3540:

 .ascii ".w operand out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3582 :.long      0x1a
        .long      0x1a
str__hla_3582:

 .ascii "TByte value out of range"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3635 :.long      0x1a
        .long      0x1a
str__hla_3635:

 .ascii "Filename too long at line "
 .byte 0

 .byte 0

        .align (2)
len__hla_3671 :.long      0x1c
        .long      0x1c
str__hla_3671:

 .ascii "ecx <> NULL hlabe.hla (1977)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3673 :.long      0x29
        .long      0x29
str__hla_3673:

 .ascii "g:\\hla\\hlalibsrc\\trunk\\hlainc\\excepts.hhf"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3681 :.long      0x1c
        .long      0x1c
str__hla_3681:

 .ascii "ecx <> NULL hlabe.hla (2044)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3687 :.long      0x15
        .long      0x15
str__hla_3687:

 .ascii "Syntax error at line "
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3688 :.long      0x13
        .long      0x13
str__hla_3688:

 .ascii ", expected at ','"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_3689 :.long      0x2e
        .long      0x2e
str__hla_3689:

 .ascii "Equate attempted to redefine a symbol at line "
 .byte 0

 .byte 0

        .align (2)
len__hla_3692 :.long      0x2f
        .long      0x2f
str__hla_3692:

 .ascii "End Function symbol must be predefined at line "
 .byte 0


        .align (2)
len__hla_3697 :.long      0x1c
        .long      0x1c
str__hla_3697:

 .ascii "ecx <> NULL hlabe.hla (2168)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3703 :.long      0x2c
        .long      0x2c
str__hla_3703:

 .ascii "Public symbol cannot also be extern at line "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3708 :.long      0x1c
        .long      0x1c
str__hla_3708:

 .ascii "ecx <> NULL hlabe.hla (2259)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3717 :.long      0x1c
        .long      0x1c
str__hla_3717:

 .ascii "ecx <> NULL hlabe.hla (2351)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3723 :.long      0x2a
        .long      0x2a
str__hla_3723:

 .ascii ".ub expected a ',' -- Syntax error at line"
 .byte 0

 .byte 0

        .align (2)
len__hla_3726 :.long      0x2b
        .long      0x2b
str__hla_3726:

 .ascii ".uw expected a ',' -- Syntax error at line "
 .byte 0


        .align (2)
len__hla_3729 :.long      0x2b
        .long      0x2b
str__hla_3729:

 .ascii ".ud expected a ',' -- Syntax error at line "
 .byte 0


        .align (2)
len__hla_3735 :.long      0x1c
        .long      0x1c
str__hla_3735:

 .ascii "ecx <> NULL hlabe.hla (2542)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3741 :.long      0x11
        .long      0x11
str__hla_3741:

 .ascii "External symbol '"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3742 :.long      0x32
        .long      0x32
str__hla_3742:

 .ascii "' is already defined. Error in HLABE code at line "
 .byte 0

 .byte 0
jmpTbl__hla_3665:
        .long      (case__hla_3666+0)
        .long      (case__hla_3667+0)
        .long      (case__hla_3675+0)
        .long      (case__hla_3676+0)
        .long      (case__hla_3684+0)
        .long      (case__hla_3690+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (case__hla_3693+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (default__hla_3665+0)
        .long      (case__hla_3700+0)
        .long      (case__hla_3704+0)
        .long      (case__hla_3711+0)
        .long      (case__hla_3712+0)
        .long      (case__hla_3713+0)
        .long      (case__hla_3720+0)
        .long      (case__hla_3730+0)
        .long      (case__hla_3731+0)
        .long      (case__hla_3738+0)
        .long      (case__hla_3675+0)
        .long      (case__hla_3744+0)

        .align (2)
len__hla_3748 :.long      0x7
        .long      0x7
str__hla_3748:

 .ascii "Symbol "
 .byte 0


        .align (2)
len__hla_3749 :.long      0x23
        .long      0x23
str__hla_3749:

 .ascii " is already defined. Error at line "
 .byte 0


        .align (2)
len__hla_3853 :.long      0x1c
        .long      0x1c
str__hla_3853:

 .ascii "esi <> NULL hlabe.hla (3528)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3883 :.long      0x40
        .long      0x40
str__hla_3883:

 .ascii "Error: Unexpected bss directive encountered in non-bss section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_3888 :.long      0x42
        .long      0x42
str__hla_3888:

 .ascii "Error: Unexpected code directive encountered in non-code section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3891 :.long      0x42
        .long      0x42
str__hla_3891:

 .ascii "Error: Unexpected data directive encountered in non-data section"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_3907 :.long      0x23
        .long      0x23
str__hla_3907:

 .ascii "Object code type is not supported"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_3944 :.long      0x23
        .long      0x23
str__hla_3944:

 .ascii "HLABE Internal error (Bad section):"
 .byte 0


        .align (2)
len__hla_3947 :.long      0x24
        .long      0x24
str__hla_3947:

 .ascii "Internal error: illegal token value:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_3868:
        .long      (case__hla_3869+0)
        .long      (case__hla_3870+0)
        .long      (case__hla_3884+0)
        .long      (case__hla_3869+0)
        .long      (case__hla_3869+0)
        .long      (case__hla_3932+0)
        .long      (case__hla_3945+0)
        .long      (case__hla_3892+0)
        .long      (case__hla_3892+0)
        .long      (case__hla_3892+0)
        .long      (case__hla_3886+0)
        .long      (default__hla_3868+0)
        .long      (case__hla_3889+0)
        .long      (case__hla_3881+0)
        .long      (case__hla_3896+0)
        .long      (case__hla_3897+0)
        .long      (case__hla_3898+0)
        .long      (case__hla_3921+0)
        .long      (case__hla_3908+0)
        .long      (case__hla_3869+0)
        .long      (case__hla_3869+0)
        .long      (case__hla_3869+0)

        .align (2)
len__hla_3977 :.long      0x31
        .long      0x31
str__hla_3977:

 .ascii "Instruction cannot reference an external symbol ("
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_3978 :.long      0x3
        .long      0x3
str__hla_3978:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0

jmpTbl__hla_3963:
        .long      (case__hla_3964+0)
        .long      (case__hla_3968+0)
        .long      (case__hla_3969+0)
        .long      (case__hla_3970+0)
        .long      (case__hla_3964+0)
        .long      (case__hla_3984+0)
        .long      (case__hla_3971+0)
        .long      (case__hla_3972+0)
        .long      (case__hla_3972+0)
        .long      (case__hla_3972+0)
        .long      (case__hla_3965+0)
        .long      (default__hla_3963+0)
        .long      (case__hla_3966+0)
        .long      (case__hla_3967+0)
        .long      (case__hla_3973+0)
        .long      (case__hla_3982+0)
        .long      (case__hla_3979+0)
        .long      (case__hla_3983+0)
        .long      (case__hla_3981+0)
        .long      (case__hla_3964+0)
        .long      (case__hla_3964+0)
        .long      (case__hla_3964+0)

        .align (2)
len__hla_4004 :.long      0x11
        .long      0x11
str__hla_4004:

 .ascii "Undefined symbol:"
 .byte 0

 .byte 0
 .byte 0
jmpTbl__hla_4020:
        .long      (case__hla_4021+0)
        .long      (case__hla_4027+0)
        .long      (case__hla_4029+0)
        .long      (case__hla_4021+0)
        .long      (case__hla_4021+0)
        .long      (case__hla_4042+0)
        .long      (case__hla_4030+0)
        .long      (case__hla_4031+0)
        .long      (case__hla_4031+0)
        .long      (case__hla_4031+0)
        .long      (case__hla_4022+0)
        .long      (default__hla_4020+0)
        .long      (case__hla_4023+0)
        .long      (case__hla_4024+0)
        .long      (case__hla_4032+0)
        .long      (case__hla_4040+0)
        .long      (case__hla_4033+0)
        .long      (case__hla_4041+0)
        .long      (case__hla_4037+0)
        .long      (case__hla_4021+0)
        .long      (case__hla_4021+0)
        .long      (case__hla_4025+0)

        .align (2)
len__hla_4074 :.long      0x8
        .long      0x8
str__hla_4074:

 .ascii "Symbol '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4075 :.long      0x10
        .long      0x10
str__hla_4075:

 .ascii "' is undefined"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4079 :.long      0x2f
        .long      0x2f
str__hla_4079:

 .ascii "Branch target is out of range. "
 .byte 0xd
 .byte 0xa

 .ascii "(displacement="
 .byte 0


        .align (2)
len__hla_4080 :.long      0x28
        .long      0x28
str__hla_4080:

 .ascii " and must be in the range -128..+127)."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4069:
        .long      (case__hla_4070+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4072+0)
        .long      (case__hla_4071+0)
        .long      (case__hla_4104+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4070+0)
        .long      (default__hla_4069+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4076+0)
        .long      (case__hla_4081+0)
        .long      (case__hla_4084+0)
        .long      (case__hla_4097+0)
        .long      (case__hla_4089+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4070+0)
        .long      (case__hla_4070+0)

        .align (2)
len__hla_4111 :.long      0x2d
        .long      0x2d
str__hla_4111:

 .ascii "Internal error (relocations in BSS section)"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4116 :.long      0x1c
        .long      0x1c
str__hla_4116:

 .ascii "ebx <> NULL hlabe.hla (5565)"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4119 :.long      0x12
        .long      0x12
str__hla_4119:

 .ascii "Undefined symbol: "
 .byte 0

 .byte 0

        .align (2)
len__hla_4126 :.long      0x10
        .long      0x10
str__hla_4126:

 .ascii "optimizeDisps:"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4128 :.long      0x5e
        .long      0x5e
str__hla_4128:

 .ascii "Could not optimize (small->large) in 16,384 passes."
 .byte 0xd
 .byte 0xa

 .ascii "Reverting to large->small optimization."
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_4130 :.long      0x15
        .long      0x15
str__hla_4130:

 .ascii "Optimization passes: "
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4131 :.long      0x8
        .long      0x8
str__hla_4131:

 .ascii "+16386"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4133 :.long      0x4
        .long      0x4
str__hla_4133:

 .ascii "+2"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4157 :.long      0x4
        .long      0x4
str__hla_4157:
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4159 :.long      0x2
        .long      0x2
str__hla_4159:

 .ascii ": "
 .byte 0

 .byte 0

        .align (2)
len__hla_4160 :.long      0x3
        .long      0x3
str__hla_4160:

 .ascii ", '"
 .byte 0


        .align (2)
len__hla_4161 :.long      0x3
        .long      0x3
str__hla_4161:

 .ascii "', "
 .byte 0


        .align (2)
len__hla_4164 :.long      0x17
        .long      0x17
str__hla_4164:

 .ascii "IMAGE_REL_I386_ABSOLUTE"
 .byte 0


        .align (2)
len__hla_4166 :.long      0x14
        .long      0x14
str__hla_4166:

 .ascii "IMAGE_REL_I386_DIR32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4168 :.long      0x16
        .long      0x16
str__hla_4168:

 .ascii "IMAGE_REL_I386_DIR32NB"
 .byte 0

 .byte 0

        .align (2)
len__hla_4170 :.long      0x14
        .long      0x14
str__hla_4170:

 .ascii "IMAGE_REL_I386_REL32"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4171 :.long      0x18
        .long      0x18
str__hla_4171:

 .ascii "???? relocation type = $"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4162:
        .long      (case__hla_4163+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (case__hla_4165+0)
        .long      (case__hla_4167+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (default__hla_4162+0)
        .long      (case__hla_4169+0)

        .align (2)
len__hla_4178 :.long      0x20
        .long      0x20
str__hla_4178:

 .ascii "generateCOFF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4179 :.long      0x13
        .long      0x13
str__hla_4179:
 .byte 0xd
 .byte 0xa

 .ascii "Output filename: "
 .byte 0

divisor__hla_4180: .long 18

        .align (2)
len__hla_4182 :.long      0x5
        .long      0x5
str__hla_4182:

 .ascii ".text"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4184 :.long      0x5
        .long      0x5
str__hla_4184:

 .ascii ".data"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4185 :.long      0x4
        .long      0x4
str__hla_4185:

 .ascii ".bss"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4192 :.long      0x1c
        .long      0x1c
str__hla_4192:
 .byte 0xd
 .byte 0xa

 .ascii "COFF Symbol table (#syms: "
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4193 :.long      0x5
        .long      0x5
str__hla_4193:

 .ascii ")"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4197 :.long      0x2
        .long      0x2
str__hla_4197:

 .ascii " :"
 .byte 0

 .byte 0

        .align (2)
len__hla_4200 :.long      0x6
        .long      0x6
str__hla_4200:

 .ascii "static"
 .byte 0

 .byte 0

        .align (2)
len__hla_4203 :.long      0x8
        .long      0x8
str__hla_4203:

 .ascii "external"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4204 :.long      0x6
        .long      0x6
str__hla_4204:

 .ascii "public"
 .byte 0

 .byte 0

        .align (2)
len__hla_4205 :.long      0x4
        .long      0x4
str__hla_4205:

 .ascii "????"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4206 :.long      0x19
        .long      0x19
str__hla_4206:

 .ascii "Code Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4207 :.long      0x19
        .long      0x19
str__hla_4207:

 .ascii "Data Section Relocations:"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4226 :.long      0x1f
        .long      0x1f
str__hla_4226:

 .ascii "generateELF:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0


        .align (2)
len__hla_4227 :.long      0x9
        .long      0x9
str__hla_4227:

 .ascii ".shstrtab"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4228 :.long      0x7
        .long      0x7
str__hla_4228:

 .ascii ".symtab"
 .byte 0


        .align (2)
len__hla_4229 :.long      0x7
        .long      0x7
str__hla_4229:

 .ascii ".strtab"
 .byte 0


        .align (2)
len__hla_4230 :.long      0x9
        .long      0x9
str__hla_4230:

 .ascii ".rel.text"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4231 :.long      0x9
        .long      0x9
str__hla_4231:

 .ascii ".rel.data"
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4257 :.long      0x1f
        .long      0x1f
str__hla_4257:

 .ascii "Unknown ELF format specified!"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_4275 :.long      0x21
        .long      0x21
str__hla_4275:

 .ascii "generateMacho:"
 .byte 0xd
 .byte 0xa

 .ascii "Input filename:  "
 .byte 0

 .byte 0
 .byte 0

        .align (2)
len__hla_4335 :.long      0x48
        .long      0x48
str__hla_4335:

 .ascii "------------"
 .byte 0xd
 .byte 0xa

 .ascii "HLA Back Engine Object code formatter"
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa

 .ascii "HLABE compiling '"
 .byte 0

 .byte 0
 .byte 0
 .byte 0

        .align (2)
len__hla_4336 :.long      0x6
        .long      0x6
str__hla_4336:

 .ascii "' to '"
 .byte 0

 .byte 0

        .align (2)
len__hla_4337 :.long      0x3
        .long      0x3
str__hla_4337:

 .ascii "'"
 .byte 0xd
 .byte 0xa
 .byte 0


        .align (2)
len__hla_4345 :.long      0x38
        .long      0x38
str__hla_4345:

 .ascii "Illegal object-code format specified -- compile failed"
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0
 .byte 0
 .byte 0
jmpTbl__hla_4340:
        .long      (case__hla_4341+0)
        .long      (case__hla_4342+0)
        .long      (case__hla_4343+0)
        .long      (case__hla_4344+0)

        .align (2)
len__hla_4347 :.long      0x12
        .long      0x12
str__hla_4347:

 .ascii "Symbol table: "
 .byte 0xd
 .byte 0xa
 .byte 0xd
 .byte 0xa
 .byte 0

 .byte 0

        .align (2)
len__hla_4353 :.long      0x3
        .long      0x3
str__hla_4353:

 .ascii "  $"
 .byte 0


        .align (2)
len__hla_4354 :.long      0x6
        .long      0x6
str__hla_4354:

 .ascii ", sec:"
 .byte 0

 .byte 0

        .align (2)
len__hla_4355 :.long      0x8
        .long      0x8
str__hla_4355:

 .ascii ", index:"
 .byte 0

 .byte 0
 .byte 0
 .byte 0
idSet__hla_3451 :.byte  0x0,0x0,0x0,0x0,0x10,0x40,0xff,0x83,0xff,0xff,0xff,0x87,0xfe,0xff,0xff,0x7
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
        .byte      0x0
filenameDelims__hla_3629 :.byte  0xff,0xff,0xff,0xff,0x1,0x10,0x0,0x8,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
_0e55_msg___hla_3670 :.long  str__hla_3671
_0e5f_msg___hla_3680 :.long  str__hla_3681
_0e6f_msg___hla_3696 :.long  str__hla_3697
_0e7a_msg___hla_3707 :.long  str__hla_3708
_0e83_msg___hla_3716 :.long  str__hla_3717
_0e95_msg___hla_3734 :.long  str__hla_3735
_0f0b_msg___hla_3852 :.long  str__hla_3853
_1012_msg___hla_4115 :.long  str__hla_4116




  .data

        .globl    ExceptionPtr__hla_
        .globl    _VMT_table_t___hla_
        .globl    AssertionStr
        .align (2)
        .align (2)
COFFsyms__hla_3357 :.space     4
numCOFFsyms__hla_3358 :.space     4
coffSymSize__hla_3359 :.space     4
ELFsyms__hla_3360 :.space     4
numELFsyms__hla_3361 :.space     4
elfSymSize__hla_3362 :.space     4
MachoSyms__hla_3363 :.space     4
MachoSymSize__hla_3364 :.space     4
numMachoSyms__hla_3365 :.space     4
stringTable__hla_3366 :.space     4
strTblOffset__hla_3367 :.space     4
strTblSize__hla_3368 :.space     4
codeSize :.space     4
codeStart__hla_3369 :.space     4
codeEnd__hla_3370 :.space     4
numCodeRelocs :.space     4
dataSize :.space     4
dataStart__hla_3371 :.space     4
dataEnd__hla_3372 :.space     4
numDataRelocs :.space     4
bssSize :.space     4
bssStart__hla_3373 :.space     4
bssEnd__hla_3374 :.space     4
symbolTable :.space     16
equatesTable :.space     16
currentSection :.byte  0x1
verboseDebug__hla_3375 :.byte  0x0
        .align (2)
MainPgmVMT__hla_3386 :.long      QuitMain__hla_
MainPgmCoroutine__hla_3387:
        .long      MainPgmVMT__hla_3386
        .long      0x0
        .long      0x0
SaveSEHPointer__hla_3388 :.long  0x0
        .long      0x0
        .long      0x0
saveESP__hla_3389 :.space     4
lineNumber__hla_3407 :.long  0x1
tknListTail__hla_3408 :.space     4
lastTailPtr__hla_3409 :.space     4
codeListTail__hla_3410 :.space     4
dataListTail__hla_3411 :.space     4
bssListTail__hla_3412 :.space     4
end_source__hla_3413 :.space     4
start_stmt__hla_3414 :.space     4
CodeAuxSection__hla_4140:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x1
        .byte      0x0
DataAuxSection__hla_4141:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x2
        .byte      0x0
BssAuxSection__hla_4142:
        .long      0x0
        .word      0x0
        .word      0x0
        .long      0x0
        .long      0x3
        .byte      0x0
NULLsection__hla_4214:
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
shstrtabSection__hla_4215:
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
symtabSection__hla_4216:
        .long      0x0
        .long      0x2
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x4
        .long      0x10
strtabSection__hla_4217:
        .long      0x0
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x1
        .long      0x0
textSection__hla_4218:
        .long      0x0
        .long      0x1
        .long      0x6
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
dataSection__hla_4219:
        .long      0x0
        .long      0x1
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
bssSection__hla_4220:
        .long      0x0
        .long      0x8
        .long      0x3
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x4
        .long      0x0
relTextSection__hla_4221:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x4
        .long      0x4
        .long      0x8
relDataSection__hla_4222:
        .long      0x0
        .long      0x9
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x0
        .long      0x2
        .long      0x5
        .long      0x4
        .long      0x8





